results$cont_avg = apply(results,
1,
function(x) {
return(boot_var_vary(
beta_1,
beta_2,
beta_3,
beta_4 = x[[1]],
n = x[[2]],
sd_n = 0,
K = 20,
p_x = NA,
mu_x = 10,
sigma_x_sq = 2,
icc_x = 0.01,
bar_W = 0.5,
sigma_gamma_sq
))
})
results
results = expand.grid(beta_4 = c(0.05,0.5)*beta_2,
n = 50,
sd_n = c(4,10))
# results$binary_vary
# results$binary_avg - logit_var
# results$cont_vary
# results$cont_avg
results$binary_vary = apply(results,
1,
function(x) {
return(boot_var_vary(
beta_1,
beta_2,
beta_3,
beta_4 = x[[1]],
n = x[[2]],
sd_n = x[[3]],
K = 20,
p_x = 0.4418,
mu_x = NA,
sigma_x_sq = NA,
icc_x = 0.007,
bar_W = 0.5,
sigma_gamma_sq,
binX = TRUE
))
})
results$binary_avg = apply(results,
1,
function(x) {
return(logit_var(
beta_1,
beta_2,
beta_3,
beta_4 = x[[1]],
n = x[[2]],
p_x = 0.4418,
icc_x = 0.007,
bar_W = 0.5,
sigma_gamma_sq
))
})
results$cont_vary = apply(results,
1,
function(x) {
return(boot_var_vary(
beta_1,
beta_2,
beta_3,
beta_4 = x[[1]],
n = x[[2]],
sd_n = x[[3]],
K = 20,
p_x = NA,
mu_x = 10,
sigma_x_sq = 2,
icc_x = 0.01,
bar_W = 0.5,
sigma_gamma_sq
))
})
results$cont_avg = apply(results,
1,
function(x) {
return(boot_var_vary(
beta_1,
beta_2,
beta_3,
beta_4 = x[[1]],
n = x[[2]],
sd_n = 0,
K = 20,
p_x = NA,
mu_x = 10,
sigma_x_sq = 2,
icc_x = 0.01,
bar_W = 0.5,
sigma_gamma_sq
))
})
results
boot_var_vary <- function(beta_1,
beta_2,
beta_3,
beta_4,
n,
sd_n,
K,
p_x,
sigma_x_sq,
mu_x,
icc_x,
bar_W,
sigma_gamma_sq,
binX = FALSE) {
sigma <- function(W, X, beta_4) {
mu <- expit(beta_1+beta_2*W+beta_3*X+beta_4*X*W)
return(1/(mu*(1-mu)))
}
treatment <- data.frame(group = 1:K,
W = c(rep(1, round(bar_W*K)),
rep(0, K-round(bar_W*K))))
oneStep <- function() {
n_vector <- round(n + rnorm(K,0,sd_n))
n_vector[n_vector<5] = 5
data = data.frame(id = unlist(lapply(1:K, function(k) {1:n_vector[k]})),
group=rep(1:K,n_vector))
data = merge(data, treatment, by = c("group"), all.x = TRUE)
if (binX) {
Z_k <- rep(rbinom(K, 1, p_x),n_vector)
Y_ki <-  unlist(lapply(1:K, function(k) {rbinom(n_vector[k],1,p_x)}))
U_ki <- unlist(lapply(1:K, function(k) {rbinom(n_vector[k],1,sqrt(icc_x))}))
data$X <- (1-U_ki)*Y_ki + U_ki*Z_k
} else {
cluster_eff = rnorm(K, 0, sqrt(icc_x*sigma_x_sq))
data$X = mu_x + rnorm(nrow(data),0,sqrt(sigma_x_sq*(1-icc_x))) +
apply(data,
1,
function(x) {
cluster_eff[as.numeric(x["group"])]
})
}
data$W_X = data$W * data$X
data$sigma_sq = sigma(data$W, data$X, beta_4)
XWX_k = lapply(1:K, function(k) {
ones <- rep(1,n_vector[k])
data.group = data[data$group == k,]
X = t(matrix(c(ones,
data.group$W,
data.group$X,
data.group$W_X),
byrow=TRUE, nrow=4))
V <- diag(data.group$sigma_sq) + sigma_gamma_sq * ones %*% t(ones)
return((t(X) %*% solve(V) %*% X))
})
solve(Reduce('+', XWX_k))[4,4]*K
}
vars = unlist(lapply(1:R, function(i) {
oneStep()
}))
return(mean(vars))
}
beta_1 = log(0.14/(1-0.14))
beta_2 = log(0.14/(1-0.14)) - log(0.1/(1-0.1))
beta_3 = 0
sigma_gamma_sq = 0.32
results = expand.grid(beta_4 = c(0.05,0.5)*beta_2,
n = c(30,50,100),
sd_n = c(4,10,20))
# results$binary_vary
# results$binary_avg - logit_var
# results$cont_vary
# results$cont_avg
results$binary_vary = apply(results,
1,
function(x) {
return(boot_var_vary(
beta_1,
beta_2,
beta_3,
beta_4 = x[[1]],
n = x[[2]],
sd_n = x[[3]],
K = 20,
p_x = 0.4418,
mu_x = NA,
sigma_x_sq = NA,
icc_x = 0.007,
bar_W = 0.5,
sigma_gamma_sq,
binX = TRUE
))
})
results$binary_avg = apply(results,
1,
function(x) {
return(logit_var(
beta_1,
beta_2,
beta_3,
beta_4 = x[[1]],
n = x[[2]],
p_x = 0.4418,
icc_x = 0.007,
bar_W = 0.5,
sigma_gamma_sq
))
})
results$cont_vary = apply(results,
1,
function(x) {
return(boot_var_vary(
beta_1,
beta_2,
beta_3,
beta_4 = x[[1]],
n = x[[2]],
sd_n = x[[3]],
K = 20,
p_x = NA,
mu_x = 10,
sigma_x_sq = 2,
icc_x = 0.01,
bar_W = 0.5,
sigma_gamma_sq
))
})
results$cont_avg = apply(results,
1,
function(x) {
return(boot_var_vary(
beta_1,
beta_2,
beta_3,
beta_4 = x[[1]],
n = x[[2]],
sd_n = 0,
K = 20,
p_x = NA,
mu_x = 10,
sigma_x_sq = 2,
icc_x = 0.01,
bar_W = 0.5,
sigma_gamma_sq
))
})
results
View(results)
library(reshape)
results %>%
dplyr::select(beta_4,n,sd_n,bin_vary,bin_avg) %>%
gather(key = "type", value="sigma_4_sq", bin_vary, bin_avg)
?gather
??gather
library(tidyr)
results %>%
dplyr::select(beta_4,n,sd_n,bin_vary,bin_avg) %>%
gather(key = "type", value="sigma_4_sq", bin_vary, bin_avg)
results %>%
dplyr::select(beta_4,n,sd_n,binary_vary,binary_avg) %>%
gather(key = "type", value="sigma_4_sq", binary_vary, binary_avg)
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,binary_vary,binary_avg) %>%
gather(key = "type", value="sigma_4_sq", binary_vary, binary_avg) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type))) +
geom_point() +
facet_wrap(~n)
library(ggplot2)
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,binary_vary,binary_avg) %>%
gather(key = "type", value="sigma_4_sq", binary_vary, binary_avg) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type))) +
geom_point() +
facet_wrap(~n)
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,binary_vary,binary_avg) %>%
gather(key = "type", value="sigma_4_sq", binary_vary, binary_avg) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type), col=factor(type))) +
geom_point() +
facet_wrap(~n)
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,cont_vary,cont_avg) %>%
gather(key = "type", value="sigma_4_sq", cont_vary, cont_avg) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type), col=factor(type))) +
geom_point() +
facet_wrap(~n)
save(results, filename="results.Rda")
?save
save(results, file="results.Rda")
load("/Users/laramaleyeff/Dropbox/dissertation/paper2/rcode/results.Rda")
results
load("/Users/laramaleyeff/Dropbox/dissertation/paper2/rcode/results.Rda")
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,binary_vary,binary_avg) %>%
gather(key = "type", value="sigma_4_sq", binary_vary, binary_avg) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type), col=factor(type))) +
geom_point() +
facet_wrap(~n)
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,binary_vary,binary_avg) %>%
gather(key = "type", value="sigma_4_sq", binary_vary, binary_avg) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type), col=factor(type))) +
geom_point() +
facet_wrap(~n, scales="free_y")
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,cont_vary,cont_avg) %>%
gather(key = "type", value="sigma_4_sq", cont_vary, cont_avg) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type), col=factor(type))) +
geom_point() +
facet_wrap(~n, scales = "free_y")
results$cont_avg
results
results %>%
group_by(beta_4,n) %>%
dplyr::summarize(
bin_avg_adj = mean(binary_avg),
cont_avg_adj = mean(cont_avg))
results = merge(results, results_adj, by = c("beta_4","n"), all.x = TRUE)
results_adj = results %>%
group_by(beta_4,n) %>%
dplyr::summarize(
bin_avg_adj = mean(binary_avg),
cont_avg_adj = mean(cont_avg))
results = merge(results, results_adj, by = c("beta_4","n"), all.x = TRUE)
results
results_adj = results %>%
group_by(beta_4,n) %>%
dplyr::summarize(
binary_avg_adj = mean(binary_avg),
cont_avg_adj = mean(cont_avg))
results = merge(results, results_adj, by = c("beta_4","n"), all.x = TRUE)
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,binary_vary,binary_avg_adj) %>%
gather(key = "type", value="sigma_4_sq", binary_vary, binary_avg_adj) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type), col=factor(type))) +
geom_point() +
facet_wrap(~n, scales="free_y")
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,cont_vary,cont_avg_adj) %>%
gather(key = "type", value="sigma_4_sq", cont_vary, cont_avg_adj) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type), col=factor(type))) +
geom_point() +
facet_wrap(~n, scales = "free_y")
results
load("/Users/laramaleyeff/Dropbox/dissertation/paper2/rcode/results.Rda")
results_adj = results %>%
group_by(beta_4,n) %>%
dplyr::summarize(
binary_avg_adj = mean(binary_avg),
cont_avg_adj = mean(cont_avg))
results = merge(results, results_adj, by = c("beta_4","n"), all.x = TRUE)
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,binary_vary,binary_avg_adj) %>%
gather(key = "type", value="sigma_4_sq", binary_vary, binary_avg_adj) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type), col=factor(type))) +
geom_point() +
facet_wrap(~n, scales="free_y")
results %>%
filter(beta_4 > 0.02) %>%
dplyr::select(n,sd_n,cont_vary,cont_avg_adj) %>%
gather(key = "type", value="sigma_4_sq", cont_vary, cont_avg_adj) %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(type), col=factor(type))) +
geom_point() +
facet_wrap(~n, scales = "free_y")
load("/Users/laramaleyeff/Dropbox/dissertation/paper2/rcode/results.Rda")
results %>%
ggplot(aes(x=sd_n, y=sigma_4_sq, group=factor(beta_4), col=factor(type))) +
geom_point() +
facet_wrap(~n, scales="free_y")
results %>%
ggplot(aes(x=sd_n, y=binary_vary, group=factor(beta_4), col=factor(type))) +
geom_point() +
facet_wrap(~n, scales="free_y")
results %>%
ggplot(aes(x=sd_n, y=binary_vary, group=factor(beta_4), col=factor(beta_4))) +
geom_point() +
facet_wrap(~n, scales="free_y")
results %>%
ggplot(aes(x=sd_n, y=cont_vary, group=factor(beta_4), col=factor(beta_4))) +
geom_point() +
facet_wrap(~n, scales = "free_y")
load("/Users/laramaleyeff/Dropbox/dissertation/paper2/rcode/results.Rda")
results %>%
ggplot(aes(x=sd_n, y=binary_vary, group=factor(beta_4), col=factor(beta_4))) +
geom_point() +
facet_wrap(~n, scales="free_y")
results %>%
ggplot(aes(x=sd_n, y=cont_vary, group=factor(beta_4), col=factor(beta_4))) +
geom_point() +
facet_wrap(~n, scales = "free_y")
load("/Users/laramaleyeff/Dropbox/dissertation/paper2/rcode/results.Rda")
results %>%
ggplot(aes(x=sd_n, y=binary_vary, group=factor(beta_4), col=factor(beta_4))) +
geom_point() +
facet_wrap(~n, scales="free_y")
results %>%
ggplot(aes(x=sd_n, y=cont_vary, group=factor(beta_4), col=factor(beta_4))) +
geom_point() +
facet_wrap(~n, scales = "free_y")
results %>%
ggplot(aes(x=sd_n, y=binary_vary, group=factor(beta_4), col=factor(beta_4))) +
geom_point() +
facet_wrap(~n, scales="free_y")
library(viridis)
library(doParallel)
library(dplyr)
library(tidyr)
p_x = 0.5
beta_1 <- log(0.14/(1-0.14))
beta_2 <- log(0.14/(1-0.14)) - log(0.1/(1-0.1))
beta_3 <- 0.1
bar_W <- 0.5
n = 50
K = 40
sigma_gamma_sq <- 0.1
expgrid = expand.grid(icc_x = seq(0,0.5,by=0.01),
beta_4 = seq(-1,1,by=0.01))
expgrid$logit_var <- foreach(scenario = 1:nrow(expgrid), .combine=rbind) %do%
logit_var(beta_1,
beta_2,
beta_3,
expgrid[scenario,]$beta_4,
n,
p_x,
expgrid[scenario,]$icc_x,
bar_W,
sigma_gamma_sq)
expgrid$linear_var <- foreach(scenario = 1:nrow(expgrid), .combine=rbind) %do%
linear_var(beta_1,
beta_2,
beta_3,
expgrid[scenario,]$beta_4,
n,
p_x,
expgrid[scenario,]$icc_x,
bar_W,
sigma_gamma_sq)
expgrid$ratio = expgrid$linear_var/expgrid$logit_var
expgrid$logit_power <- foreach(scenario = 1:nrow(expgrid), .combine=rbind) %do%
get_power_logit(K,
beta_1,
beta_2,
beta_3,
expgrid[scenario,]$beta_4,
n,
p_x,
expgrid[scenario,]$icc_x,
bar_W,
sigma_gamma_sq)
expgrid$linear_power <- foreach(scenario = 1:nrow(expgrid), .combine=rbind) %do%
get_power_linear(K,
beta_1,
beta_2,
beta_3,
expgrid[scenario,]$beta_4,
n,
p_x,
expgrid[scenario,]$icc_x,
bar_W,
sigma_gamma_sq)
expgrid %>%
mutate(ratio = logit_power/linear_power,
ratio_cat = cut(ratio,
breaks = quantile(ratio),
include.lowest=TRUE)
) %>%
ggplot(aes(x=icc_x,y=beta_4,fill=ratio_cat)) +
geom_tile() +
labs(x=expression(paste("Covariate ICC (", rho[x], ")", sep="")),
y=expression(paste("log odds ratio (",beta[4],")",sep="")),
fill="Ratio of power")
expgrid %>%
mutate(ratio = logit_power/linear_power,
ratio_cat = cut(ratio,
breaks = quantile(ratio),
include.lowest=TRUE)
) %>%
View()
expgrid %>%
filter(logit_power > 70, logit_power < 90) %>%
mutate(ratio = logit_power/linear_power,
ratio_cat = cut(ratio,
breaks = quantile(ratio),
include.lowest=TRUE)
) %>%
ggplot(aes(x=icc_x,y=beta_4,fill=ratio_cat)) +
geom_tile() +
labs(x=expression(paste("Covariate ICC (", rho[x], ")", sep="")),
y=expression(paste("log odds ratio (",beta[4],")",sep="")),
fill="Ratio of power")
expgrid %>%
filter(logit_power > 70, logit_power < 90) %>%
mutate(ratio = logit_power/linear_power,
ratio_cat = cut(ratio,
breaks = quantile(ratio),
include.lowest=TRUE)
) %>%
ggplot(aes(x=icc_x,y=beta_4,fill=ratio)) +
geom_tile() +
labs(x=expression(paste("Covariate ICC (", rho[x], ")", sep="")),
y=expression(paste("log odds ratio (",beta[4],")",sep="")),
fill="Ratio of power")
