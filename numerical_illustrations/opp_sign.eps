%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: opp_sign.pdf
%%Creator: (Adobe Acrobat 22.3.0)
%%For: laramaleyeff
%%CreationDate: 1/18/23, 9:35 AM
%%BoundingBox: 0 0 792 612
%%HiResBoundingBox: 0 0 792 612
%%CropBox: 0 0 792 612
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 693 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.0-c000 79.cca54b0, 2022/11/26-09:29:55        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2023-01-16T10:25:33"
   xmp:CreatorTool="R"
   xmp:ModifyDate="2023-01-16T10:25:33"
   pdf:Producer="R 4.2.1"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">R Graphics Output</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -612 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 612 li
792 612 li
792 0 li
cp
clp
gsave
0 306 mo
792 306 li
792 0 li
0 0 li
cp
clp
0 306 mo
792 306 li
792 0 li
0 0 li
cp
false sop
0 0 0 0 cmyk
f
1.07 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
0 306 mo
792 306 li
792 0 li
0 0 li
cp
@
grestore
gsave
35.22 270.07 mo
261.27 270.07 li
261.27 22.69 li
35.22 22.69 li
cp
clp
35.22 270.07 mo
261.27 270.07 li
261.27 22.69 li
35.22 22.69 li
cp
false sop
.0658884 .0466316 .0484627 0 cmyk
f
.53 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
35.22 267.27 mo
261.27 267.27 li
0 0 0 0 cmyk
@
35.22 195.59 mo
261.27 195.59 li
@
35.22 123.92 mo
261.27 123.92 li
@
35.22 52.24 mo
261.27 52.24 li
@
66.04 270.07 mo
66.04 22.69 li
@
107.14 270.07 mo
107.14 22.69 li
@
148.24 270.07 mo
148.24 22.69 li
@
189.34 270.07 mo
189.34 22.69 li
@
230.44 270.07 mo
230.44 22.69 li
@
1.07 lw
35.22 231.43 mo
261.27 231.43 li
@
35.22 159.75 mo
261.27 159.75 li
@
35.22 88.08 mo
261.27 88.08 li
@
45.49 270.07 mo
45.49 22.69 li
@
86.59 270.07 mo
86.59 22.69 li
@
127.69 270.07 mo
127.69 22.69 li
@
168.79 270.07 mo
168.79 22.69 li
@
209.89 270.07 mo
209.89 22.69 li
@
250.99 270.07 mo
250.99 22.69 li
@
45.49 155.5 mo
49.6 154.86 li
66.04 153.2 li
86.59 152.07 li
127.69 150.96 li
250.99 149.87 li
0 .676905 .505577 0 cmyk
@
45.49 155.5 mo
49.6 154.29 li
66.04 151.06 li
86.59 148.84 li
127.69 146.63 li
250.99 144.42 li
.409003 .236759 1 .0179446 cmyk
@
45.49 155.5 mo
49.6 153.56 li
66.04 148.29 li
86.59 144.59 li
127.69 140.83 li
250.99 137 li
.742672 0 .706081 0 cmyk
@
45.49 155.5 mo
49.6 152.08 li
66.04 142.42 li
86.59 135.3 li
127.69 127.76 li
250.99 119.78 li
.674006 .147494 0 0 cmyk
@
45.49 155.5 mo
49.6 147.43 li
66.04 121.51 li
86.59 98.77 li
127.69 70.36 li
250.99 33.93 li
.250126 .628443 0 0 cmyk
@
grestore
gsave
266.75 270.07 mo
492.8 270.07 li
492.8 22.69 li
266.75 22.69 li
cp
clp
266.75 270.07 mo
492.8 270.07 li
492.8 22.69 li
266.75 22.69 li
cp
false sop
.0658884 .0466316 .0484627 0 cmyk
f
.53 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
266.75 267.27 mo
492.8 267.27 li
0 0 0 0 cmyk
@
266.75 195.59 mo
492.8 195.59 li
@
266.75 123.92 mo
492.8 123.92 li
@
266.75 52.24 mo
492.8 52.24 li
@
297.57 270.07 mo
297.57 22.69 li
@
338.67 270.07 mo
338.67 22.69 li
@
379.77 270.07 mo
379.77 22.69 li
@
420.87 270.07 mo
420.87 22.69 li
@
461.97 270.07 mo
461.97 22.69 li
@
1.07 lw
266.75 231.43 mo
492.8 231.43 li
@
266.75 159.75 mo
492.8 159.75 li
@
266.75 88.08 mo
492.8 88.08 li
@
277.02 270.07 mo
277.02 22.69 li
@
318.12 270.07 mo
318.12 22.69 li
@
359.22 270.07 mo
359.22 22.69 li
@
400.32 270.07 mo
400.32 22.69 li
@
441.42 270.07 mo
441.42 22.69 li
@
482.52 270.07 mo
482.52 22.69 li
@
277.02 214.54 mo
281.13 214.13 li
297.57 213.27 li
318.12 212.83 li
359.22 212.46 li
482.52 212.15 li
0 .676905 .505577 0 cmyk
@
277.02 214.54 mo
281.13 213.58 li
297.57 211.55 li
318.12 210.46 li
359.22 209.56 li
482.52 208.8 li
.409003 .236759 1 .0179446 cmyk
@
277.02 214.54 mo
281.13 212.89 li
297.57 209.29 li
318.12 207.32 li
359.22 205.66 li
482.52 204.23 li
.742672 0 .706081 0 cmyk
@
277.02 214.54 mo
281.13 211.46 li
297.57 204.39 li
318.12 200.3 li
359.22 196.72 li
482.52 193.56 li
.674006 .147494 0 0 cmyk
@
277.02 214.54 mo
281.13 206.87 li
297.57 185.72 li
318.12 170.62 li
359.22 155.09 li
482.52 139.12 li
.250126 .628443 0 0 cmyk
@
grestore
gsave
498.28 270.07 mo
724.33 270.07 li
724.33 22.69 li
498.28 22.69 li
cp
clp
498.28 270.07 mo
724.33 270.07 li
724.33 22.69 li
498.28 22.69 li
cp
false sop
.0658884 .0466316 .0484627 0 cmyk
f
.53 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
498.28 267.27 mo
724.33 267.27 li
0 0 0 0 cmyk
@
498.28 195.59 mo
724.33 195.59 li
@
498.28 123.92 mo
724.33 123.92 li
@
498.28 52.24 mo
724.33 52.24 li
@
529.1 270.07 mo
529.1 22.69 li
@
570.2 270.07 mo
570.2 22.69 li
@
611.3 270.07 mo
611.3 22.69 li
@
652.4 270.07 mo
652.4 22.69 li
@
693.5 270.07 mo
693.5 22.69 li
@
1.07 lw
498.28 231.43 mo
724.33 231.43 li
@
498.28 159.75 mo
724.33 159.75 li
@
498.28 88.08 mo
724.33 88.08 li
@
508.55 270.07 mo
508.55 22.69 li
@
549.65 270.07 mo
549.65 22.69 li
@
590.75 270.07 mo
590.75 22.69 li
@
631.85 270.07 mo
631.85 22.69 li
@
672.95 270.07 mo
672.95 22.69 li
@
714.05 270.07 mo
714.05 22.69 li
@
508.55 258.82 mo
512.66 258.59 li
529.1 258.26 li
549.65 258.15 li
590.75 258.07 li
714.05 258.01 li
0 .676905 .505577 0 cmyk
@
508.55 258.82 mo
512.66 258.11 li
529.1 257.11 li
549.65 256.74 li
590.75 256.49 li
714.05 256.31 li
.409003 .236759 1 .0179446 cmyk
@
508.55 258.82 mo
512.66 257.5 li
529.1 255.57 li
549.65 254.84 li
590.75 254.34 li
714.05 253.98 li
.742672 0 .706081 0 cmyk
@
508.55 258.82 mo
512.66 256.22 li
529.1 252.14 li
549.65 250.52 li
590.75 249.37 li
714.05 248.51 li
.674006 .147494 0 0 cmyk
@
508.55 258.82 mo
512.66 251.88 li
529.1 237.74 li
549.65 230.59 li
590.75 224.83 li
714.05 220.11 li
.250126 .628443 0 0 cmyk
@
grestore
gsave
35.22 22.69 mo
261.27 22.69 li
261.27 5.47998 li
35.22 5.47998 li
cp
clp
35.22 22.69 mo
261.27 22.69 li
261.27 5.47998 li
35.22 5.47998 li
cp
false sop
.13547 .104463 .108492 0 cmyk
f
.72607 .666682 .65243 .782284 cmyk
%ADOBeginSubsetFont: Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c0000038c6670676d00000000000004b800000b90
676c796600000000000062a4000414b06865616400000000000010480000
003668686561000000000000108000000024686d747800000000000010a4
000023306c6f636100000000000033d4000023346d617870000000000000
5708000000206e616d6500000000000057280000070c7072657000000000
00005e340000046e67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300400009
fb020600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a002a0093007600a000ac00b800ab00c50000002bfe55001a
042f002105be002740292a292827262524232221201f1e1d1c1b1a191817
161514131211100d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b000
43617d6818b0004360442d2c45b01a234445b01923442d2c2045b0032545
6164b050515845441b2121592d2c20b0032552582359212d2c69b04061b0
008b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0
112bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb01745
8cb0172344b0177ae5182d2cb002254661658a46b040608b482d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b003
2545b019236a4445b01a23444565234520b00325606a20b009234223688a
6a606120b0005258b21a401a4523614459b0005058b21940194523614459
2d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7
830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c456920b00943b0022660b00325b00525
4961b0805358b21940194523616844b21a401a4523606a44b209191a4565
2345604259b00943608a103a2d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c764520b003
254523616818236860442d2c7645b00325452361682318456860442d2c76
45b0032545616823452361442d2c4569b014b0324b505821b0205961442d
b8002b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db8002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db8002f2c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db800302c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db800312c2020456944
b001602020457d691844b001602db800322cb800312a2db800332c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db800342c4b535845441b2121592db800352c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800362c20
20456944b001602db800372cb800362a212db800382c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800392c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db8003b2c2020456944b00160202045
7d691844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db800402c2020456944b001
602db800412cb800402a212db800422c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db800432c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db800442c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db800452c2020456944b001602020457d691844b001
602db800462cb800452a2db800472c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
482c4b535845441b2121592db800492c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db8004a2c2020456944b001602db8004b2c
b8004a2a212db8004c2c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db8004d2c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db8004f2c2020456944b001602020457d691844b001602db800502c
b8004f2a2db800512c4b20b003265358b0801bb040598a8a20b003265358
2321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b003
2653582321b801408a8a1b8a235920b80003265358b0032545b801805058
2321b8018023211bb003254523212321591b2159442db800522c4b535845
441b2121592db800532c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db800542c2020456944b001602db800552cb800542a212d
b800562c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db800572c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800582c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80059
2c2020456944b001602020457d691844b001602db8005a2cb800592a2db8
005b2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a
1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db8005c2c4b535845441b2121592db8005d2c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db8005e2c2020456944b00160
2db8005f2cb8005e2a212db800602c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800612c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800622c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800632c2020456944b001602020457d691844b00160
2db800642cb800632a2db800652c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db800662c4b535845441b2121592d0001
00000000000067a8ffcc5f0f3cf500110800000000005f4d8f0000000000
d8b9a29bf865fc270b9108f9000000090001000100000000000100000629
fe2900000c01f865fced0b910001000000000000000000000000000008cc
05120042000000000239000002390000023900ed02d70052047300000473
0040071d0042055600590187009c02aa008e02aa0044031d004e04ac005c
023900aa02aa0055023900af0239000004730040047300c4047300400473
003104730034047300420473004d0473004b0473004204730049023900e3
023900e304ac001c04ac005c04ac001c0473009c081f00e10556001e0556
009705c7005a05c700a5055600af04e300af0639006305c700a1023900c9
040000230556009c0473009c06aa009705c7009c06390050055600af0639
005005c700b40556006004e3002105c700aa05560034078d00250556002a
0556002a04e3002f023900800239ffbb0239002f03c100780473000002aa
002604730052047300760400003b04730038047300480239001c0473003d
0473008401c7008401c7ffda0400008001c7008906aa0084047300840473
003b047300760473003c02aa00890400004202390017047300800400000b
05c700120400000b040000150400003402acffd50214009002ac002a04ac
00120556001e0556001e05c7005a055600af05c7009c0639005005c700aa
0473005204730052047300520473005204730052047300520400003b0473
004804730048047300480473004802390067023900080239000002390025
047300840473003b0473003b0473003b0473003b0473003b047300800473
00800473008004730080047300500333006f04730068047300380473004b
02cd0095044cfff504e300c705e5001505e50012080000ed02aa008a02aa
00520464005c080000100639004205b4002a0464005c0464005a0464005c
0473ffe1049cffb403f4006a05b400280696001c0464002f0231ff7902f6
003b02ec00310625005e071d004904e3005c04e300ba02aa00e804ac005c
0464ffef047300280464005c04e50071047300c2047300c2080000ed0239
00000556001e0556001e0639005008000049078d00470473fffb080000f1
02aa004e02aa004e01c7008401c700aa0464005c03f40042040000150556
002a0156feaa05f4006002aa00b402aa00aa0400001c0400001c04730050
0239009701c700aa02aa004e0800000e0556001e055600af0556001e0556
00af055600af0239006b0239fff902390020023900020639005006390050
065200690639005005c700aa05c700aa05c700aa023900bd02aa002a02aa
fff702aa001502aa001902aa00f702aa008402aa007902aaffff02aa00a1
02aa002a0473ffe801c7ffd7055600600400004204e3002f040000340214
009005c700210473003d0556002a04000015055600800473008004ac005c
04ac007402aa005702aa000b02aa000706ac005a06ac00a306ac004b0473
0000063900630473003d023900c9055600600400004205c7005a0400003b
05c7005a0400003b047300380556001e047300520556001e047300520556
001e0473005205c7005a0400003b05c7005a0400003b05c700a505480038
055600af04730048055600af04730048055600af04730048055600af0473
0048055600af04730048063900630473003d063900630473003d06390063
0473003d0473003d05c700a10473008405c700350473003e038f00690371
004403330059031f00650239003501c7ffdf063900c9038e008404000023
01c7ffa3055600320400fff10473009c021f00830473009c01c7000c0473
009c021a004e0473009c027b008905c7009c0473008405c7002a0473000a
05c7009c047300840473000e063900500473003b063900500473003b0639
00500473003b05c700b402aa008905c7004902aa001705c700b402aa0042
0556006004000042055600600400004204e300210239001704e3002102e1
001704e30021028fffe205c700aa0473008005c700aa0473008005c700aa
0473008005c700aa0473008005c700aa0473008005c700aa04730080078d
002505c700120556002a0400001504e3002f0400003404e3002f04000034
055600600400004204e30021023900170473004b0000fcfc0000fcfc0000
fc9c0000fc680000fc860000fc8a0000fd690000fcc40000fcf60000fc70
0000fc9c0000fd5b0000fcea0000fd120000fc9105c70021063900630473
003d0473009c01c700890556009c0400008005c7009c0473008405c700b4
02aa008901aaffdb023700e102aa005501c7ffda040000800239001c0473
0048047300480400003a047300510000fd3c0000fc660000fc8a0239fffb
0239fffb05c7009c047300840000fcc4056d0024054c0098055600980427
0098059c00250556009807f0000a0554004505c7009805c7009805560098
057e002506aa009805c700980639005005c700980556009805c7005004e3
001d0556002f06d800410556002505db009805360060078d009807a10098
06aa001d070900980536009805c700640800009805b7006a047300560473
0048046200870339008704d9001c04730050063d00170400003304ab0087
04ab0087046200870498001b055400870473008704730048047300870473
007d04000048040000330400001706a800460400001404910087044e005c
063900870657008704e3001b05c7008703ff00870414002f063900870477
005005560098047300500427009803390087023900ba01c7008704000023
05c70050040000480239001d020300290800002506c3001b07e10098067c
008701c7ffdd055600620639004e0473001b055600980462008704000048
0617001b0473001b0556002f0400001705c700980473008704730098031d
00870000fd5b0000fd5b0000fd5b0000fd5b0000fc700000fd930000fd2a
0000fc8a0000fcfc0000fcfc0000fc860000fd690000fcc40000fcf60000
fd930000fc9c0000fc9c0000fc8a0000fc8a0000fc680000fc860000fc66
0000fc680000fc860000fc660000fc660000fd500000fc660000fd5b0000
fc8a0000fc8d0000fd2a000000000239001b0473008306aa008302aa0088
06aa008302aa008902aa0088042b0052042b005302020087033afffd0239
0017023900170400000a05c70011040000140473009c0473009d0473009c
0400008004b2003904b2003905c7005905c7002104890049055600af0556
0060040000420498003906e600aa05950080060a0052021400b6037300b6
023900c3048c002b0400003b0134005102aa00c102aa00c20b06000e0556
00ed029600ed02aa004e01c700aa02aa0055044cfff5042f00c1042f00c2
056500c1056500c202aa0055029600ed02aa0055080000f102d500a4011d
000000000000000000000000000000000000000000000000000000000000
023900000239000002390000023900000239000002390000023900000239
0000023900000000000000000000000000000000000000000000011d0000
008f000002aafff7037000b60473009c02aa005502aa0006044c0072044c
00730556001e04e300ae04730048071c00500568003b0000fd5e0000fd5e
0000fd5e0000fd5e0000fcc90000fcd20000fd980000fccd0000fcef0000
fce10000fcd90000fcec0000fc5e0000fd440000fd4a0000fccf0000fcd1
0000fc860000fc910000fcc10000fcc10000fcc10000fcc20000fcc20000
fc8a01550061027b00610155006101550061046400320464002b03f4002d
03f4002f05b4011305b400280231006b0231fe830464ff330464ffef0464
002b0464002d08fa006f0816006f0556009c023900c9047200c906ab00c9
078f00c905560034078f003409c800340c010034078f00c90556002a078f
002a09c8002a0473009c05c7005a05c700a506aa009701c70084038e0084
0555008405c700840400000b05c7000b078e000b0955000b05c700840400
000b05c7000b078e000b01c700890400003b0473003806aa008409e20074
08c1004f07db003807da006b05a7007102f7005808e7007106f0006b05a1
00530556001e047300520239001e0239ffff063900500473003b05c700aa
0473008005c700aa0473008005c700aa0473008005c700aa0473008005c7
00aa047300800556001e047300520556001e0473005208000010071d0049
063900630473003d0556009c04000080063900500473003b063900500473
003b01c7ffbe09cd005408fc006f07fb00380639006305c7009c04730084
0556001e0473005208000010071d00490639004204e3005c0556001e0473
00520556001e04730052055600af04730048055600af047300480239ff71
01c7ff350239fff801c7ffaa063900500473003b063900500473003b05c7
00b402aaffd605c700b402aa004f05c700aa0473008005c700aa04730080
05c700a1047300840556001e04730052055600af04730048063900500473
003b063900500473003b063900500473003b063900500473003b0556002a
0400001502aa004e023900c90556001e0473005205560097047300760556
009704730076055600970473007605c7005a0400003b05c700a504730038
05c700a50473003805c700a50473003805c700a50473003805c700a50473
0038055600af04730048055600af04730048055600af04730048055600af
04730048055600af0473004804e300af0239001c063900630473003d05c7
00a10473008405c700a10473008405c700a10473008405c700390473001b
05c700a1047300840239ffec01c7ff9e02390027023900160556009c0400
00800556009c040000800556009c040000800473009c01c700890473009c
01c7ff9d0473009c01c7ffb50473009c01c7ffc006aa009706aa008406aa
009706aa008406aa009706aa008405c7009c0473008405c7009c04730084
05c7009c0473008405c7009c04730084063900500473003b063900500473
003b063900500473003b063900500473003b055600af04730076055600af
0473007605c700b402aa008905c700b402aa008305c700b402aa004a05c7
00b402aa0018055600600400004205560060040000420556006004000042
0556006004000042055600600400004204e300210239001704e300210239
001704e300210239ffe204e300210239ffe705c700aa0473008005c700aa
0473008005c700aa0473008005c700aa0473008005c700aa047300800556
00340400000b055600340400000b078d002505c70012078d002505c70012
078d002505c70012078d002505c70012078d002505c700120556002a0400
000b0556002a0400000b0556002a0400001504e3002f0400003404e3002f
0400003404e3002f04000034047300840239001005c70012040000150239
001c0556001e047300520556001e047300520556001e047300520556001e
0473ffcb0556001e047300520556001e047300520556001e047300520556
001e047300520556001e047300520556001e047300520556001e04730052
0556001e04730052055600af04730048055600af04730048055600af0473
0048055600af047300480556008c0473fff0055600af04730048055600af
04730048055600af04730048023900ae02390099023900c701c700840639
00500473003b063900500473003b063900500473003b063900500473ffd8
063900500473003b063900500473003b063900500473003b071c00500568
003b071c00500568003b071c00500568003b071c00500568003b071c0050
0568003b05c700aa0473008005c700aa0473008006e600aa0595008006e6
00aa0595008006e600aa0595008006e600aa0595008006e600aa05950080
0556002a040000150556002a040000150556002a040000150556002a0400
0015055600af04730048055600af04730048056d007505df009604860052
048600870723000a05890017056d002404860043056d002404860043056d
00750486005208d9001006dd0012054f0043040a003005df009604860087
05df009604860087065500500486005205df006004120037056d00100412
0019056d001004120019056d00100412001905ac005e047a006907480098
0600008d08000010071d004906aa009706aa008405c700b402aa004c0222
ffc50556001b05c700c504e300d505c70029055600c504e3004805c700b0
06390071023900ba055600b00556002f071d00be05c700b004e300620639
007105c700b0055600c504e3005804e1002f0556002905c700500558003d
06a8007f063900640239000a0556002904e3005a04e300b40473001204e3
006804730077038d004a04e3003b04e5008f023900b0047300b004730025
04e300b8047300420400007104e3006f04e300aa0473004c04e3006f0400
003b04e300b805c700770473000e05c7008f0610006a0239000a04e300b8
0239009a0222000b0000fd19023900b0016c0088016c00880000fcfc0000
fcfc016c008802ca001a02b5001a03050088031200880222002e0222002f
031e00880362006f033300880362006f0735007f0625005e0639ffef01c7
008401c700aa047200ed06ac009c06ac00ed04730048047300480556001e
0473005204730052055600af04730048055600af04730048055600af0473
00480239fff00239ffdb01c70079063900500473003b063900500473003b
063900500473003b055600600400004205c700aa047300800400000b06e6
00aa05950080060200610473ffd605c7fff20473008406aa008403f0009c
0460009a03a6005a03e9000c02cf00020448005c06020061047300500655
004e0486004c0639005002aa001e07c6002407c6002408e6ffca0000f920
0000fa0b0000fa0b0000fa060000fa0606020061047300500655004e0486
004c0222002f02b5001a0473002504e3002f040000340473003b04d20084
04dc00380473007204bd003804d7003d0473008204d7008202220086078d
00470387008802aa008604d2003c04b80032052b00320772003805600017
043a001705ce001c04c2008904b8008901a9008a01a9008a01c700aa0187
007802aa000802aa00c102aa003a0187007802aa000802aa00c102aa003a
01a9008a01a9008a02aa001e02aafff7023a0042023a004100e4ffed0155
00450155004401c4004402e400090200000b023a004e023a004f0256000e
0256000e025600240256002402aa00550256002e0256002e0256002e0200
00210200000600e300440256003a023a000902560024025600240256000e
0256000e02aa0078023a004f0000fccd0000fca20000fca20000fd6f0000
fd6f0000fc490000fc490000fb9e0000fca20000fc490000fccd0000fcc2
0000fcc20000000002390000000000000000000000000000031d004e031d
004e06da00c107c60024023900e308e6009c07c60024071d00d00703001b
023900800239008000000000000000000000000000000000000000000000
0000067b003a023a00200239001a02390021023a002702390025023a0021
023900240256002e0155002b0256002e0155004701550022023a0042023a
0020023a006202390020023900180239001a02390021023a002702390025
023a0021023900240256002e0155002b0256002e0155004701550022063c
0011063900630473009c0473009c0556002a06ab00280600003007560011
0473007207c8005806ac005a05c7005a0556005904e500710696001c06ab
003406ab0028055600af04730076055600af0473007604e3000206390050
04c400a1024100230369001105c7005002bb0023033afffd0473009c0473
009c01c7002a01c7002a0473003d04e3005a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a04e3005a05c1005b05b3005b076c00880776
008807760088078d008807ca006f07a0006f047300770473007704730077
04730077047300770473007706c2008806c200880874008808890088085b
00880868008804e3003b04e3003b04e3003b04e3003b04e3003b04e3003b
04e3003b04e3003b073300880733008808e5008808fa008808cc008808d9
00880929006f0929006f023900b0023900b002390041023900390239003d
0239003d023900230239002303a5008803a5008805570088056c0088053e
0088054b0088059b006f059b006f04e3006f04e3006f04e3006f04e3006f
04e3006f04e3006f07a5008807a5008809570088096c0088093e0088094b
008804e300b804e300b804e300b804e300b804e300b804e300b804e300b8
04e300b806c20088088900880868008808b8006f0610006a0610006a0610
006a0610006a0610006a0610006a0610006a0610006a0791008807910088
0943008809580088092a0088093700880987006f0987006f04e3005a04e3
005a047300770473007704e3003b04e3003b023900b0023900b004e3006f
04e3006f04e300b804e300b80610006a0610006a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a04e3005a04e3005a0811005b080c005b
0991008809d80088097f0088099b008809d3006f09ce006f04e3003b04e3
003b04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b096c0088
096c00880b1e00880b3300880b0500880b1200880b62006f0b62006f0610
006a0610006a0610006a0610006a0610006a0610006a0610006a0610006a
09ca008809ca00880b7c00880b9100880b6300880b7000880bc0006f0bc0
006f04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a
0556001b0556001b0666002e0661002f07a9001b04e3003b04e3003b04e3
003b04e3003b04e3003b06ac002e06a7002f06d2002e06ba002f083100b0
0239ffcf0239ffce0239ffcc0239ffda0239ffdc0239ffc50239ffe10239
ffee0343002e0348002f04e300b804e300b804e300b804e300b804e300aa
04e300aa04e300b804e300b8055600290556002906b1002e0713002f06c2
00880610006a0610006a0610006a0610006a0610006a075a002e0789002f
0792002e07a9002f0878005e04e3005a0473007704e3003b023900b004e3
006f04e300b80610006a05d5007206a7002f06ba002f0348002f0789002f
0713002f07a9002f0239ffcb04e300b804ac002504ea011704f700a102f3
001b02bb00230473002504e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a0239ffd70239ffe40239ffd20239ffd7
0239ffdb0239ffdb0239ffcd0239ffe00239ffc80239ffc30239ffdc0239
ffdc0239ffd70239ffd70239ffd20239ffcd0239ffd20239ffd704e300b8
04e300b804e300b804e300b804e300b804e300b804e300b804e300b804e3
00b804e300b804e300b804e300b804e300b804e300b804e300b804e300b8
04e300b804e300b80666002e0661002f05c1005b076c00880776008805b3
005b07760088078d00880666002e0661002f05c1005b076c008807760088
05b3005b07760088078d00880343002e0348002f0348002f03a500880557
0088053e008803a50088056c0088054b00880343002e0348002f0348002f
03a5008805570088053e008803a50088056c0088054b008806b1002e0713
002f0713002f06c20088088900880868008806c200880889008808680088
06b1002e0713002f0713002f06c20088088900880868008806c200880889
00880868008805c700b405c7005a0639005001c70020051d0029055600af
05c700a10000fd31055200680473003806390050047300480772005b0738
004505e5001306ac003d06ac003d06ac003a06ac003a066d001d04e3001b
082200d005e1008a06a8007f05c7008f0556001e0400000b079900d005cf
008a04da003802ca002405d900160588003805c700b404730052031f0000
04da00a103eb00a1064900a104cf00840556009c0400008004e3002f0400
003408d9001406dd0030054f0072040a0047056d00a50412007a05df00ac
0486009105df00630412003f04f8002b0412003a056d002e0412002405ac
00ac047a007705ac00ac047a00770556002a0556002a04d900bc037c0091
05ac00ac047a0077063200a504df007a075f00ac059b00910556002a0556
002a06fe0028054e00350748003a059400260748003a0594002607720048
05b3003805df00ac0486009104730052054f00ac054f00ac06a8007f04dc
005d0855004405e0002605560025040000040556003404b6000b0400003b
054f0072040a004705f10026049c0024023900bd056d002e041200240556
00340556001e05c7005a0400003b0473ffe804e3002101c7003e02bb0023
04e30021055600af0473009c0473009c055600af047300480456002301c7
ffda05c700aa01a9002101a9002102aa003302aa003302aa003a02aaffe9
023900e302aa003c02aa003c057f005b04ac002504ac0074023900e304ac
0025057c004c04ac0074023900e3023900e3063900710412003f0412003f
055600ae0473008005c7005a06aa009705dd0097059b004605c7005a05c7
005a05c7005a0400003b0400003b0400003b0473003805ca003006c6002e
063f002f031f001a062e001904e900310488004502aa00be02aa00be02aa
00be02aa00be0277003b0277003b034b0000034b0000034b0000034b0000
034b00000487001203f7001e045e0054043600830436008302fd005d034f
0012069900390655003e052900300000f86506e1002204e9002001e0004b
01e9004b015d0025015d000a0199002a0198001202fb0017030400170267
0013025700120257001202c8004b01d8000701d8000707e9003a097c004b
0931004909310002013c004b04570022058900050589000d04be00150442
001801d8000701d8000703fe003d03fe003d0404003a036f000b0467003c
0000fb760000fcc10000fc080000fc730000fc730000fa630000fce00000
fe950000fc8e0000fc510000fa0b0000fc9f046500360465002204010034
0401002407760017044c001b03ea001d051a00340653003204c8003306c2
008808890088086800880556001b0556001b0239ffdf0239ffe105560029
055600290404001505e5001405e5001405e500140800ffeb0800ffeb0800
03b40800038c080003b40800038c0800ffe90800ffe9080003b40800038c
0800ffe90800ffe9080000000404001500e40042023a0029023a0024023a
001e02000006023a002405c7005a0639006305c7005a0471002205520029
04e300210556001e04d0002805c2004e04d9004e05c7005a06aa008405d0
003106640037082d00350552006805520068039c003f0380003b039c003f
0380003b039c00530381003c039c00530381003c02eb005302e3005302e3
005302e3005302eb005302eb000802e3000002e3000002e3000002eb0008
0363005303630053036300530363005303630053027f00010330004503b2
002603c3000b050b0031069c00290390007f0000fc4f0000fc4f0000fc42
0000fc420000fc420000fc420000fc010000fc010000fd44046500220401
00240a3900500873003b0436008304360083043600830329003a0329003a
03550028050d00340329005403290028032900330329003302f6003a02f6
003a0329002b0143005e02d7005b04bb005e0329005e0329002a02d70029
032900270329002a03290054019400100329005b0373003704bb005e02d7
0008037800800329000d0378004a04dc004d0632002a04be003304730039
0473003b04e6003804e1003a04fa0039076e003e0329000a0143005e01e4
00610329005b02d70008037800800329000d037800790329000a042b0052
05c5001001c70084045e0054070a002e06cb003504d6001b04fa001a02d8
000d04e9001b0330000d02d9000a02db000c01c700aa02aa004e01c700aa
02aa004e01c700aa02aa004e01c700aa02aa004e053d007a0708003b0310
008f0574009708c000220473004002e00034047300400473003104730034
047300420473004d0430002b047300420473004903cc000903cc000903cc
0009042800580425004e048d00560437003d06a600560450004804460048
04f8001f06c70056044e0056042d003d07c7005a049c0056049e007505e3
00560446003f0475005205e9005c046a0075054e00560475003106660056
0448003b05e300560468005604a400560487007504b40058049a005604a4
007504d1003d049a007504250044043d003d04be0056043d004e0458004e
0458004e04ba005605df0056044c00aa04d500b10473005e0473002f0425
00330473007b0437003d04250056049e0050048b003d04b8005604b80056
072b005204a20048048f004804db001f074c007104c10071047d003d085c
005604dd005604dd007b06a20071046f003d04b4004e0619005604ba0085
05d5005604ee0056068b004804a80048063f005204cd005604dd005604c3
007b053b005604e7005604e70085051d005604e70085049600480493003d
0521004e04c50056049300480491004804e7005606060056049c004804c3
007b049c004804ae00560527004c02f6007b044e0056048d005604c50056
05ae005605ee006f000000000000006c0000006c0000006c0000006c0000
00cc0000011c0000028000000430000005c0000007500000079400000824
000008a80000099800000a0000000a6400000aa000000ae000000b280000
0c0400000c5000000d6800000ec000000f5c00001084000011b000001244
000013a8000014d40000152c000015a80000163c0000168c000017240000
1828000019d800001a5400001b5c00001c7c00001d4000001dc800001e2c
00001f7c00001fec0000201c000020a000002194000021e4000022fc0000
23a8000024a400002550000026c4000027d800002970000029cc00002a5c
00002b1800002cb000002da800002e6c00002f0400002f5c00002fbc0000
30200000306c00003094000030c000003254000033280000342c00003504
000036980000373000003880000039200000397c000039f000003ad00000
3b1400003c0c00003cc400003db400003e9800003f800000400c000041cc
0000426c000043200000444c000045a80000460800004734000047d40000
48b4000048f8000049f400004ab000004ac800004ae000004ca800004cc0
00004cd800004cf000004d0800004d2000004d3800004d5000004d680000
4d8000004d9800004f4400004f5c00004f7400004f8c00004fa400004fbc
00004fd400004fec000050040000501c000050340000504c000050640000
507c00005094000050ac000050c4000050dc000050f400005150000051c8
0000538c00005518000056e400005770000057e4000058fc00005a9c0000
5c0000005ce400005d1400005d7c00005e5c00005f400000611c00006270
000062f800006398000064480000656800006668000067a00000686c0000
68cc0000697c00006a0400006b6000006c3400006d5400006f7c00007124
0000721c00007280000072c400007374000074b0000075a8000076340000
76e40000779800007804000078040000781c000078340000784c00007978
00007b5800007b9000007bcc00007c6c00007cfc00007d5c00007dbc0000
7e2c00007f1400007f2c00007f4400007fa40000811000008180000081f0
000082b400008364000083e800008440000084a400008538000087600000
877800008790000087a8000087c0000087d8000088240000889400008914
00008960000089780000899000008a3800008a5000008a6800008a800000
8a9800008ae800008b2c00008bb000008bdc00008c3800008c6800008d7c
00008e6000008ea800008f7400008fb400009084000091140000912c0000
91440000915c00009174000091d0000092c0000094280000944000009458
00009510000095dc00009604000096bc00009708000097c0000098b40000
99ac00009abc00009c8800009d4000009eb40000a02c0000a0840000a2b4
0000a4f00000a5080000a5200000a5380000a5500000a6180000a6300000
a6480000a6e00000a8a40000a8bc0000a8d40000a8ec0000a9040000a91c
0000a9340000a94c0000aa840000aa9c0000aab40000ab600000ac680000
ac800000ac980000acb00000acc80000ace00000acf80000ad100000ad28
0000ad400000ad580000ad700000ad880000ada00000adb80000add00000
aeb80000aed00000af700000af880000afcc0000afe40000b0dc0000b0f4
0000b17c0000b1940000b1ac0000b1c40000b1dc0000b1f40000b20c0000
b2240000b23c0000b2540000b2e40000b3440000b35c0000b3740000b38c
0000b3a40000b3bc0000b3d40000b3ec0000b4040000b41c0000b4340000
b44c0000b5c80000b7300000b7480000b7600000b7780000b7900000b7a8
0000b7c00000b7d80000b7f00000b8080000b8200000b8380000b8500000
b8680000b8800000b8980000b9b00000b9c80000b9e00000b9f80000ba10
0000ba280000ba400000bb0c0000bbf40000bc0c0000bc240000bc3c0000
bc540000bc6c0000bc840000bc9c0000bcb40000bccc0000bce40000bcfc
0000bd140000bd2c0000bd440000bed80000c06c0000c1000000c1fc0000
c3640000c3900000c3c00000c4040000c4880000c4b40000c5140000c544
0000c5a40000c6b40000c6fc0000c73c0000c7900000c86c0000c9380000
c9640000ca500000ca680000ca840000ca9c0000cab40000cacc0000cae4
0000cafc0000cb140000cb2c0000cb440000cbc00000cc380000cc640000
ccb40000cd1c0000cd940000ce4c0000cf040000cfc80000d14c0000d20c
0000d2380000d2980000d2b00000d2c80000d3680000d42c0000d4740000
d4cc0000d5c00000d7500000d78c0000d85c0000d8bc0000d9680000dadc
0000db740000dc3c0000dca80000dd380000ddf40000de7c0000dfc80000
e0300000e1140000e2080000e2500000e2c00000e4680000e4d40000e558
0000e6000000e6740000e7200000e8140000e9100000e9fc0000eae40000
ec0c0000ed840000ef100000f0e00000f24c0000f2880000f34c0000f438
0000f4e00000f61c0000f6b40000f77c0000f7e40000f8700000f92c0000
f9b40000faf00000fb540000fca00000fd940000fddc0000fe4800010090
000100f80001017c0001021c000102900001033c000104300001052c0001
0614000106d8000107f400010934000109d400010ae000010b3800010b94
00010bc400010c1400010ca400010d7400010e3000010eb000010f300001
107c000111b4000112d8000113fc00011480000115d00001168800011774
00011800000118880001197000011ab400011bb000011c6000011d0c0001
1d8000011df400011e6000011ecc00011f2000011f7400011fc80001201c
000120680001209c0001210400012178000121a4000121d0000121fc0001
222c0001228c0001239c000123cc0001240c00012450000124ac0001250c
00012590000125bc000125e80001266c00012698000126c4000127040001
282000012860000128b400012914000129a400012a0c00012a0c00012aac
00012b4400012c1400012c8400012d8000012df000012e6000012f5c0001
30a8000130fc0001318400013224000132c800013310000133880001340c
000134f0000135d4000136b400013724000138300001393800013a100001
3b3000013c9400013cf400013e6000013f5c00013fb40001406c0001413c
000142a4000142d400014338000143940001444400014500000145540001
4584000145b400014994000149f800014a2800014ad000014b2c00014b58
00014bdc00014c2400014c6800014cc800014d2400014d5000014d800001
4dac00014dd800014e0c00014e0c00014e0c00014e0c00014e0c00014e0c
00014e0c00014e0c00014e0c00014e0c00014e0c00014e0c00014e0c0001
4e0c00014e0c00014e0c00014e0c00014e0c00014e0c00014e0c00014e0c
00014e0c00014e0c00014e0c00014e0c00014e4800014eac00014fd40001
5000000150140001506c000150cc000150e40001513c000151f400015374
000154e000015538000155d400015670000156c800015844000158ec0001
593800015a4c00015af000015ba800015ca400015d3c00015e1800015e8c
00015f3400015f7800015fd80001601800016044000160ac000160f40001
613c00016188000161d40001624800016274000162b8000162e400016310
000163280001633800016350000163600001637800016388000163a00001
63b4000163cc000163dc000163f4000164040001641c0001643400016444
000164540001646c0001648c000164a4000164b4000164cc000164ec0001
65140001652c0001653c00016554000165740001658400016594000165a4
000165b4000165c4000165dc000165fc00016614000166240001663c0001
665c000166840001669c000166ac000166c4000166e4000166f400016704
00016714000167240001674400016764000167840001679c000167b40001
67cc000167e4000167fc000168140001682c000168440001685c00016874
0001688c000168a4000168bc000168d4000168f400016914000169340001
69540001697400016994000169b4000169d4000169f400016a1400016a34
00016a5400016a6c00016a8400016a9c00016ab400016acc00016ae40001
6afc00016b1400016b3400016b5400016b6c00016b8400016b9c00016bb4
00016bcc00016be400016bfc00016c1c00016c3c00016c5400016c6c0001
6c8400016c9c00016cb400016ccc00016ce400016cfc00016d1400016d2c
00016d4400016d5c00016d7400016d8c00016da400016dbc00016dd40001
6dec00016e0400016e1c00016e3400016e4c00016e6400016e7c00016e94
00016eac00016ec400016edc00016ef400016f0c00016f2400016f3c0001
6f5400016f6c00016f8c00016fac00016fcc00016fec000170040001701c
0001703c0001705c000170740001708c0001709c000170ac000170c40001
70dc000170f40001710c000171240001713c000171540001716c00017184
0001719c000171b4000171cc000171e4000171fc000172140001722c0001
72440001725c000172740001728c000172ac000172cc000172ec0001730c
000173240001733c000173540001736c0001738c000173ac000173c40001
73dc000173f40001740c000174240001743c000174540001746c00017484
0001749c000174b4000174cc000174e4000174fc000175140001752c0001
754c0001756c000175840001759c000175b4000175cc000175e4000175fc
000176140001762c0001764c0001766c000176840001769c000176b40001
76cc000176e4000176fc000177140001772c000177440001775c00017774
0001778c000177a4000177bc000177d4000177ec000178040001781c0001
783c0001785c0001787c0001789c000178bc000178dc000178fc0001791c
000179340001794c000179640001797c00017994000179ac000179c40001
79dc000179fc00017a1c00017a3400017a4c00017a6400017a7c00017a94
00017aac00017acc00017aec00017b0c00017b2c00017b4c00017b6c0001
7b8400017b9c00017bb400017bcc00017be400017bfc00017c1400017c2c
00017c4400017c5c00017c7400017c8c00017ca400017cbc00017cdc0001
7cfc00017d1c00017d3c00017d5400017d6c00017d8400017d9c00017db4
00017dcc00017de400017dfc00017e1400017e2c00017e4400017e5c0001
7e7400017e8c00017ea400017ebc00017ed400017eec00017f0400017f1c
00017f3400017f4c00017f6400017f7c00017f9400017fac00017fc40001
7fdc00017ff40001800c000180240001803c000180540001806c00018084
000180a4000180c4000180e4000181040001812400018144000181640001
8184000181a4000181c4000181e400018204000182240001824400018264
00018284000182a4000182c4000182e4000183040001831c000183340001
834c000183640001837c00018394000183b4000183d4000183f400018414
00018434000184540001847400018494000184b4000184d4000184ec0001
85040001851c000185340001854c000185640001857c00018594000185b4
000185d4000185f400018614000186340001865400018674000186940001
86b4000186d4000186ec000187040001871c000187340001874c00018764
0001877c00018794000187ac000187c4000187dc000187f40001880c0001
88240001883c000188540001886c000188840001889c000188b4000188cc
000188e4000188fc000189140001892c000189440001895c000189740001
898c000189a4000189bc000189d4000189f400018a1400018a3400018a54
00018a6c00018a8400018a9c00018ab400018acc00018ae400018afc0001
8b1400018b2c00018b4400018b5c00018b7400018b8c00018ba400018bbc
00018bd400018bec00018c0400018c1c00018c3400018c4c00018c640001
8c7c00018c9400018cac00018cc400018cdc00018cf400018d0c00018d24
00018d3c00018d5400018d6c00018d8400018d9400018da400018dbc0001
8dd400018dec00018e0400018ebc00018f1c0001909c000190d800019114
00019174000191bc0001923c000193bc000193ec000194540001949c0001
9550000195d40001962800019790000197f4000198c80001992000019968
000199c800019b5800019bc400019d0400019e6c00019ef400019f8c0001
a0d40001a29c0001a3340001a4ac0001a6000001a7180001a7b80001a8b4
0001a9240001a9900001aa0c0001ab0c0001ab500001acc80001ae080001
af2c0001b0440001b1940001b2140001b2940001b4200001b4ec0001b5a0
0001b7380001b7e80001b8a00001b8ec0001b94c0001b9b00001ba0c0001
ba680001bac40001baf00001bb200001bb7c0001bc140001bcb80001bd28
0001bd980001bdc40001bdf00001be600001beec0001bf5c0001bff00001
c1800001c2ec0001c44c0001c4a80001c5040001c51c0001c5340001c54c
0001c56c0001c58c0001c5ac0001c5cc0001c5ec0001c6040001c61c0001
c63c0001c65c0001c67c0001c69c0001c6bc0001c6dc0001c6f40001c70c
0001c7240001c7440001c7640001c7840001c7a40001c7bc0001c7d40001
c7f40001c8140001c82c0001c8440001c85c0001c9180001ca080001cab0
0001cb440001cc500001cc8c0001cd680001ce640001ced80001cf500001
d08c0001d1480001d2380001d2e80001d37c0001d4540001d4980001d4fc
0001d5600001d7a80001d8500001d8b40001d9180001d9440001d9700001
d9880001d9a00001d9b80001d9d00001d9fc0001da940001db240001db98
0001dc0c0001dc9c0001dd640001deac0001dfe80001e10c0001e26c0001
e3500001e4680001e4dc0001e6380001e6f40001e7b00001e8f00001e9c8
0001ea800001ebc00001edac0001eeac0001f01c0001f1680001f1cc0001
f22c0001f2c80001f3240001f3540001f3800001f3b00001f3dc0001f40c
0001f4340001f4600001f48c0001f4ec0001f5880001f5c80001f6080001
f6a40001f7880001f7f40001f8680001f8e40001f9780001f9ec0001fa64
0001fb480001fc2c0001fc6c0001fcac0001fcf00001fd340001fd600001
fdc80001fe300001fe9c000200000002006800020098000200e400020180
000201c4000202080002024800020288000203980002047c000204c80002
05080002054800020598000205e800020648000206a80002072400020764
000207c800020814000208e8000209240002092400020924000209240002
092400020924000209b800020ac400020b3c00020ba000020c2800020c40
00020ce800020e2400020ec800020f3c00020fb400020fb400020fb40002
0fb400020fb400020fb400020fb4000211640002128c00021310000213f8
0002154c0002159c00021780000218e40002194c00021974000219b40002
1a6800021b1400021bc000021ce800021d2800021dd400021f0c00021f90
00022078000221cc0002221c000223fc00022560000225c8000225f00002
2630000226e400022790000227f4000229100002294c00022988000229e4
00022a6400022c5800022d3800022db000022e8800022ee000022fc00002
315800023198000232100002322800023238000233180002344400023524
00023644000236cc000238100002389000023938000239c800023b440002
3bd000023c8000023dd800023f2c00023f8000023fd8000241040002411c
000241340002414c000241640002417c00024194000241ac000241c40002
41dc000241f40002420c000242240002423c000242540002426c00024284
0002429c000242b4000242cc000242e4000242fc000243140002432c0002
43440002435c000243740002438c000243a4000243bc000243d4000243ec
000244040002441c000244340002444c000244640002447c000244940002
44ac000244c4000244dc000244f40002450c000245240002453c00024554
0002456c000245840002459c000245b4000245cc000245e4000245fc0002
46140002462c000246440002465c000246740002468c000246a4000246bc
000246d4000246ec000247040002471c000247340002474c000247640002
477c00024794000247ac000247c4000247dc000247f40002480c00024824
0002483c000248540002486c000248840002489c000248b4000248cc0002
48e4000248fc000249140002492c000249440002495c000249740002498c
000249a4000249bc000249d4000249ec00024a0400024a1c00024a340002
4a4c00024a6400024a7c00024a9400024aac00024ac400024adc00024af4
00024b0c00024b2400024b3c00024b5400024b6c00024b8400024b9c0002
4bb400024bd400024bf400024c1400024c3400024c5400024c7400024c94
00024cb400024cd400024cf400024d1400024d3400024d5400024d740002
4d9400024db400024dd400024df400024e1400024e3400024e5400024e74
00024e9400024eb400024ed400024ef400024f1400024f3400024f540002
4f7400024f9400024fb400024fd400024ff4000250140002503400025054
0002507400025094000250b4000250d4000250f400025114000251340002
51540002517400025194000251b4000251cc000251e4000252040002521c
0002523c00025254000252740002528c000252a4000252bc000252d40002
52ec0002530c00025324000253440002535c0002537c00025394000253ac
000253c4000253dc000253f40002540c000254240002543c000254540002
546c000254840002549c000254b4000254cc000254e4000254fc00025514
0002552c000255440002555c000255740002558c000255a4000255bc0002
55d4000255ec000256040002561c0002563c00025654000256740002568c
000256ac000256c4000256dc000256f40002570c000257240002573c0002
57540002576c000257840002579c000257b4000257cc000257e4000257fc
000258140002582c000258440002585c000258740002588c000258a40002
5974000259c000025a1400025acc00025b3800025b5000025b7000025b90
00025bb000025bd000025bf000025c1000025c3000025c5000025c700002
5c9000025cb000025cd000025cf000025d1000025d3000025d5000025d70
00025d9000025db000025dd000025df000025e1000025e3000025e500002
5e7000025e9000025eb000025ed000025ef000025f1000025f3000025f50
00025f7000025f9000025fb000025fd000025ff000026010000260300002
60500002607000026090000260b0000260d0000260f00002611000026130
000261500002617000026190000261b0000261d0000261e8000262000002
62180002623000026248000262600002627800026290000262a8000262c0
000262d8000262f000026308000263200002633800026350000263680002
6380000263a0000263b8000263d0000263e8000264000002641800026430
00026448000264600002648000026498000264b0000264c8000264e00002
64f8000265100002652800026540000265600002657800026590000265a8
000265c0000265d8000265f0000266080002662000026640000266580002
667000026688000266a0000266b8000266d0000267f80002692400026aa4
00026afc00026bb000026cc400026d8000026db800026e5800026e700002
6f5800026ff4000271f000027420000275f80002781400027ad000027cb8
00027e1c00027f40000280640002816000028228000283680002841c0002
849800028514000285f0000286dc0002878c000288300002891800028a30
00028b2c00028d8800028e7000028ebc00028f0800028f9c000290440002
90dc00029178000291e00002924400029318000293ec000295dc0002983c
000298cc00029950000299e000029a7000029ba000029cc400029d280002
9d9000029e2000029eb400029f4800029ff40002a0780002a10c0002a168
0002a1c40002a21c0002a2740002a3340002a3ec0002a4980002a5340002
a5f80002a6800002a7240002a7a80002a8400002a8c00002a9b80002aaa8
0002ac380002adc40002ae580002af100002afb00002b05c0002b2340002
b3500002b46c0002b5f40002b7280002b8740002b9c40002ba340002ba9c
0002bb400002bbf40002bcc40002bdf80002bf440002bfe80002c0900002
c0c00002c1600002c1f80002c2400002c2b40002c3d80002c5180002c594
0002c63c0002c68c0002c6f80002c7600002c8380002c91c0002c9e40002
cac00002cc140002ccc80002cd700002ce040002ce440002cea40002ceec
0002cf380002cf640002cfe80002d0440002d0ac0002d0f00002d1ac0002
d2480002d2c80002d3240002d3c00002d4980002d5180002d5980002d638
0002d7100002d7a40002d83c0002d92c0002da580002db300002dc000002
dcc80002de300002df100002e0140002e1200002e1f00002e2e40002e3dc
0002e5140002e6c40002e7b40002e8b80002e96c0002ea140002ead80002
ebd80002ec140002ec500002ec8c0002ecc40002ed100002ed4c0002ed90
0002edd40002ee280002ee7c0002eed40002ef100002ef6c0002eff00002
f0a80002f1600002f2b00002f3240002f4040002f5600002f6680002f6a8
0002f7e00002f91c0002f9580002fa140002fa4c0002fa840002fb3c0002
fbf80002fc400002fd080002fe240002febc0002ff540002ffc40002fff0
0003001c000300c4000300ec0003013000030174000301d40003021c0003
029c0003031c000304140003046400030490000304bc0003066c000307dc
000308ac0003098000030a9400030b4000030ba800030c2400030cd80003
0e1000030e6c00030ebc00030eec00030f800003111000031174000311c0
00031290000313640003143800031514000316fc000317f0000318f40003
19e000031af400031c6c00031c8400031c9c00031cb400031d1c00031db8
00031dfc00031e7400031ed800031f700003205800032270000324880003
26300003265c00032688000326bc000326f00003272c00032768000327a4
000327e00003281c0003285800032894000328d0000328fc000329e40003
2a3000032bb000032c5800032d7000032dd800032e8800032fac00033104
000332400003338c000334c400033560000336640003382c00033ab80003
3ccc00033e3000033fa4000340580003422c000343d8000344300003448c
00034530000345ec000346900003474c000347f8000348b8000349640003
4a2400034ae400034ba000034c5c00034d1800034dd400034e9400034f50
0003500c000350c800035188000351c4000352100003525c000352a80003
52e4000353a4000353f40003549c000354e000035608000357dc00035834
0003597800035ac000035afc00035b3800035b7400035bb000035c040003
5c5400035cc800035d9c00035e7800035e9000035ea800035f8400036044
0003610400036288000364000003651c000366dc000367e4000368e80003
699400036a4400036b3c00036c3c00036d6800036db800036e2800036f00
00036fc8000370e0000371b0000372300003730000037428000374d00003
757400037648000377180003775c0003791c000379b800037b4000037c14
00037d6400037e7800037f4c000380600003818400038260000384140003
857800038648000386980003870c000387b0000387f4000389b400038a50
00038b7400038c4400038d9c00038e3c00038e8c00038f08000390b80003
9210000393a40003953800039690000398400003994000039a1800039b7c
00039bd800039c8800039ce400039d8c00039dec00039e9800039ef40003
9fa00003a1100003a1780003a29c0003a4b00003a5200003a6500003a698
0003a7840003a91c0003a9a40003aa900003abe80003ac3c0003ae280003
af940003afd80003b0140003b0580003b12c0003b1e40003b2c80003b3cc
0003b4ec0003b5bc0003b6cc0003b7fc0003b9040003b9b40003baa40003
bbec0003bcf40003bdec0003bed00003bfbc0003c0980003c1b40003c268
0003c3700003c4580003c5c00003c6ac0003c7a00003c8b00003ca080003
cb140003cc240003cd0c0003ce480003cf680003d0480003d1380003d288
0003d3dc0003d4e40003d5c40003d6c80003d80c0003d9a40003da400003
da900003db800003dc040003dcf80003de100003df180003dfd40003e0bc
0003e1800003e2640003e37c0003e4d00003e5ac0003e6c40003e7f80003
e9200003e9fc0003eaec0003ec700003ed9c0003ee980003efac0003f0a4
0003f1840003f2b00003f3680003f44c0003f54c0003f6bc0003f7b80003
f8e40003f9e80003fb3c0003fc480003fd580003fe340003ff80000400b0
0004018800040278000403a8000404d0000405d4000406b4000407b40004
091800040a4c00040b5400040c7000040d8400040e5c00040f440004101c
00041120000411d8000412c8000413a0000414b00001000008cc006f0009
006b00070002001000100067000007e80b90000400010000003902b20001
000000000000005000000001000000000001000900500001000000000002
000700590001000000000003001f02160001000000000004000902350001
0000000000050008023e0001000000000006000902460001000000000007
0032024f0001000000000012000903f80001000000000100000904010001
0000000001010010040a0001000000000102000e041a0001000000000103
0014042800010000000001040012043c00010000000001050009044e0001
000000010007002f02810001000000020007003c02b00001000000030007
003002ec0001000000040007003a031c0001000000050007003603560001
0000000600070030038c0001000000070007003c03bc0003000104030002
000c01580003000104040002000600cc0003000104050002000e01760003
000104060002000c00e60003000104070002000c007c0003000104080002
000801920003000104090002000e006000030001040b0002001000f20003
0001040c0002000e006e00030001040d00020008019a00030001040e0002
000c01a20003000104100002001000a80003000104110002000a00880003
000104120002000600b80003000104130002001000980003000104140002
000c01020003000104150002000e010e0003000104160002000c00da0003
000104180002000c01c60003000104190002000e012a00030001041a0002
0012016400030001041b0002000e01d200030001041d0002000c01380003
0001041e00020008014400030001041f0002000c014c0003000104210002
000e01ae0003000104220002001201e000030001042a0002001801fe0003
000104390002000c01f200030001043e0002000a01bc0003000108040002
000600920003000108090002000e01840003000108160002000e011c0003
00010c010002000800d2000300010c0a0002000e00bea920313939302d32
303036204170706c6520436f6d707574657220496e632e20a92031393831
204c696e6f7479706520414720a920313939302d3931205479706520536f
6c7574696f6e7320496e632e48656c766574696361526567756c61720052
006500670075006c006100720043006f007500720061006e0074004e006f
0072006d0061006c30ec30ae30e530e930fc5e3889c44f53005200650067
0075006c006900650072005200650067006f006c006100720065c77cbc18
ccb40052006500670075006c006100726a196e969ad406390627062f064a
004e006f0072006d0061006c004e006f0072006d0061006c004e006f0072
006d00610061006c0069004e006f0072006d0061006c0052006500670075
006c006100720052006500670075006c00610072041e0431044b0447043d
044b0439004e006f0072006d0061006c0e1b0e010e150e34004e006f0072
006d0061006c004e006f0072006d0061006c0052006500670075006c0061
0072006e00690052006500670075006c006100720052006500670075006c
00610072039103c003bb03ac05e805d205d905dc004e006f0072006d00e1
006c0052006500670075006c0065007200420069006100730061004e006f
0072006d0061006c0052006500670075006c006100720417043204380447
04300439043d043804390928093f092f092e093f09240054006800f4006e
006700200074006801b01edd006e006748656c7665746963613b2031352e
30643165333b20323031392d30332d323148656c76657469636131352e30
6431653348656c76657469636148656c7665746963612069732061207265
67697374657265642074726164656d61726b206f66204c696e6f74797065
20414748656c7665746963612065737420756e65206d617271756520648e
706f738e65206465204c696e6f7479706520414748656c76657469636120
6973742065696e2065696e676574726167656e657320576172656e7a6569
6368656e20646572204c696e6f7479706520414748656c76657469636120
8f20756e206d61726368696f207265676973747261746f206469204c696e
6f7479706520414748656c7665746963612069732065656e206765726567
69737472656572642068616e64656c736d65726b2076616e204c696e6f74
79706520414748656c766574696361208a72206574742072656769737472
6572617420766172756d8a726b6520669a72204c696e6f74797065204147
48656c76657469636120657320756e61206d617263612072656769737472
616461206465204c696e6f7479706520414748656c766574696361206572
20657420726567697374726572657420766172656dbe726b652074696c68
bf72656e6465204c696e6f7479706520414748656c7665746963614c6967
617475726573436f6d6d6f6e204c69676174757265734e756d6265722053
706163696e6750726f706f7274696f6e616c204e756d626572734d6f6e6f
737061636564204e756d626572734e6f204368616e6765000000b8005d2b
01ba000501b9005f2b01bf01bb003e00340029001d0012000000652bbf01
bc004200340029001d0012000000652bbf01bd003a00340029001d001200
0000652b00bf01b7004d003d003700280012000000652bbf01b80060004f
00370028001b000000652bbf01b90047003d0029001d0012000000652bbf
01ba004200340029001d0012000000652b00ba01be000400642bb801b620
457d691844b800532bb800492bb8003f2bb800352bb8002b2b4118008001
a6009001a600a001a600030069018b0079018b0089018b0099018b000400
89018b0099018b00a9018b00b9018bb2040840ba0179001a014a400b041f
5414191f180a0b1fd2b80106b49e1fd918e3bb0119000d00e10119b20d00
09410a01a0019f0064001f01a50025017a00480028019ab3296c1f60410a
01a9007001a9008001a90003008001a9000101a9b21e321fbe012c002504
01001f0126001e0401b61fe7312d1fe531b80201b21fc227b80401b21fc1
1eb80201400f1fc01d9e1fbf1d671fbe1d671fab27b80401b21faa29b804
01b61fa91d6c1f931eb8019ab21f921db80101b21f911db80101b21f751d
b80201b61f6d29961f6431b8019ab21f4c96b802abb21f391db80156400b
1f3638211f351de41f2f27b80801400b1f2d1d4c1f2a31cd1f241db802ab
b21f201eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa01
9b002a019bb2254a1fba019b0025017ab349293896b8017bb348283125b8
017a403648289629482725294c1f252946272729482756c80784075b0741
0732072b072807260721071b071408120810080e080c080a08080807b801
acb23f1f06bb01ab003f001f01abb308060805b801aeb23f1f04bb01ad00
3f001f01adb70804080208000814b8ffe0b40000010014b801abb4100000
0100b801abb606100000010006b801adb300000100b801ad401f04000001
000410000001001002000001000200000001000002010802004a00b0018d
b806008516763f183f123e113946443e113946443e113946443e11394644
3e113946443e11394660443e11394660443e11394660442b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa
1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b6542
2b2b4b5279b376706a66456523456023456560234560b08b766818b08062
2020b16a704565234520b003266062636820b003266165b070236544b06a
234420b176664565234520b003266062636820b003266165b066236544b0
762344b10066455458b166406544b27640764523614459b36242725d4565
23456023456560234560b089766818b080622020b172424565234520b003
266062636820b003266165b042236544b072234420b1625d4565234520b0
03266062636820b003266165b05d236544b0622344b1005d455458b15d40
6544b262406245236144592b2b2b2b456953427374b8019a2045694b20b0
2853b049515a58b020615944b801a62045694475000000>
[16257 16325 16277 16241 16045 16361 16349 16373 16341 15953 16333 16361 15785
16177 16241 16369 7669 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2856 19 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>Helvetica AddT42Char 
1 3432 22 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>Helvetica AddT42Char 
1 5692 32 <0002005c00de046f03360003000700274015012000cd07200604001a0907
021908095c213f52182b2b4ef43c10f63c002f4dedfdfd31300115213501
152135046ffbed0413fbed0336a8a8fe53abab00>Helvetica AddT42Char 
1 15372 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/zero 19 def
/three 22 def
/equal 32 def
/n 81 def
end
Helvetica /Encoding get
dup 48 /zero put
dup 51 /three put
dup 61 /equal put
dup 110 /n put
pop
end
%ADOEndSubsetFont
/MBMLIV+Helvetica /Helvetica findfont ct_VMDictPut/MBMLIV+Helvetica*1 [48{/.notdef}rp /zero 2{/.notdef}rp /three 9{/.notdef}rp /equal 48{/.notdef}rp /n 145{/.notdef}rp]MBMLIV+Helvetica nfMBMLIV+Helvetica*1 [9 0 0 -9 0 0 ]msf138.11 17.32 mo(n=30)[5.004 5.256 5.004 0 ]xshgrestore
gsave
266.75 22.69 mo
492.8 22.69 li
492.8 5.47998 li
266.75 5.47998 li
cp
clp
266.75 22.69 mo
492.8 22.69 li
492.8 5.47998 li
266.75 5.47998 li
cp
false sop
.13547 .104463 .108492 0 cmyk
f
.72607 .666682 .65243 .782284 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIV+Helvetica gcheck setglobal} if
1 3932 24 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>MBMLIV+Helvetica AddT42Char 
MBMLIV+Helvetica /CharStrings get begin
/five 24 def
end
MBMLIV+Helvetica /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIV+Helvetica*1 [48{/.notdef}rp /zero 2{/.notdef}rp /three /.notdef /five 7{/.notdef}rp /equal 48{/.notdef}rp /n 145{/.notdef}rp]MBMLIV+Helvetica nfMBMLIV+Helvetica*1 [9 0 0 -9 0 0 ]msf369.64 17.32 mo(n=50)[5.004 5.25601 5.00397 0 ]xshgrestore
gsave
498.28 22.69 mo
724.33 22.69 li
724.33 5.47998 li
498.28 5.47998 li
cp
clp
498.28 22.69 mo
724.33 22.69 li
724.33 5.47998 li
498.28 5.47998 li
cp
false sop
.13547 .104463 .108492 0 cmyk
f
.72607 .666682 .65243 .782284 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIV+Helvetica gcheck setglobal} if
1 3076 20 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>MBMLIV+Helvetica AddT42Char 
MBMLIV+Helvetica /CharStrings get begin
/one 20 def
end
MBMLIV+Helvetica /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIV+Helvetica*1 [48{/.notdef}rp /zero /one /.notdef /three /.notdef /five 7{/.notdef}rp /equal 48{/.notdef}rp /n 145{/.notdef}rp]MBMLIV+Helvetica nfMBMLIV+Helvetica*1 [9 0 0 -9 0 0 ]msf598.67 17.32 mo(n=100)[5.00397 5.25604 5.00397 5.00403 0 ]xshgrestore
1.07 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
45.49 272.81 mo
45.49 270.07 li
false sop
.694331 .632349 .621027 .583551 cmyk
@
86.59 272.81 mo
86.59 270.07 li
@
127.69 272.81 mo
127.69 270.07 li
@
168.79 272.81 mo
168.79 270.07 li
@
209.89 272.81 mo
209.89 270.07 li
@
250.99 272.81 mo
250.99 270.07 li
@
.653956 .580194 .5682 .366491 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIV+Helvetica gcheck setglobal} if
1 2720 17 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>MBMLIV+Helvetica AddT42Char 
1 3152 21 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>MBMLIV+Helvetica AddT42Char 
1 3776 23 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>MBMLIV+Helvetica AddT42Char 
MBMLIV+Helvetica /CharStrings get begin
/period 17 def
/two 21 def
/four 23 def
end
MBMLIV+Helvetica /Encoding get
dup 46 /period put
dup 50 /two put
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIV+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five 7{/.notdef}rp /equal 48{/.notdef}rp /n 145{/.notdef}rp]MBMLIV+Helvetica nfMBMLIV+Helvetica*1 [9 0 0 -9 0 0 ]msf39.24 281.46 mo(0.0)[5.004 2.502 0 ]xsh80.34 281.46 mo(0.1)[5.004 2.502 0 ]xsh121.44 281.46 mo(0.2)[5.004 2.502 0 ]xsh162.54 281.46 mo(0.3)[5.004 2.502 0 ]xsh203.64 281.46 mo(0.4)[5.004 2.502 0 ]xsh244.74 281.46 mo(0.5)[5.004 2.502 0 ]xsh277.02 272.81 mo
277.02 270.07 li
.694331 .632349 .621027 .583551 cmyk
@
318.12 272.81 mo
318.12 270.07 li
@
359.22 272.81 mo
359.22 270.07 li
@
400.32 272.81 mo
400.32 270.07 li
@
441.42 272.81 mo
441.42 270.07 li
@
482.52 272.81 mo
482.52 270.07 li
@
.653956 .580194 .5682 .366491 cmyk
MBMLIV+Helvetica*1 [9 0 0 -9 0 0 ]msf270.77 281.46 mo(0.0)[5.004 2.50201 0 ]xsh311.87 281.46 mo(0.1)[5.004 2.50198 0 ]xsh352.97 281.46 mo(0.2)[5.004 2.50201 0 ]xsh394.07 281.46 mo(0.3)[5.004 2.50198 0 ]xsh435.17 281.46 mo(0.4)[5.004 2.50201 0 ]xsh476.27 281.46 mo(0.5)[5.004 2.50201 0 ]xsh508.55 272.81 mo
508.55 270.07 li
.694331 .632349 .621027 .583551 cmyk
@
549.65 272.81 mo
549.65 270.07 li
@
590.75 272.81 mo
590.75 270.07 li
@
631.85 272.81 mo
631.85 270.07 li
@
672.95 272.81 mo
672.95 270.07 li
@
714.05 272.81 mo
714.05 270.07 li
@
.653956 .580194 .5682 .366491 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIV+Helvetica gcheck setglobal} if
1 4228 25 <0002004dffdb0423059e001b002700a94039771a01170825082719581986
00870188090747080a212721350e0e1403c707351b052735140d03290281
1e38116f170a023c0a2431172947281076c418d4fd397c4b52787a2f1810
f5edf4ed003fed3feded12392fed11123931304379403425261c200f1600
060526200f1e280126152428001c131e2801060003280104031f10212801
25162728001d1227280004010728012b2b2b2b01103c2b2b2b2b2b818181
81015d005d00161523262726232202033637363332041514022322001110
3712211236353426232206151416330347bdb21023418497b20a3e5e566a
b4010cfeebc9fedc417d014c818d7ea674af9f8d059ef98455305afee9fe
fc5b2d28e6e4c3fed301310169010bba0164faddbf826ec79a9b88b90000
>MBMLIV+Helvetica AddT42Char 
MBMLIV+Helvetica /CharStrings get begin
/six 25 def
end
MBMLIV+Helvetica /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIV+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six 6{/.notdef}rp /equal 48{/.notdef}rp /n 145{/.notdef}rp]MBMLIV+Helvetica nfMBMLIV+Helvetica*1 [9 0 0 -9 0 0 ]msf502.3 281.46 mo(0.0)[5.004 2.50198 0 ]xsh543.4 281.46 mo(0.1)[5.00403 2.50195 0 ]xsh584.5 281.46 mo(0.2)[5.00403 2.50195 0 ]xsh625.6 281.46 mo(0.3)[5.00403 2.50195 0 ]xsh666.7 281.46 mo(0.4)[5.00397 2.50201 0 ]xsh707.8 281.46 mo(0.5)[5.00397 2.50201 0 ]xsh25.28 234.66 mo(2)sh25.28 162.98 mo(4)sh25.28 91.31 mo(6)sh32.48 231.43 mo
35.22 231.43 li
.694331 .632349 .621027 .583551 cmyk
@
32.48 159.75 mo
35.22 159.75 li
@
32.48 88.08 mo
35.22 88.08 li
@
.749721 .679194 .670497 .901457 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIV+Helvetica gcheck setglobal} if

1 0 3 <> MBMLIV+Helvetica AddT42Char 
1 1940 11 <0001008efe5e026105d50014003e4009141109131617171a09bb019c0008
0014019c400e400080044c10191516f7216c5218b80732852b2b4ef44ded
1add1aedd4ed4e456544e6003f3f3130010207061110171613232e012726
27263510373613025e9d2f475132937992462938160b5d3bbb05d5fecf90
dbfee1fedef094feeae47e6c94a8574f0128e79301250000>MBMLIV+Helvetica AddT42Char 
1 2084 12 <00010044fe5e021705d500130036400c081100131517171a044c0f13bb01
9c00000009019c400908191415f7213f7b182b2b4ef44dedd4eddded4e45
6544e6003f3f3130131237361110272603331e01171e011510070603479f
2e46513293799a412630295e3bbafe5e01368ed701210121f0940116f673
657df471fed8e895fede0000>MBMLIV+Helvetica AddT42Char 
1 7004 38 <0002005affda057105e5001d001e00b1403b1b0597019605031f011f0482
018705891305530803861d111115063a1d030c3a15091e021e1e19033102
3b1031111a20093119191f20a1216a66182b2b4ef44ded4e10f64dedf4ed
12392f003f3fed3fed12392f10ed31304379403a001c172513260e251b26
0b160932000d1410320112110f10071c0932000500033201010204030a18
0c32000f120c3200081a06320104010632012b2b2b2b01103c103c2b2b10
3c103c2b2b2b2b2b2b815d015d080117232e012322001110123332373637
3306070621202726111037362123041e013411c221c5b2d9fef5f1efdc73
3d1ec21a92affed7ff00aee5acba01472805e5fedabb8ea6fecffec5fefe
febfa95991e89dbd9bcd01ac0145d0e20000>MBMLIV+Helvetica AddT42Char 
1 8172 44 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>MBMLIV+Helvetica AddT42Char 
1 12480 68 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>MBMLIV+Helvetica AddT42Char 
1 13356 71 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>MBMLIV+Helvetica AddT42Char 
1 14624 76 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>MBMLIV+Helvetica AddT42Char 
1 15056 79 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>MBMLIV+Helvetica AddT42Char 
1 15556 82 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>MBMLIV+Helvetica AddT42Char 
2 588 87 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>MBMLIV+Helvetica AddT42Char 
2 1576 91 <0001000b000003e1042f000b002300b10a083fb00633b100063fb0033301
b00c2fb00dd600b1000a1112b102083939303113331b0117090123090123
011ee9f6f9dbfe970179e6fef6fefee40179042ffe87017905fdfbfddb01
92fe6e022500>MBMLIV+Helvetica AddT42Char 
2 1672 92 <00020015fe4903e804490018001900ca406e8a158818a718030706170638
12481258126707770377078c1498009705981597169717a800a816104800
4b154717c915044405c605028705a600a601a705a8170524280518151716
010006150c0b0f1d080e19071919161b17171a050001af171518af0c8f16
191a1bd421677e182b2b194ef44de418fd3939fd3939194e456544e61812
392f003f3f4dfd3932192f183f3c3c3c123939014b527940121515001616
6d121717180501016d12000018872e2b107dc418872e2b10087dc418015d
71313071015d005d013306030207020623222627351e01333236373e0137
013301030321c7268362429c809c26291e2f2a10322f10053e0efe74cc01
1f01042f67fe91feecaefe66b40608a40d062118089424044efc98038200
>MBMLIV+Helvetica AddT42Char 
2 2356 95 <000100900000013b05d20003002940150200010a0517171a0300c1020119
0405c1217765182b2b4ef43c4dfd3c4e456544e6003f3f31302123113301
3babab05d2000000>MBMLIV+Helvetica AddT42Char 
MBMLIV+Helvetica /CharStrings get begin
/space 3 def
/parenleft 11 def
/parenright 12 def
/C 38 def
/I 44 def
/a 68 def
/d 71 def
/i 76 def
/l 79 def
/o 82 def
/t 87 def
/x 91 def
/y 92 def
/bar 95 def
end
MBMLIV+Helvetica /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 67 /C put
dup 73 /I put
dup 97 /a put
dup 100 /d put
dup 105 /i put
dup 108 /l put
dup 111 /o put
dup 116 /t put
dup 120 /x put
dup 121 /y put
dup 124 /bar put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIV+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six 6{/.notdef}rp /equal 5{/.notdef}rp /C 5{/.notdef}rp /I 23{/.notdef}rp /a 2{/.notdef}rp /d 4{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp /t 3{/.notdef}rp /x /y 2{/.notdef}rp /bar 131{/.notdef}rp]MBMLIV+Helvetica nfMBMLIV+Helvetica*1 [11 0 0 -11 0 0 ]msf328.01 294.29 mo(Conditional ICC \()[7.94183 6.116 6.116 6.116 2.44183 3.05801 2.44183 6.11597 6.11603 6.11597 2.44183 3.05801 3.05801 7.94183 7.94183 3.05798 0 ]xsh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 114 /rho putdup 115 /sigma putdef/UniqueID 42996 def/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/rho <1C60D8A8C9B79676CAD432945B23A2A5FE831701326EBBB2A20E18496F090CAAD6C5077A4686DE7BCB9CD9C76B42EFDCCE57176D9C6204D60A5196B760CBA61178BDB955FFDBBA2E438D7D980CE0FA915E3DC57B338D501D53462E9549C62222701BFCBA4FE179AADE29B8A8B992740D35684D7E5C4D38B052FF9F6B309C8FF790A18718F478B45942813BDF31E46FCC390F3FC215A3074BFB0993302247FD4C6476D3D472268DBC954697F2099C6E45718C0384624C37105806BB8A8B2C> |-/sigma <1C60D8A8C9B7C05447F5912FBA2452AF183FCDA4EABE4B48A1B8CA2DB2FE27B5CA05184337E6A14471F4E4784E68DE4BCCB0F4CBDF4CF56943F8EAC4BE9236E53E561465B455434CB9B524ED6F54658755443A22EF90736E45BBEF02E32C0C302E57A2C333DCAF88A033C44D239492CE07F8959B883BCC98EFFD299A778B9FD0B07ABB4FAB7AAA28829714962ABE342EDDC72A559B> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/MBMLIW+Symbol /Symbol findfont ct_VMDictPut/MBMLIW+Symbol*1 [114{/.notdef}rp /rho /sigma 140{/.notdef}rp]MBMLIW+Symbol nfMBMLIW+Symbol*1 [11 0 0 -11 0 0 ]msf411.75 294.29 mo(r)shMBMLIV+Helvetica*1 [8 0 0 -8 0 0 ]msf417.79 296.3 mo(y|x)[4 2.07996 0 ]xshMBMLIV+Helvetica*1 [11 0 0 -11 0 0 ]msf427.87 294.29 mo(\))shMBMLIW+Symbol*1 [0 -11 -11 0 0 0 ]msf16.57 151.92 mo(s)shMBMLIV+Helvetica*1 [0 -8 -8 0 0 0 ]msf20.12 145.29 mo(4)sh11.1 145.29 mo(2)sh735.29 203.02 mo
786.52 203.02 li
786.52 89.74 li
735.29 89.74 li
cp
0 0 0 0 cmyk
f
.749721 .679194 .670497 .901457 cmyk
MBMLIW+Symbol*1 [11 0 0 -11 0 0 ]msf740.77 101.92 mo(r)shMBMLIV+Helvetica*1 [8 0 0 -8 0 0 ]msf746.81 103.93 mo(x)sh740.77 128.42 mo
758.05 128.42 li
758.05 111.14 li
740.77 111.14 li
cp
.0371099 .0246281 .0246586 0 cmyk
f
742.5 119.78 mo
756.32 119.78 li
0 .676905 .505577 0 cmyk
@
740.77 145.7 mo
758.05 145.7 li
758.05 128.42 li
740.77 128.42 li
cp
.0371099 .0246281 .0246586 0 cmyk
f
742.5 137.06 mo
756.32 137.06 li
.409003 .236759 1 .0179446 cmyk
@
740.77 162.98 mo
758.05 162.98 li
758.05 145.7 li
740.77 145.7 li
cp
.0371099 .0246281 .0246586 0 cmyk
f
742.5 154.34 mo
756.32 154.34 li
.742672 0 .706081 0 cmyk
@
740.77 180.26 mo
758.05 180.26 li
758.05 162.98 li
740.77 162.98 li
cp
.0371099 .0246281 .0246586 0 cmyk
f
742.5 171.62 mo
756.32 171.62 li
.674006 .147494 0 0 cmyk
@
740.77 197.54 mo
758.05 197.54 li
758.05 180.26 li
740.77 180.26 li
cp
.0371099 .0246281 .0246586 0 cmyk
f
742.5 188.9 mo
756.32 188.9 li
.250126 .628443 0 0 cmyk
@
.749721 .679194 .670497 .901457 cmyk
MBMLIV+Helvetica*1 [9 0 0 -9 0 0 ]msf763.53 123.01 mo(0.01)[5.00403 2.50195 5.00403 0 ]xsh763.53 140.29 mo(0.05)[5.00403 2.50195 5.00403 0 ]xsh763.53 157.57 mo(0.1)[5.00403 2.50195 0 ]xsh763.53 174.85 mo(0.2)[5.00403 2.50195 0 ]xsh763.53 192.13 mo(0.5)[5.00403 2.50195 0 ]xsh%ADOBeginSubsetFont: Helvetica-Bold Initial
ct_T42Dict begin
-1.016 -0.48 1.434 1.156
 256 array 0 1 255 {1 index exch /.notdef put} for  /Helvetica-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c000003a46670676d00000000000004d000000d0a
676c7966000000000000650c0003fedc6865616400000000000011dc0000
003668686561000000000000121400000024686d74780000000000001238
000023306c6f63610000000000003568000023346d617870000000000000
589c000000206e616d6500000000000058bc000008007072657000000000
000060bc0000044e67646972000000000000000000000000000304f902bc
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300200009
feff0600fea4003d07ae01db2000019f4f010000044205c2000000200000
05c0001105c2002d0597001d0442001d0000ffda0000ffdb0000ffdafe53
ffef05d0000afffdffed03340000012200000122dffb011400af000700b7
007e000400d200aa0109002300ed013200d9011d012a00d800fe00db00e2
001a008b00a0001a004500e801f6000900e90128013200360082009e009f
ff700070003f003f00e801050015003800e9ff7bffc8fff90042008a00c4
01070113011dffb9002f00870087009a009c010c0262ffb10018004c0077
0080008200c900daffb2ffea001a003600e50111012f043bffdd00020005
001a0039008900aa00b701210123012a015bffe5000200180023005c00aa
ff4dff76ffb2ffef001a002f004e007b008a00e1011f0126012b019a01de
03edff80ff8e0007001c004e005500630063006d00810098009c00ad011f
01260162041c051500390044004b0063008e00cc00e800f2010001290142
017802d503ea03f0043b049affc400050055005c0060009f0103011d0124
01550164017001ad01b401c301f602370261033903d5047004a100020055
008800a100bd00c700d300dd00eb00ed00fa00fd0104012b013e014f017b
019d01ad01e20233025d027d028c02da02ef033103de0407048b058505bb
ff04ffd5fffa0007001e002a003b004700510058006500650066006e0075
007f00840107009700b100c300cc00df00df010a0110012f013101470154
015b016b0179009101a401ba01dc01e401e601e901f60213021f0223022f
0276027d0282028902ad02b202b902ed03110374037d03c003de03f60415
045d04c004c004df052d0574061c064b0751fe94fedfff2dff90ff9affea
0016001600240029002d003e0104006d006d008400870089008e009c00a4
00ab00ae00b200b2fffb013900c400d100df00e100ef00f70121011c011c
012101320138015001510154016c016d017f019801a401aa01b601ba01bb
01bb00d701d701fb01fb01fe00190209022d025b026102790279029a0098
02d302da02ef030c03210328032d034b0353fff103ad03b103f20425045a
0471047b048a0498049f051c053d0557055a0570059505b605cb05d605ef
05f4061d068706a406b406d307080734079807fe012201320120012500b4
00be0082009603700132012400430184011d015600cc010500ed00c500fb
00f900c000a7011d00fe035500880026ffa100b8ff8800dd00bd00b5037c
003c00910293024aff3f03a803090132fff700820030002a002a002a002a
002a002a002a00fe0098012a011f013400000029fe50000e0442002305c2
002d402a292827262524232221201f1e1d1c1b1a19181716151413121110
0f0e0d0c0b0a090807060504030201002c4523466020b02660b004262348
482d2c452346236120b02661b004262348482d2c45234660b0206120b046
60b004262348482d2c4523462361b0206020b02661b02061b00426234848
2d2c45234660b0406120b06660b004262348482d2c4523462361b0406020
b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd4423
20b8015a51582320b08d44235920b0ed51582320b04d44235920b0905158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560
442d2c01b9400000000a2d2c00b9000040000b2d2c2045b00043617d6818
b0004360442d2c45b01a234445b01923442d2c2045b00325456164b05051
5845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360
442d2c20b0032552582359212d2c69b04061b0008b0c6423648bb8400062
600c642364615c58b0036159b002602d2c45b0112bb0172344b0177ae518
2d2c45b0112bb01723442d2c45b0112bb017458cb0172344b0177ae5182d
2cb002254661658a46b040608b482d2cb0022546608a46b040618c482d2c
4b53205c58b002855958b00185592d2c20b0032545b019234445b01a2344
4565234520b00325606a20b009234223688a6a606120b0005058b21a401a
4523604459b0005258b219401945236044592d2cb9187e3b210b2d2cb92d
412d410b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2c
b9187ec4e00b2d2c4b525845441b2121592d2c0120b003252349b04060b0
206320b000525823b002253823b002256538008a63381b21212121215901
2d2c456920b00943b0022660b00325b005254961b0805358b21940194523
616844b21a401a4523606a44b209191a45652345604259b00943608a103a
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c764520b003254523616818236860442d2c
7645b00325452361682318456860442d2c7645b003254561682345236144
2db8002a2c4bb800095058b101018e59b801ff85b800441db9000900035f
5e2db8002b2c2020456944b001602db8002c2cb8002b2a212db8002d2c20
46b003254652582359208a208a49648a204620686164b004254620686164
525823658a592f20b00053586920b000545821b040591b6920b000545821
b0406559593a2db8002e2c2046b00425465258238a592046206a6164b004
2546206a61645258238a592ffd2db8002f2c4b20b0032650585158b08044
1bb04044591b21212045b0c05058b0c0441b2159592db800302c20204569
44b001602020457d691844b001602db800312cb800302a2db800322c4b20
b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920
b0032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b
8a235920b80003265358b0032545b8018050582321b8018023211bb00325
4523212321591b2159442db800332c4b535845441b2121592db800342c4b
b800095058b101018e59b801ff85b800441db9000900035f5e2db800352c
2020456944b001602db800362cb800352a212db800372c2046b003254652
582359208a208a49648a204620686164b004254620686164525823658a59
2f20b00053586920b000545821b040591b6920b000545821b0406559593a
2db800382c2046b00425465258238a592046206a6164b0042546206a6164
5258238a592ffd2db800392c4b20b0032650585158b080441bb04044591b
21212045b0c05058b0c0441b2159592db8003a2c2020456944b001602020
457d691844b001602db8003b2cb8003a2a2db8003c2c4b20b003265358b0
801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326535823
21b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800
03265358b0032545b8018050582321b8018023211bb00325452321232159
1b2159442db8003d2c4b535845441b2121592db8003e2c4bb800095058b1
01018e59b801ff85b800441db9000900035f5e2db8003f2c2020456944b0
01602db800402cb8003f2a212db800412c2046b003254652582359208a20
8a49648a204620686164b004254620686164525823658a592f20b0005358
6920b000545821b040591b6920b000545821b0406559593a2db800422c20
46b00425465258238a592046206a6164b0042546206a61645258238a592f
fd2db800432c4b20b0032650585158b080441bb04044591b21212045b0c0
5058b0c0441b2159592db800442c2020456944b001602020457d691844b0
01602db800452cb800442a2db800462c4b20b003265358b0801bb040598a
8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a
1b8a235920b0032653582321b801408a8a1b8a235920b80003265358b003
2545b8018050582321b8018023211bb003254523212321591b2159442db8
00472c4b535845441b2121592db800482c4bb800095058b101018e59b801
ff85b800441db9000900035f5e2db800492c2020456944b001602db8004a
2cb800492a212db8004b2c2046b003254652582359208a208a49648a2046
20686164b004254620686164525823658a592f20b00053586920b0005458
21b040591b6920b000545821b0406559593a2db8004c2c2046b004254652
58238a592046206a6164b0042546206a61645258238a592ffd2db8004d2c
4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b
2159592db8004e2c2020456944b001602020457d691844b001602db8004f
2cb8004e2a2db800502c4b20b003265358b0801bb040598a8a20b0032653
582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0
032653582321b801408a8a1b8a235920b80003265358b0032545b8018050
582321b8018023211bb003254523212321591b2159442db800512c4b5358
45441b2121592db800522c4bb800095058b101018e59b801ff85b800441d
b9000900035f5e2db800532c2020456944b001602db800542cb800532a21
2db800552c2046b003254652582359208a208a49648a204620686164b004
254620686164525823658a592f20b00053586920b000545821b040591b69
20b000545821b0406559593a2db800562c2046b00425465258238a592046
206a6164b0042546206a61645258238a592ffd2db800572c4b20b0032650
585158b080441bb04044591b21212045b0c05058b0c0441b2159592db800
582c2020456944b001602020457d691844b001602db800592cb800582a2d
b8005a2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a
8a1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8005b2c4b535845441b2121592db8005c2c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8005d2c2020456944b001
602db8005e2cb8005d2a212db8005f2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db800602c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db800612c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db800622c2020456944b001602020457d691844b001
602db800632cb800622a2db800642c4b20b003265358b0401bb000598a8a
20b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b
8a235920b0032653582321b801008a8a1b8a235920b0032653582321b801
408a8a1b8a235920b80003265358b0032545b8018050582321b801802321
1bb003254523212321591b2159442db800652c4b535845441b2121592db8
00662c4bb800095058b101018e59b801ff85b800441db9000900035f5e2d
b800672c2020456944b001602db800682cb800672a212db800692c2046b0
03254652582359208a208a49648a204620686164b0042546206861645258
23658a592f20b00053586920b000545821b040591b6920b000545821b040
6559593a2db8006a2c2046b00425465258238a592046206a6164b0042546
206a61645258238a592ffd2db8006b2c4b20b0032650585158b080441bb0
4044591b21212045b0c05058b0c0441b2159592db8006c2c2020456944b0
01602020457d691844b001602db8006d2cb8006c2a2db8006e2c4b20b003
265358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b003
2653582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db8006f2c
4b535845441b2121592d0000000100000001000087860ec65f0f3cf50011
080000000000a2272e8000000000d8b9a29df7dcfc270b7e094600010009
0001000100000000000100000629fe2900000c01f7dcfcdb0b7e00010000
00000000000000000000000008cc05c7009a000000000239000002390000
02aa00e103cb00a70473000004730038071d002f05c7006f01e7006302aa
005902aa0015031d002f04ac00490239007602aa002f023900800239ff90
047300400473008e04730040047300360473003604730036047300400473
0034047300360473003d02aa00e802aa00e804ac001704ac004904ac0017
04e3007b07cd00c705c7003405c700a105c7005c05c7009c055600a504e3
009c0639005505c7009a023900840473002d05c700a104e3009c06aa0097
05c7009706390065055600a30639006505c700a30556005504e3002105c7
009c0556002f078d001e055600210556002304e3003402aa00800239ff90
02aa002f04ac008b0473000002aaffce0473003b04e3007b0473004704e3
003f0473002f02aa001504e3004204e30087023900890239000904730082
0239008b071d008004e3008704e3004204e3007d04e3003c031d00820473
004202aa001504e3007d0473001a0639000e0473001a0473001504000021
031d0000023d006a031d002d04ac000405c7003405c7003405c7005c0556
00a505c700970639006505c7009c0473003b0473003b0473003b0473003b
0473003b0473003b047300470473002f0473002f0473002f0473002f0239
00760239ffce0239ffb60239ffd504e3008704e3004204e3004204e30042
04e3004204e3004204e3007d04e3007d04e3007d04e3007d047300470333
005e04730045047300420473004102cd00910473ffc304e3008905e5001a
05e5001a080000cb02aa007602aaffd504640049080000120639004705b4
00190464004904640047046400490473ffea049cffcb03f4002405b4fff7
06960007046400290231007602f6002802ec000e06250031071d003804e3
002a04e3006d02aa00e104ac00490464ffd50473001e0464004904e5fffa
047300af04730000080000bd0239000005c7003405c70034063900650800
004b078d003f0473fffb080000f10400008b040000970239008902390084
0464004903f4002104730015055600230156fea305f4004402aa00aa02aa
00aa04e3001c04e3001c0473004702390071023900920400009208000004
05c70034055600a505c70034055600a5055600a5023900760239ffb60239
ffd50239ffce0639006506390065065200690639006505c7009c05c7009c
05c7009c0239008902aaffb602aaffa802aaffbd02aaffc902aa009a02aa
004202aa001202aaffd302aa004202aaffb604e3fff10239ffe805560055
0473004204e3003404000021023d006a05c7001204e3006d055600230473
00150556008004e3008004ac004904ac005502aa005002aa001a02aa0012
06ac002f06ac005a06ac004e047300000639005504e30042023900840556
00550473004205c7005c0473004705c7005c0473004704e3003f05c70034
0473003b05c700340473003b05c700340473003b05c7005c0473004705c7
005c0473004705c7009c0600003f055600a50473002f055600a50473002f
055600a50473002f055600a50473002f055600a50473002f0639005504e3
00420639005504e300420639005504e3004204e3004205c7009a04e30087
05c7000f04e3fff1035cfffc037100010366000a035c000c0239000b0239
000306ac0084047200890473002d027bffc905c7008e0473005804e3009c
0271008b04e3009c0239002704e3009c0356008b04e3009c0329008b05c7
009704e3008705c7007504e3005c05c7009704e3008704e3008706390065
04e300420639006504e300420639006504e3004205c700a3031d008205c7
0092031d006905c700a3031d003605560055047300420556005504730042
04e3002102aa001504e3002103b8001504e3002102aaffe305c7009c04e3
007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c
04e3007d05c7009c04e3007d078d001e0639000e055600230473001504e3
00340400002104e3003404000021055600550473004204e3002102aa0015
047300360000fc910000fc900000fc250000fc180000fc2c0000fc360000
fd0d0000fc450000fcb50000fbd80000fc250000fd010000fc9d0000fcb5
0000fbfb05c700120639005504e3004204e3009c0239008b05c700a10473
008205c7009704e3008705c700a3031d0080020e000802aa00e702aa002f
023900090473008202aa0015047300300473002e047300460473003a0000
fcfb0000fc2c0000fc360239ffcc0239ffc905c7009704e300870000fc2b
05c7002905bd00a805c700a804a000a805e50019055600a8080000190564
003d05c7008f05c7008f05c700b205c4003906aa008f05c7008f0639005a
05c7008f055600a805c7005a04e500190556003106ac003d0556001b05e5
008f0556005a078d008f07ab008f06aa002f078d00a8055600a805c7005a
0800008f05cb00460473003904e3004604c5008f038d0087051d00290473
003506ac00100400002d04e3008704e3008704e3008f0538003c05c70087
04e3008704e5004604e3008704e3007f04730046040000290473001d06a8
00460473001f04e300870473003f06ac008706aa008705560029066e0087
04a000850473004606aa008704e30056055600a80473003504a000a8038d
0087023900830239008f0473002f05c7005a047300460239ffcf02890029
080000390750003c07e9008f070e0087023900040556004e0664001704e3
002905c700b204e3008f047300440617001004e30029055600310473001d
05c7008f04e3008504e300a8038d00870000fd010000fd010000fd010000
fd010000fbd80000fd430000fc9e0000fc360000fc910000fc900000fc2c
0000fd0d0000fc450000fcb50000fd430000fc250000fc250000fc360000
fc360000fc180000fc540000fc2c0000fc180000fc2c0000fc2c0000fc2c
0000fd0d0000fc2c0000fd010000fc360000fc240000fc9e0000000002aa
001504e30086071d0080031d0081071d0080031d0082031d0081040a0046
040a004702390089030bffd802aa001502aa0015047300190639000d0473
001404e3007b04e3007b04e3007b0473008104bc003b04bc003b05c7005b
05c70012049e0048055600a4055600560473004304c3003d0758009c0671
007d0633005b023d00a5043b00a502aa00e10494001b04730047011d0045
02aa00af02aa00af0b620004056500bd02a500bd040000970239008502aa
002f0473000004e200af04e200af06e400af06e400af02aa002f02a500bd
02aa002f080000f1055401d0000000000000000000000000000000000000
000000000000000000000000000002390000023900000239000002390000
023900000239000002390000023900000239000000000000000000000000
00000000000000000000023900000239000002aafff6043b00a504e3007b
02aa002f02aafff6047300050473000005c7003404e3009c0473002e0792
0065065c00420000fd220000fd220000fd220000fd220000fc900000fc8d
0000fd470000fc790000fc990000fc940000fc860000fc9a0000fc080000
fcf10000fcf70000fc800000fc820000fc540000fbfb0000fc810000fc81
0000fc810000fc820000fc820000fc3602aa00af04e200af02aa00af02aa
00af046400130464001904510011046e002405b4007705b400830231ff5e
0231ff6e0464ff530464ffd5046400110464001a08fa005e0816005e05c7
00a1023900840472008406ab0084078f00840556002f078f002f09c8002f
0c01002f078f008405560021078f002109c8002104e3009c05c7005c05c7
009c06aa0097023900890472008906ab008906ac00890473001a06ac001a
08e5001a0b1e001a06ac00890473001a06ac001a08e5001a0239008b0473
004704e3003f071d008009d70048090f0058087b003f0876006d06af006d
042c008b09440063073f00680667005d05c700340473003b0239ffb60239
ffb60639006504e3004205c7009c04e3007d05c7009c04e3007d05c7009c
04e3007d05c7009c04e3007d05c7009c04e3007d05c700340473003b05c7
00340473003b08000012071d00380639005504e3004205c700a104730082
0639006504e300420639006504e300420239ffb60a0c006d0939006808ab
003f0639005505c7009704e3008705c700340473003b08000012071d0038
0639004704e3002a05c700340473003605c700340473003b055600a50473
002f055600a50473002f0239ff1d0239ff190239ffc60239ffcc06390065
04e300420639006504e3004205c700a3031dffaa05c700a3031d005e05c7
009c04e3005c05c7009c04e3007d05c7009a04e3008705c700340473003b
055600a50473002f0639006504e300420639006504e300420639006504e3
00420639006504e300420556002304730015040000970239008405c70034
0473003b05c700a104e3007b05c700a104e3007b05c700a104e3007b05c7
005c0473004705c7009c04e3003f05c7009c04e3003f05c7009c04e3003f
05c7009c04e3003f05c7009c04e3003f055600a50473002f055600a50473
002f055600a50473002f055600a50473002f055600a50473002f04e3009c
02aa00150639005504e3004205c7009a04e3008705c7009a04e3008705c7
009a04e3008705c7008204e3006605c7009a04e300870239ffa80239ffa0
0239ffd90239ffe905c700a10473008205c700a10473008205c700a10473
008204e3009c0239008b04e3009c0239ffbd04e3009c0239ffbd04e3009c
0239ffae06aa0097071d008006aa0097071d008006aa0097071d008005c7
009704e3008705c7009704e3008705c7009704e3008705c7009704e30087
0639006504e300420639006504e300420639006504e300420639006504e3
0042055600a304e3007d055600a304e3007d05c700a3031d008205c700a3
031d008205c700a3031d005105c700a3031d000105560055047300420556
005504730042055600550473004205560055047300420556005504730042
04e3002102aa001504e3002102aa001504e3002102aaffe304e3002102aa
001505c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c
04e3007d05c7009c04e3007d0556002f0473001a0556002f0473001a078d
001e0639000e078d001e0639000e078d001e0639000e078d001e0639000e
078d001e0639000e055600210473001a055600210473001a055600230473
001504e300340400002104e300340400002104e300340400002104e30087
02aafffc0639000e0473001502aa001505c700340473003b05c700340473
003b05d3003404ec003b05d7ffe804a8ff8505c70034048d003b05c70034
0473003b05c700340473003b05c700340473003b05c700340473003b05c7
00340473003b05c700340473003b05c700340473003b055600a50473002f
055600a50473002f055600a50473002f057500a5047d002f0556002b04a2
ffb4055600a50473002f055600a50473002f055600a50473002f02390084
0239008902390084023900890639006504e300420639006504e300420639
006504e300420639006504e3ffc00639006504e300420639006504e30042
0639006504e3004207920065065c004207920065065c004207920065065c
004207920065065c004207920065065c004205c7009c04e3007d05c7009c
04e3007d0758009c0671007d0758009c0671007d0758009c0671007d0758
009c0671007d0758009c0671007d05560023047300150556002304730015
05560023047300150556002304730015055600a50473002f055600a50473
002f056d008605df008e048600370486008708d9002006dd000c056d0029
04860027056d002904860027056d00860486003708d9002006dd000c054f
003d040a002b05df008e0486008705df008e048600870655005a04860050
05df005b04120050056d00170412001e056d00170412001e056d00170412
001e05ac0059047a004c074800a80600008d08000012071d003806aa0097
071d008005c700a3031d00600222ffbc05c7003705c700a204e300a205c7
001b055600a204e3003d05c700a206390068025e009305c700a20558002d
071a00ae063900ba04e300520639006805c700a2055600a204e3002f04e5
00290556002705c700420556002d06ac007b06390044025e000405560027
04e5004804d500770473002504e3006204730077038d005204e1009a04e1
00810239008d0473008d0473003104e1009a047300310400005604e50060
04e3009a0473004e04e500600400004604e1009a05c700580473001405c7
006d05c7003b0239ffe904e1009a023900710222ffb20000fd4802c601a4
01c7006a01c7006a0000fc910000fc9001c7006a03290014032900140340
006a036a006a022200060222008c0376006a01c7ff9e036e006a01c7ff9e
08000073062500310639fffe0239008902390084055400e1078d007b078d
00e10473002f0473002f05c700340473003b0473003b055600a50473002f
055600a50473002f055600a50473002f0239ffbb0239ffb7023900890639
006504e300420639006504e300420639006504e300420556005504730042
05c7009c04e3007d0473001a0758009c0671007d0602003f04e3ffff05c7
000d04e30087071d0080043f009c0460007f0400006004d9006e0356fff8
048b00350602005d047300350655004b048600370639006502aaffef07ac
001b07ac001b09b600870000f9290000f9d30000f9d30000f9650000f9dd
0602005d047300350655004b048600370222008c032900140464003104e3
00340400002104e3004205300087052b003f04e3007704e3003f04e30042
04e30087054500870271008b078d003f03c60081031d008104e3003c04e3
fffe04e3fffe0800003f064c001504db001506b00015057f008b0555008b
01a4006f01a4006f0239008402aa010d02aafff602aa00af02aa000702aa
010d02aafff602aa00af02aa000701a4006f01a4006f02aaffef02aafff6
0272004402720044011d0005018f0041018f004101e30041031d0007023a
000b0272003e0272003e0256000c0256000c025600130256001302aa002f
025600250256002502560025023900210239000d011c00450256002b0239
001202560013025600130256000c0256000c02aa007b0272003e0000fc87
0000fc690000fc690000fd260000fd260000fc2c0000fc2c0000fb4f0000
fc690000fc2c0000fc870000fc810000fc81000000000239000000000000
0000000000000000031d002f031d002f08dc00af07ac001b02aa00e809c6
007b07ac001b071d01040702000602aa008002aa00800000000000000000
0000000000000000000000000000000006c5001b023a0020023a001b0239
001b02390020023a001a0239001b0239001e025600250155001802560025
0155002e0155000a02720044023a0020023a0047023a00200239001b023a
001b0239001b02390020023a001a0239001b0239001e0256002501550018
025600250155002e0155000a06f900340639005504e3009c04e3009c0556
002307d6fff70600002a078e001104e300820800004e06ac002f05c7005c
05c7006f04e5fffa0696000707d6002407d600310556009b04e300730556
009b04e3007304e3001306390065052b009a02ad002f036dfff605c70042
03060017030bffd804e3007b04e3007b023900090239000904e3004204e5
004804e5004804e5004804e5004804e5004804e5004804e5004804e50048
0629006a063b006a086e009b081d006e078d006a07f0006a078e0070078e
0048047300770473007704730077047300770473007704730077071d006a
071d00b208cc009008c4009a0896009108c0009504e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a04e1009a078e006a078e006a
093d006a0935006a0907006a0931006a078eff9e078eff9e0239008d0239
008d0239ffbd0239ffc10239ffd10239ffc10239ffd30239ffd30425006a
0425006a05d4006a05cc006a059e006a05c8006a0425ff9e0425ff9e04e5
006004e5006004e5006004e5006004e5006004e500600800006a0800006a
09af006a09a7006a0979006a09a3006a04e1009a04e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a071d006a08c4006a08c0006a
0792ff9e05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b05c7
003b05c7003b07ec006a07ec006a099b006a0993006a0965006a098f006a
07ecff9e07ecff9e04e5004804e50048047300770473007704e1009a04e1
009a023900510239005604e5006004e5006004e1009a04e1009a05c7003b
05c7003b04e5004804e5004804e5004804e5004804e5004804e5004804e5
004804e500480899006a0878006a0a73006a0a7c006a0a15006a0a77006a
09c7006609c7006604e1009204e1009204e1009204e1009204e1009204e1
009204e1009204e1009209c7006a09c7006a0b76006a0b6e006a0b40006a
0b6a006a09c7ff9e09c7ff9e05c7003b05c7003b05c7003b05c7003b05c7
003b05c7003b05c7003b05c7003b0a25006a0a25006a0bd4006a0bcc006a
0b9e006a0bc8006a0a25ff9e0a25ff9e04e5004804e5004804e5004804e5
004804e5004804e5004804e5004805c7003705c7003706cd000606cd008c
07d8003704e1009204e1009204e1009204e1009a04e10092076300060784
008c07e2000607ca008c080700a20239ffbf0239ffaa0239ffb60239ffb6
0239ffcf0239ffc9025effd2025effc2043b002d0453008c04e1009a04e1
009a04e1009a04e1009a04e3009a04e3009a04e1009a04e1009a05560027
0556002707a500580797008c071d006a05c7003b05c7003b05c7003b05c7
003b05c7003b07f60045082b0059086500060899008c0852003104e50048
0473007704e1009a0239008d04e5006004e1009a05c7003b06cd008c0784
008c07ca008c0453008c07d4005e0775006c0842006c0239ffb604e1009a
067d003d04f700db04f7007b03220013031e002b0464003104e5004804e5
004804e5004804e5004804e5004804e5004804e5004804e5004804e50048
04e5004804e5004804e5004804e5004804e5004804e5004804e500480239
ffb60239ffb60239ffb50239ffb60239ffb60239ffb60239ffb60239ffb6
0239ffb60239ffbe0239ffbe0239ffb50239ffbe0239ffbc0239ffbe0239
ffbe0239ffbe0239ffbe04e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a04e1009a06cd000606cd008c
0629006a086e006a078d006a063b006a085c006a07f0006a06cd000606cd
008c0629006a086e006a078d006a063b006a085c006a07f0006a04700006
0453008c0453008c0425006a05d4006a059e006a0425006a05cc006a05c8
006a047000060453008c0453008c0425006a05d4006a059e006a0425006a
05cc006a05c8006a07a500060797008c0797008c071d006a08c4006a08c0
006a071d006a08c4006a08c0006a07a500060797008c0797008c071d006a
08c4006a08c0006a071d006a08c4006a08c0006a05c700a305c7005c0639
00650239003b05aa008f055600a305c7004a0000fcfb04b5004a04e3003f
0639005a04e5004607b0004107b4004205e5001a06ac004506ac004506ac
004306ac0043063900b405560029082200a205e1005b06ac007b05c7006d
05c700340473001a080a00a20642005b0547001503d0001f0636003005ba
002905c700a30473003b02aaffcc04ac009a0425009a063d009a05240087
05c700a10473008204e300340400002108d9ffef06ddfff7054f0062040a
0033056d00a00412006a05df00a20486007c05df005f0412002c04f80022
04120028056dfff80412ffe105ac00a0047a006205ac00a0047a00620556
00230556002304d900ac037c007505ac00a004d7006206e300a00552006a
077600a205d9007c05560023055600230731001305d100230767002505f8
00250767002505f80025075b00360543001b05df00a20486007c0473003b
054f00a6054f00a606ac007b04f0005b088a003e06a6003305c7003904e1
001d05eb002f04e3001a04730047054f0062040a003305f10022049c0014
02390089056dfff80412ffe10556002f05c7003405c7005c0473004704e3
fff104e3002102390059031e002b04e30021055600a304e3007b04e3007b
055600a50473002f0473002d0239fff305c7009c01a9001a01a9001a02aa
000c02aa000c02aa000702aaffe102aa00e802aa002402aa0024067d0057
067d003d067d00ad02aa00e8067d003d067d005c067d011002aa00e802aa
00e8063900680412002c0412002c055600a504e3008005c7005c06aa0097
063000970548001605c7005c05c7005c05c7005c04730047047300470473
004704e3003f061b003a06a80039062e003b0384002b062200240549003b
04e5004f02aa00bf02aa00bf02aa00bf02aa00bf025d003d025e003d03cc
000903cc000903c3000003c3000003c3000004c2001303fe0027043c005c
044400780444007803070055034f0012070f003e0662004405fe00350000
f7dc0698004a0545004901ec004e01f4004e01b3002a01b2000c01d3002b
01d3001a033c001f0343001f03420013033f0013033f001302ff004e0224
000a0224000b07ec003d0982004e0933004b093300020149004e04850025
05d2000705d1000d04d10014047a00200224000a0224000b044b0041044b
004104290041038c0008049e00440000fb230000fc720000fb870000fc56
0000fc4f0000fa110000fcaf0000fe390000fc470000fc100000f9d30000
fc5e04cc003c04cc00380468003c046800380821001b04a6002104440022
0533003b069a0037057f003a071d006a08c4006a08c0006a05c7003705c7
0037025effd3025effd20556002705560027045f001605e5001a05e5001a
05e5001a0800ffeb0800ffeb080003b40800038c080003b40800038c0800
ffe90800ffe9080003b40800038c0800ffe90800ffe908000000045f0016
011d0045023a001e023a001802720021023a000d023a001805c7005c0639
005505c7005c045e0023063c002f04e3002105c700340532005306250032
0508003205c70058071d008006420033067800390832003604b5004a04b5
004a03470042034300470346004103430047034600570344004f03460057
0344004f03a1005703940057039400570394005703a1005703a0000d0394
0000039400000394000003a0000d03e9005703dd005703dd005703dd0057
03ea00570397000303fc003803fc00290412001505a8003106de002e039b
00730000fbf40000fbf40000fbe00000fbe00000fbe00000fbe00000fb9e
0000fb9e0000fcf104cc0038046800380aac006509560042044400780444
0078044400780329002a0329002a035d002a050d0028037800570378002d
032900210329002102de003202de00320378002f019400610329005c050d
005b037800600378002f032900320378002f0378002f0378005901e4000f
037800590383003a050d005b03290012036e00540329001a0378004604f4
0052066f003604f5005204e3004204e300410501003b04fe003d0530003b
078e00420329000e019400610236005c0378005903290012036e00540329
001a0378006d0329000e040a00460604001202390089043c005c08980029
07240037052c00210558001d0320000e052b002303730017031c000f031f
001002390092040000920239008504000097023900920400009202390085
040000970519001b070200090310007e05d500a208c00022047300400351
002e04930060047300360473003604730036047300400473003404600036
0473003d03cc000903cc000903cc0009046d00160468004a04bc004e048d
004406d9004e048d0044048500440562001f06e7004e048d004e047d0044
082f005204d1004e04d100660623004e0496004a04b4004e0625004e04aa
006605a8004e04c100290693004e04a4004e0625004e04a2005204e1004e
04b600660519004e04cd004e04e100660519004404cf0066047900460483
004a0519004e047f0048048b0048048d00480504004e0617004e04b80081
04d500b10473003e0473003104a2004e049e006604960048045e004e04e9
004e04d5003d04fa004c04f4004c073b004c04e9004804d900480562001f
07a8006d0514006d04c1003d08c7004c0514004c0514007106fc006d04c5
003d0504004c0673004c0502007b0625004a0523004206c5003d04f40048
06aa004c050a004c0517004c050400710591004c051f004c051b00770558
004e0523007b04d9004404d300390583004c0514004604cd004404cd0044
0535004c064c004a04d9003d050a007904f4004c04f2004a056d004c031f
0064047f004804b000480514004605d9003d060600660000000000000068
000000680000006800000068000000dc0000012000000330000004700000
06100000086c000008b800000960000009e000000af400000b6400000bd4
00000c1000000c5400000ccc00000da000000e0800000f00000010080000
10d4000011a0000012a00000132000001414000014fc00001558000015f0
00001680000016d8000017700000184000001a1c00001b3800001c1c0000
1d0000001dac00001e1000001e7400001f7800001fe000002030000020ac
00002194000021e0000022ec0000237c00002428000024b4000026080000
26e8000028280000288800002910000029b400002b7400002cb800002d98
00002e4000002ea400002f1000002f780000302400003058000030ac0000
31f4000032a400003380000034340000355c000036280000371c000037b0
00003818000038a0000039cc00003a0c00003b5c00003bfc00003ca80000
3d6400003e1c00003eb000003fbc00004050000040f8000041c00000423c
0000437c000044ac00004574000046500000469400004774000048240000
483c000048540000497c00004994000049ac000049c4000049dc000049f4
00004a0c00004a2400004a3c00004a5400004a6c00004ba800004bc00000
4bd800004bf000004c0800004c2000004c3800004c5000004c6800004c80
00004c9800004cb000004cc800004ce000004cf800004d1000004d280000
4d4000004d5800004dd000004e4000004fd000005154000052cc00005358
000053d4000054e00000573c0000590800005a0800005a6000005ac40000
5ba400005c8400005dfc00005f0000005f8000006020000060c4000061f8
00006308000063f4000064ac00006514000065940000664c0000678c0000
6824000068e800006a7c00006be000006cb000006d2400006d6c00006e4c
00006f5000007098000071640000726c00007370000073e0000073e00000
73f800007410000074280000752800007678000076b0000076ec00007794
00007844000078a8000079040000798000007aa000007ab800007ad00000
7b1000007c7c00007d1c00007dc000007e9800007f5c00007ffc00008050
000080c40000817c00008308000083200000833800008350000083680000
838000008398000083b0000083c8000083e0000083f800008410000084b8
000084d0000084e8000085000000851800008564000085f0000086d00000
870c000087a8000087f80000888c00008964000089cc00008a6800008b40
00008c1800008ce400008cfc00008d1400008d2c00008d4400008db80000
8e9800008ffc000090140000902c00009120000091c0000091fc000092a8
00009300000093980000946c0000958c0000968400009808000098b40000
98cc000098e4000098fc00009a9000009bc000009bd800009bf000009c08
00009c2000009ce800009d0000009d1800009d3000009d4800009d600000
9d7800009d9000009da800009dc000009dd800009df000009f4000009f58
00009f7000009f8800009fa000009fb800009fd000009fe80000a0000000
a0180000a0300000a0480000a0600000a0780000a0900000a0a80000a0c0
0000a0d80000a0f00000a1080000a1ec0000a2040000a21c0000a2340000
a24c0000a2640000a27c0000a2940000a2ac0000a2c40000a2dc0000a2f4
0000a30c0000a3240000a33c0000a3540000a36c0000a3840000a4200000
a4ac0000a4c40000a4dc0000a4f40000a50c0000a5240000a53c0000a554
0000a56c0000a5840000a59c0000a5b40000a5cc0000a5e40000a5fc0000
a6140000a62c0000a6440000a65c0000a6740000a68c0000a6a40000a6bc
0000a6d40000a6ec0000a7040000a71c0000a7340000a74c0000a8500000
a8680000a8800000a8980000a8b00000a8c80000a8e00000a8f80000a910
0000a9280000a9400000a9580000a9700000a9880000a9a00000a9b80000
aa6c0000aa840000aa9c0000aab40000aacc0000aae40000aafc0000acac
0000ae4c0000aee80000afe40000b0680000b0940000b0c40000b0fc0000
b1900000b1bc0000b2180000b24c0000b2b00000b3c00000b40c0000b450
0000b4a80000b5880000b6540000b6800000b7600000b7780000b7940000
b7ac0000b7c40000b7dc0000b7f40000b80c0000b8240000b83c0000b854
0000b8e40000b9740000b9a00000b9fc0000ba740000baf00000bb980000
bc340000bd080000be640000bed00000befc0000bf580000bf700000bf88
0000c0300000c0fc0000c1440000c1a80000c2a40000c3dc0000c4180000
c4e00000c5400000c5d80000c7900000c82c0000c8f80000c9640000ca00
0000cac00000cb4c0000cc9c0000cd080000cdf00000cee00000cf2c0000
cf980000d1180000d1880000d2040000d2a80000d3600000d3fc0000d4f4
0000d5fc0000d6e80000d7c00000d8e80000da5c0000dbdc0000dd600000
de900000decc0000dfa40000e0940000e12c0000e2840000e3200000e3f8
0000e4640000e4e80000e5a40000e6300000e7740000e7e00000e9340000
ea280000ea740000eaec0000ed2c0000ed940000ee1c0000eec00000efb0
0000f0600000f1500000f2540000f3440000f41c0000f5400000f6980000
f7480000f8780000f8d80000f9380000f9740000f9c80000fa540000fb28
0000fbe00000fc940000fd280000fe700000ffb0000100e0000102080001
0294000103fc000104a400010588000105fc00010670000107b8000108f0
00010a4800010b0400010bdc00010c5400010ccc00010d3c00010da80001
0e0000010e5800010eb000010f0800010f5400010f8800010ff000011068
00011094000110c0000110ec000111200001118400011294000112c80001
130c00011344000113a0000113fc00011490000114bc000114e80001157c
000115a8000115d400011614000116f4000117340001178c000117e80001
188c000118f4000118f40001198c00011a3400011b3800011bd400011ce8
00011d7400011e1000011ebc00011f6800011f9c00012020000120d00001
2158000121a0000122180001228c000123140001239c0001248800012508
0001260c00012710000127e80001290000012a4800012ab400012c180001
2cc000012d1000012dd000012e9800012fec0001302000013088000130f4
000131a800013274000132a4000132d4000133040001349c000135040001
3534000135e8000136400001366c000136ec0001373400013778000137d8
000138340001386000013894000138c0000138ec00013924000139240001
392400013924000139240001392400013924000139240001392400013924
000139240001392400013924000139240001392400013924000139240001
392400013924000139240001392400013924000139240001392400013924
00013960000139c800013ab000013adc00013b0800013b5c00013bb80001
3bd000013c2800013cc400013e2c00013fa000014054000140f80001419c
00014250000143b00001444400014494000145a40001465c000147300001
4838000148d0000149e000014a6c00014b0000014b4400014ba400014be4
00014c1000014c7800014cc000014d0800014d5400014da000014e140001
4e4400014e8c00014ebc00014ee800014f0000014f1000014f2800014f38
00014f5000014f6400014f7c00014f9000014fa800014fb800014fd00001
4fe000014ff8000150100001502000015030000150480001506800015080
00015090000150a8000150c8000150f00001510800015118000151300001
515000015160000151700001518000015190000151a0000151b8000151d8
000151f00001520000015218000152380001526000015278000152880001
52a0000152c0000152d0000152e0000152f0000153000001532000015340
000153600001537800015390000153a8000153c0000153d8000153f00001
5408000154200001543800015450000154680001548000015498000154b0
000154d0000154f000015510000155300001555000015570000155900001
55b0000155d0000155f00001561000015630000156480001566000015678
00015690000156a8000156c0000156d8000156f000015710000157300001
5748000157600001577800015790000157a8000157c0000157d8000157f8
000158180001583000015848000158600001587800015890000158a80001
58c0000158d8000158f00001590800015920000159380001595000015968
0001598000015998000159b0000159c8000159e0000159f800015a100001
5a2800015a4000015a5800015a7000015a8800015aa000015ab800015ad0
00015ae800015b0000015b1800015b3000015b4800015b6800015b880001
5ba800015bc800015be000015bf800015c1800015c3800015c5000015c68
00015c7800015c8800015ca000015cb800015cd000015ce800015d000001
5d1800015d3000015d4800015d6000015d7800015d9000015da800015dc0
00015dd800015df000015e0800015e2000015e3800015e5000015e680001
5e8800015ea800015ec800015ee800015f0000015f1800015f3000015f48
00015f6800015f8800015fa000015fb800015fd000015fe8000160000001
60180001603000016048000160600001607800016090000160a8000160c0
000160d8000160f000016108000161280001614800016160000161780001
6190000161a8000161c0000161d8000161f0000162080001622800016248
000162600001627800016290000162a8000162c0000162d8000162f00001
6308000163200001633800016350000163680001638000016398000163b0
000163c8000163e0000163f8000164180001643800016458000164780001
6498000164b8000164d8000164f800016510000165280001654000016558
0001657000016588000165a0000165b8000165d8000165f8000166100001
662800016640000166580001667000016688000166a8000166c8000166e8
000167080001672800016748000167600001677800016790000167a80001
67c0000167d8000167f00001680800016820000168380001685000016868
0001688000016898000168b8000168d8000168f800016918000169300001
6948000169600001697800016990000169a8000169c0000169d8000169f0
00016a0800016a2000016a3800016a5000016a6800016a8000016a980001
6ab000016ac800016ae000016af800016b1000016b2800016b4000016b58
00016b7000016b8800016ba000016bb800016bd000016be800016c040001
6c1c00016c3400016c4c00016c6400016c8400016ca400016cc400016ce4
00016d0400016d2400016d4400016d6400016d8400016da400016dc40001
6de400016e0400016e2400016e4400016e6400016e8400016ea400016ec4
00016ee400016efc00016f1400016f2c00016f4400016f5c00016f740001
6f9400016fb400016fd400016ff400017014000170340001705400017074
00017094000170b4000170cc000170e4000170fc000171140001712c0001
71440001715c0001717400017194000171b4000171d4000171f400017214
00017234000172540001727400017294000172b4000172cc000172e40001
72fc000173140001732c000173440001735c000173740001738c000173a4
000173bc000173d4000173ec000174040001741c000174340001744c0001
74640001747c00017494000174ac000174c4000174dc000174f40001750c
000175240001753c000175540001756c000175840001759c000175b40001
75d4000175f400017614000176340001764c000176640001767c00017694
000176ac000176c4000176dc000176f40001770c000177240001773c0001
77540001776c000177840001779c000177b4000177cc000177e4000177fc
000178140001782c000178440001785c000178740001788c000178a40001
78bc000178d4000178ec000179040001791c000179340001794c00017964
00017974000179840001799c000179b4000179cc000179e400017a8c0001
7af000017c6400017ca000017ce000017d4400017d8c00017e1000017f6c
00017fa8000180140001806000018118000181a0000181f80001833c0001
83a40001848c000184dc000185280001858c0001870400018770000188ac
00018a2000018aa000018b3c00018c7800018e1400018e7400018fe80001
90b8000191b00001924c0001941800019454000194cc00019518000195d0
000196180001975c000198a00001997800019a7000019be000019c2c0001
9ccc00019e0c00019e7800019f2c0001a0b80001a14c0001a2240001a270
0001a2cc0001a2fc0001a3840001a3dc0001a4340001a4600001a4900001
a4e80001a5840001a6240001a6a80001a7240001a7500001a77c0001a7fc
0001a89c0001a9140001a9bc0001aa900001abe80001ad680001adc00001
ae180001ae300001ae480001ae600001ae800001aea00001aec00001aee0
0001af000001af180001af300001af500001af700001af900001afb00001
afd00001aff00001b0080001b0200001b0380001b0580001b0780001b098
0001b0b80001b0d00001b0e80001b1080001b1280001b1400001b1580001
b1700001b2300001b3000001b3b80001b4580001b5980001b5d40001b6bc
0001b7d00001b8480001b8c00001ba080001badc0001bbbc0001bc740001
bd280001bdc00001bdf80001be580001beb80001c1240001c1a80001c208
0001c2680001c2940001c2c00001c2d80001c2f00001c3080001c3200001
c34c0001c3e80001c4500001c4c80001c5380001c5c80001c69c0001c7f4
0001c9500001caa40001cc280001ccf80001ce0c0001ce6c0001cff80001
d0dc0001d1b40001d2f40001d3d80001d5040001d65c0001d8740001d968
0001dadc0001dc3c0001dca00001dd5c0001de000001de580001de8c0001
deb80001dee80001df140001df480001df700001df9c0001dfc80001e084
0001e1280001e16c0001e1ac0001e2480001e31c0001e3900001e41c0001
e4b40001e58c0001e6000001e66c0001e7100001e7b40001e7f40001e834
0001e8780001e8bc0001e8e80001e9500001e9b80001ea240001eadc0001
eb3c0001eb6c0001ebb80001ec140001ec580001ec9c0001ecdc0001ed1c
0001ee2c0001eed00001ef1c0001ef5c0001ef9c0001eff00001f0440001
f0a40001f1040001f1740001f1b40001f2180001f2640001f3340001f374
0001f3740001f3740001f3740001f3740001f3740001f4040001f5100001
f5880001f5e80001f6780001f6900001f7300001f8700001f9040001f97c
0001f9f40001f9f40001f9f40001f9f40001f9f40001f9f40001f9f40001
fba00001fcb40001fd6c0001fe300001ffb800020008000201a000020314
0002037c000203b8000203f8000204a80002055400020614000207280002
0774000208300002096000020a1800020adc00020c6400020cb400020e4c
00020fbc0002102400021060000210a00002114c000211f8000212640002
13600002139c000213d800021438000214b8000216200002170000021778
0002186c000218dc000219b400021b9400021bd400021c5000021c680002
1c7800021d6c00021eb000021f98000220cc00022160000222a00002231c
0002239c0002242c0002258c00022620000226c800022824000229800002
29dc00022a4000022b8800022ba000022bb800022bd000022be800022c00
00022c1800022c3000022c4800022c6000022c7800022c9000022ca80002
2cc000022cd800022cf400022d1000022d2800022d4000022d5800022d70
00022d8800022da000022db800022dd000022de800022e0000022e180002
2e3000022e4800022e6000022e7800022e9000022ea800022ec000022ed8
00022ef000022f0800022f2000022f3800022f5000022f6800022f800002
2f9800022fb000022fc800022fe000022ff8000230100002302800023040
000230580002307000023088000230a0000230b8000230d0000230e80002
3100000231180002313000023148000231600002317800023190000231a8
000231c0000231d8000231f0000232080002322000023238000232500002
32680002328000023298000232b0000232c8000232e0000232f800023310
0002332800023340000233580002337000023388000233a0000233b80002
33d0000233e8000234000002341800023430000234480002346000023478
00023490000234a8000234c0000234d8000234f000023508000235200002
353800023550000235680002358000023598000235b0000235c8000235e0
000235f80002361000023628000236400002366000023680000236a00002
36c0000236e00002370000023720000237400002376000023780000237a0
000237c0000237e000023800000238240002384800023868000238880002
38a8000238c8000238e80002390800023928000239480002396800023988
000239a8000239c8000239e800023a0800023a2800023a4800023a680002
3a8800023aa800023ac800023ae800023b0800023b2800023b4800023b68
00023b8800023ba800023bc800023be800023c0800023c2800023c480002
3c6000023c7800023c9800023cb000023cd000023ce800023d0800023d20
00023d3800023d5000023d6800023d8000023da000023db800023dd80002
3df000023e1000023e2800023e4000023e5800023e7000023e8800023ea0
00023eb800023ed000023ee800023f0000023f1800023f3000023f480002
3f6000023f7800023f9000023fa800023fc000023fd800023ff000024008
000240200002403800024050000240680002408000024098000240b00002
40d0000240e8000241080002412000024140000241580002417000024188
000241a0000241b8000241d0000241e80002420000024218000242300002
4248000242600002427800024290000242a8000242c0000242d8000242f0
0002430800024320000243380002441400024460000244b40002452c0002
459c000245b4000245d4000245f400024614000246340002465400024674
00024694000246b4000246d4000246f40002471400024734000247540002
477400024794000247b4000247d4000247f4000248140002483400024854
0002487400024894000248b4000248d4000248f400024914000249340002
49540002497400024994000249b4000249d4000249f400024a1400024a34
00024a5400024a7400024a9400024ab400024ad400024af400024b140002
4b3400024b5400024b7400024b9400024bb400024bd400024bf400024c14
00024c3400024c4c00024c6400024c7c00024c9400024cac00024cc40002
4cdc00024cf400024d0c00024d2400024d3c00024d5400024d6c00024d84
00024d9c00024db400024dcc00024de400024e0400024e1c00024e340002
4e4c00024e6400024e7c00024e9400024eac00024ec400024ee400024efc
00024f1400024f2c00024f4400024f5c00024f7400024f8c00024fa40002
4fc400024fdc00024ff40002500c000250240002503c000250540002506c
00025084000250a4000250bc000250d4000250ec000251040002511c0002
5134000252b40002539c0002552400025588000256400002575800025818
00025858000258f800025910000259fc00025a9400025ca800025ec80002
6098000262f4000265d4000267d80002694c00026a7400026b9800026c80
00026d9400026ed000026f9c00027018000270b400027190000272a00002
735400027400000274d0000275e8000277440002789c00027968000279b8
00027a0800027a9800027b5000027bec00027ca000027d1000027d700002
7ea800027fdc00028214000284980002858000028654000286e80002877c
000288cc00028a1000028a7800028ae000028ba800028c7400028d140002
8dc400028e5400028ef000028f5000028fb000029008000290600002911c
000291c40002929c00029360000293fc000294840002951c000295c40002
96a000029758000298700002997400029b2800029cc800029d6000029e10
00029eb800029f600002a1500002a2e40002a4780002a5fc0002a7680002
a8d00002aa340002aaa40002ab140002aba40002ac300002ad140002ae74
0002afe40002b08c0002b1340002b1680002b2440002b3140002b35c0002
b3d00002b5240002b6600002b6e00002b7640002b7c00002b8300002b8a4
0002b9800002ba780002bb700002bc480002bd600002be1c0002bedc0002
bf940002bfc40002c0240002c0700002c0bc0002c0e80002c17c0002c1dc
0002c2440002c2880002c34c0002c3f40002c4780002c4d80002c5800002
c6640002c6ec0002c7740002c8200002c8c00002c9900002ca540002cb48
0002cc680002cd380002ce000002cebc0002d0700002d1480002d2440002
d3440002d4280002d5300002d63c0002d7940002d9480002da340002db8c
0002dc540002dd1c0002ddf00002dea80002dee40002df200002df5c0002
df940002dfe00002e01c0002e0600002e0a80002e1000002e1580002e1b0
0002e1f40002e2540002e2dc0002e4080002e5380002e6380002e6b80002
e79c0002e9240002ea3c0002ea800002ebc00002ed000002ed3c0002ee00
0002ee380002ee740002ef2c0002efe80002f0300002f1040002f2200002
f2b80002f3500002f3c00002f3ec0002f4180002f4c40002f4ec0002f530
0002f5740002f6300002f6780002f6f40002f7700002f7d00002f8240002
f8500002f87c0002f9d40002fb240002fbfc0002fccc0002fdd40002fe6c
0002fed40002ff600003001c00030174000301d800030224000302580003
02e800030478000304d8000305240003061000030704000307f0000308e4
00030ae800030c0800030d2800030e6c00030f8c000311240003113c0003
11540003116c000311d800031270000312bc00031338000313a000031438
000315140003171c0003193800031ac800031af400031b2000031b540003
1b8800031bc400031c0000031c3c00031c7800031cb400031cf000031d2c
00031d6800031d9400031e7000031ec000032028000320bc000321d00003
2230000322c40003241800032590000326d40003282400032950000329ec
00032af000032c5800032ef80003313c0003327c000333bc000334680003
363c000337b40003380c000338680003393000033a1800033ae000033bc8
00033c8c00033d7000033e3400033f1800033f6000033fac00033ff80003
40440003408c000340dc0003413000034184000341d80003422800034264
000342b0000342fc0003434c0003438c000343e400034428000344700003
44b4000345e800034798000347ec0003484c000348ac000348e800034920
0003495c00034994000349e000034a2c00034ab400034ba800034c9c0003
4cb400034ccc00034db400034ee40003501400035174000352d4000353e8
000355c4000356d4000357ec000358800003591800035a3800035b180003
5c6000035cb000035d2800035e3400035f0000036014000360f000036218
000362c0000363f00003649000036530000365fc00036700000367440003
68dc0003693c00036abc00036b9400036cc000036e0800036f3000037048
0003716800037254000373f400037584000375e800037638000376c80003
7768000377ac00037944000379a400037b2000037b8400037ca000037d3c
00037d9400037e1400037f90000380ac00038260000383cc000384d00003
86740003878800038828000389200003899000038a5c00038ab400038b68
00038bd000038c8c00038ce400038d9c00038ee400038f4c000390a40003
920c0003927c000393a0000393f80003949c00039610000396a8000397a0
000399240003997c00039b6800039ce400039d2800039d6800039dac0003
9e8400039f500003a0280003a1180003a23c0003a2fc0003a40c0003a538
0003a63c0003a6ec0003a7cc0003a91c0003aa100003aafc0003abdc0003
acc40003ad9c0003aeb40003af5c0003b0540003b1340003b2940003b374
0003b4800003b5880003b6c00003b7a80003b8940003b9640003ba840003
bba40003bc780003bd6c0003be8c0003bfa80003c0900003c15c0003c244
0003c37c0003c4f80003c5a00003c5f00003c6e40003c7580003c84c0003
c9600003ca500003cb200003cbfc0003ccb40003cd880003ce8c0003cfcc
0003d0ac0003d1cc0003d3000003d4280003d4fc0003d5e80003d74c0003
d86c0003d95c0003da6c0003db5c0003dc300003dd480003ddfc0003def4
0003dff40003e14c0003e2580003e36c0003e4700003e5a80003e6ac0003
e7a40003e8780003e9b00003eb000003ebd80003eccc0003edf80003ef2c
0003f0340003f1040003f1ec0003f3480003f4780003f57c0003f68c0003
f78c0003f8740003f97c0003fa480003fb380003fbf00003fcfc0003fdd0
0003fedc0001000008cc006a0009006c00080002001000100070000007e8
0d0a00040001000000450342000100000000000000500000000100000000
0001000900500001000000000002000400590001000000000003002401ad
0001000000000004000e01d1000100000000000500080298000100000000
0006000e02a00001000000000007003202ae0001000000000012000e0457
00010000000001000009046500010000000001010010046e000100000000
0102000e047e00010000000001030014048c0001000000000104001204a0
0001000000000105000904b20001000000010004000e01df000100000001
0007002f02e00001000000020004000e01ed0001000000020007003c030f
0001000000030004001301fb00010000000300070030034b000100000004
0004000d020e0001000000040007003a037b0001000000050004000d021b
0001000000050007003603b5000100000006000400110228000100000006
0007003003eb0001000000070007003c041b000100000008000400130239
00010000000900040011024c00010000000d00040010025d00010004000c
0004000e026d00010004001f00040010027b00010005000a0004000d028b
0003000104030002000e01170003000104040002000400ad000300010405
0002000801390003000104060002000600c700030001040700020008006d
0003000104080002000c014900030001040900020008005d00030001040b
0002000c00cd00030001040c00020008006500030001040d000200060155
00030001040e00020010015b000300010410000200120087000300010411
000200080075000300010412000200060099000300010413000200060081
0003000104140002000600d90003000104150002000800df000300010416
0002000e00b90003000104180002000a017f0003000104190002000c00f5
00030001041a00020014012500030001041b00020008018900030001041d
00020006010100030001041e00020006010700030001041f0002000a010d
0003000104210002000a016b0003000104220002000c019100030001042a
0002000601a70003000104390002000a019d00030001043e0002000a0175
00030001080400020004007d000300010809000200080141000300010816
0002000e00e7000300010c010002000800b1000300010c0a0002000e009f
a920313939302d32303036204170706c6520436f6d707574657220496e63
2e20a92031393831204c696e6f7479706520414720a920313939302d3931
205479706520536f6c7574696f6e7320496e632e48656c76657469636142
6f6c640042006f006c00640047007200610073004600650074007430dc30
fc30eb30c97c974f53005600650074004700720061007300730065007400
74006fbcfcb4dcccb4004e0065006700720069007400617c979ad4063906
31064a0636004e00650067007200690074006f004600650064004c006900
680061007600610046006500740042006f006c0064004e00650067007200
690074006f041604380440043d044b04390046006500740e2b0e190e3200
4b0061006c0131006e004e0065006700720065007400610050006f006400
650062006c006a0061006e00690042006f006c00640042006f006c006403
8803bd03c403bf03bd03b105e205d105d4004600e9006c006b00f6007600
e900720054006500620061006c0054006500620061006c0041006c006400
69006e0042006f006c0064041604380440043d04380439092c094b093209
4d092101101ead006d48656c76657469636120426f6c643b2031352e3064
3165333b20323031392d30332d323148656c76657469636120426f6c6448
656c766574696361204772617348656c766574696361204665747448656c
7665746963612067726173736574746f48656c7665746963612076657448
656c7665746963612046657448656c766574696361204e65677269746148
656c7665746963612043617272656761646f48656c766574696361204861
6c7666657448656c766574696361206c696861766148656c766574696361
20c3d3e8cf48656c76657469636120c8d1ccd3cae748656c766574696361
20f2e1e431352e306431653348656c7665746963612d426f6c6448656c76
6574696361206973206120726567697374657265642074726164656d6172
6b206f66204c696e6f7479706520414748656c7665746963612065737420
756e65206d617271756520648e706f738e65206465204c696e6f74797065
20414748656c766574696361206973742065696e2065696e676574726167
656e657320576172656e7a65696368656e20646572204c696e6f74797065
20414748656c766574696361208f20756e206d61726368696f2072656769
73747261746f206469204c696e6f7479706520414748656c766574696361
2069732065656e20676572656769737472656572642068616e64656c736d
65726b2076616e204c696e6f7479706520414748656c766574696361208a
722065747420726567697374726572617420766172756d8a726b6520669a
72204c696e6f7479706520414748656c76657469636120657320756e6120
6d617263612072656769737472616461206465204c696e6f747970652041
4748656c7665746963612065722065742072656769737472657265742076
6172656dbe726b652074696c68bf72656e6465204c696e6f747970652041
4748656c76657469636120426f6c644c6967617475726573436f6d6d6f6e
204c69676174757265734e756d6265722053706163696e6750726f706f72
74696f6e616c204e756d626572734d6f6e6f737061636564204e756d6265
72734e6f204368616e6765000000b800662b01ba000401c600682b01bf01
c80028001f001a0013000b0000006e2bbf01c90025001f001a0013000b00
00006e2b00bf01c5002d0025001a0013000b0000006e2bbf01c6004b003d
0030002200150000006e2bbf01c70026001f001a0013000b0000006e2b00
ba01ca0004006d2bb801c420457d691844b8005c2bb800522bb800482bb8
003e2bb800342bb8002a2bb10840ba019000145df44009011f04000b1fd8
19eebe012e000d00e6012e000d00b0012e400c0d000963833c1f63838348
294109014b00370401001f014500240401001f0144b224ab1fb8013eb224
231fb8013db224231fb80102b2371d1fb80100400937241ffd37621ffc37
b80801401b1ff824931ff724931ff6243f1ff524311fd1371d1fd037471f
cd41b80801b21fcb2ab80201b21fca24b80401400f1fc824811fb537291f
b4373b1fb227b80401b21fb141b80401b61fa437811fa384b80401b21fa2
2ab80401b21fa124b8019ab21fa024b8019ab61f9f243f1f9683b80401b2
1f9527b80401b21f8227b80401b21f7084b80801b21f6fb3b80801b21f6e
b3b802abb61f6d24261f6224b80101400b1f5d246c1f5c24391f5441b801
25b21f4d27b80401b61f4c27cd1f4b41b80401b21f4024b8019ab21f3683
b80401b21f3524b80201b21f3224b8019ab61f2c24bb1f2884b80801b21f
2241b8040140131f20244c1f1d24261f2ca0961f2c245e1f412ab801a8b7
48282a2448279636b801f4b21f4d27b801f4b21f9527b801f4b21f6e27b8
01f4b21f6327bd01a700470029015a00250199b348296fb3b80190b21f83
b3b8019ab348283725b803e840121fb32748278427482736274827252748
2755b80154402c0797076407550733072b072907260721071e071b071408
120810080e080c080a080808060804080208000814b8ffe0402b00000100
140610000001000604000001000410000001001002000001000200000001
000002010802004a00b806008516763f183f123e113946443e113946443e
113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b
2b2b182b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b53
58b0ff1d592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b4b5279b35279eb5645
6523456023456560234560b08b766818b080622020b1eb794565234520b0
03266062636820b003266165b079236544b0eb234420b152564565234520
b003266062636820b003266165b056236544b0522344b10056455458b156
406544b25240524523614459b35045484e456523456023456560234560b0
89766818b080622020b148454565234520b003266062636820b003266165
b045236544b048234420b1504e4565234520b003266062636820b0032661
65b04e236544b0502344b1004e455458b14e406544b25040504523614459
2b2b45695342000000>
[16317 16289 16381 16153 16317 16357 16361 16245 16381 16297 16185 16309 16333
16317 16129 17497 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 6684 36 <00030034000005a805c20002000a000b00dc406b6802012705280a380637
094806680a780a880488069a0395049806aa03a504a806b801b80ac801c8
0ad803d80a150107060602000809090200080a01070502140a0a25120909
02140505251206060207082a010000020a0b04030206090a0305080b0d17
171a0b0a040605b80114b2090302b80114b60a190c657572182b764e10f4
184dfd3939fd39391139194e456544e6182f003f173c4d3f3c3c1239392f
3cfd3c05872e2b7d104b5158b004c01bb004c459872e182b7d104b5158b0
03c01bb003c4591112393912393987103c3c07103c3c3130015d005d0121
0b012101210321032101022f0176b8ab015c020afeb25ffde166febe02ba
022d02440151fa3e012ffed105c2>Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>Helvetica-Bold AddT42Char 
Helvetica-Bold /CharStrings get begin
/A 36 def
end
Helvetica-Bold /Encoding get
dup 65 /A put
pop
end
%ADOEndSubsetFont
/MBMLIX+Helvetica-Bold /Helvetica-Bold findfont ct_VMDictPut/MBMLIX+Helvetica-Bold*1 [65{/.notdef}rp /A 190{/.notdef}rp]MBMLIX+Helvetica-Bold nfMBMLIX+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf5.05 15.08 mo(A)sh/MBMLIX+Helvetica-Bold*1 uf/MBMLIX+Helvetica-Bold uf/Helvetica-Bold uf/MBMLIW+Symbol*1 uf/MBMLIW+Symbol uf/Symbol uf/MBMLIV+Helvetica*1 uf/MBMLIV+Helvetica uf/Helvetica ufgsave
0 612 mo
792 612 li
792 306 li
0 306 li
cp
clp
0 612 mo
792 612 li
792 306 li
0 306 li
cp
0 0 0 0 cmyk
f
1 lc
0 612 mo
792 612 li
792 306 li
0 306 li
cp
@
grestore
gsave
40.22 577.35 mo
264.6 577.35 li
264.6 328.69 li
40.22 328.69 li
cp
clp
40.22 577.35 mo
264.6 577.35 li
264.6 328.69 li
40.22 328.69 li
cp
.0658884 .0466316 .0484627 0 cmyk
f
.53 lw
40.22 548.27 mo
264.6 548.27 li
0 0 0 0 cmyk
@
40.22 477.8 mo
264.6 477.8 li
@
40.22 407.33 mo
264.6 407.33 li
@
40.22 336.86 mo
264.6 336.86 li
@
75.92 577.35 mo
75.92 328.69 li
@
126.92 577.35 mo
126.92 328.69 li
@
177.91 577.35 mo
177.91 328.69 li
@
228.91 577.35 mo
228.91 328.69 li
@
1.07 lw
40.22 513.04 mo
264.6 513.04 li
@
40.22 442.57 mo
264.6 442.57 li
@
40.22 372.1 mo
264.6 372.1 li
@
50.42 577.35 mo
50.42 328.69 li
@
101.42 577.35 mo
101.42 328.69 li
@
152.41 577.35 mo
152.41 328.69 li
@
203.41 577.35 mo
203.41 328.69 li
@
254.41 577.35 mo
254.41 328.69 li
@
[4.27 4.27 ] 0 dsh
50.42 525.27 mo
52.46 525.21 li
60.62 524.98 li
70.82 524.7 li
91.22 524.11 li
152.41 522.29 li
254.41 517.97 li
0 .676905 .505577 0 cmyk
@
50.42 524.76 mo
52.46 524.55 li
60.62 523.71 li
70.82 522.62 li
91.22 520.31 li
152.41 512.09 li
254.41 486.41 li
.580163 .113375 1 .00427253 cmyk
@
50.42 524.42 mo
52.46 524.11 li
60.62 522.84 li
70.82 521.17 li
91.22 517.52 li
152.41 503.15 li
254.41 443.03 li
.710414 0 .273747 0 cmyk
@
50.42 524.09 mo
52.46 523.68 li
60.62 521.97 li
70.82 519.69 li
91.22 514.55 li
152.41 491.98 li
254.41 339.99 li
.356481 .54461 0 0 cmyk
@
grestore
gsave
270.08 577.35 mo
494.46 577.35 li
494.46 328.69 li
270.08 328.69 li
cp
clp
270.08 577.35 mo
494.46 577.35 li
494.46 328.69 li
270.08 328.69 li
cp
.0658884 .0466316 .0484627 0 cmyk
f
.53 lw
270.08 548.27 mo
494.47 548.27 li
0 0 0 0 cmyk
@
270.08 477.8 mo
494.47 477.8 li
@
270.08 407.33 mo
494.47 407.33 li
@
270.08 336.86 mo
494.47 336.86 li
@
305.78 577.35 mo
305.78 328.69 li
@
356.78 577.35 mo
356.78 328.69 li
@
407.77 577.35 mo
407.77 328.69 li
@
458.77 577.35 mo
458.77 328.69 li
@
1.07 lw
270.08 513.04 mo
494.47 513.04 li
@
270.08 442.57 mo
494.47 442.57 li
@
270.08 372.1 mo
494.47 372.1 li
@
280.28 577.35 mo
280.28 328.69 li
@
331.28 577.35 mo
331.28 328.69 li
@
382.28 577.35 mo
382.28 328.69 li
@
433.27 577.35 mo
433.27 328.69 li
@
484.27 577.35 mo
484.27 328.69 li
@
[4.27 4.27 ] 0 dsh
280.28 548.57 mo
282.32 548.52 li
290.48 548.3 li
300.68 548.03 li
321.08 547.47 li
382.28 545.66 li
484.27 541.19 li
0 .676905 .505577 0 cmyk
@
280.28 548.35 mo
282.32 548.18 li
290.48 547.5 li
300.68 546.61 li
321.08 544.69 li
382.28 537.35 li
484.27 509.63 li
.580163 .113375 1 .00427253 cmyk
@
280.28 548.23 mo
282.32 548.01 li
290.48 547.08 li
300.68 545.84 li
321.08 543.08 li
382.28 531.41 li
484.27 466.25 li
.710414 0 .273747 0 cmyk
@
280.28 548.13 mo
282.32 547.86 li
290.48 546.72 li
300.68 545.18 li
321.08 541.67 li
382.28 525.3 li
484.27 363.21 li
.356481 .54461 0 0 cmyk
@
grestore
gsave
499.95 577.35 mo
724.33 577.35 li
724.33 328.69 li
499.95 328.69 li
cp
clp
499.95 577.35 mo
724.33 577.35 li
724.33 328.69 li
499.95 328.69 li
cp
.0658884 .0466316 .0484627 0 cmyk
f
.53 lw
499.95 548.27 mo
724.33 548.27 li
0 0 0 0 cmyk
@
499.95 477.8 mo
724.33 477.8 li
@
499.95 407.33 mo
724.33 407.33 li
@
499.95 336.86 mo
724.33 336.86 li
@
535.64 577.35 mo
535.64 328.69 li
@
586.64 577.35 mo
586.64 328.69 li
@
637.64 577.35 mo
637.64 328.69 li
@
688.63 577.35 mo
688.63 328.69 li
@
1.07 lw
499.95 513.04 mo
724.33 513.04 li
@
499.95 442.57 mo
724.33 442.57 li
@
499.95 372.1 mo
724.33 372.1 li
@
510.15 577.35 mo
510.15 328.69 li
@
561.14 577.35 mo
561.14 328.69 li
@
612.14 577.35 mo
612.14 328.69 li
@
663.13 577.35 mo
663.13 328.69 li
@
714.13 577.35 mo
714.13 328.69 li
@
[4.27 4.27 ] 0 dsh
510.15 566.05 mo
512.19 566 li
520.34 565.81 li
530.54 565.57 li
550.94 565.07 li
612.14 563.36 li
714.13 558.6 li
0 .676905 .505577 0 cmyk
@
510.15 565.98 mo
512.19 565.87 li
520.34 565.42 li
530.54 564.81 li
550.94 563.47 li
612.14 557.8 li
714.13 527.05 li
.580163 .113375 1 .00427253 cmyk
@
510.15 565.96 mo
512.19 565.83 li
520.34 565.27 li
530.54 564.53 li
550.94 562.83 li
612.14 554.99 li
714.13 483.66 li
.710414 0 .273747 0 cmyk
@
510.15 565.95 mo
512.19 565.8 li
520.34 565.18 li
530.54 564.33 li
550.94 562.38 li
612.14 552.73 li
714.13 380.62 li
.356481 .54461 0 0 cmyk
@
grestore
gsave
40.22 328.69 mo
264.6 328.69 li
264.6 311.48 li
40.22 311.48 li
cp
clp
40.22 328.69 mo
264.6 328.69 li
264.6 311.48 li
40.22 311.48 li
cp
.13547 .104463 .108492 0 cmyk
f
.72607 .666682 .65243 .782284 cmyk
%ADOBeginSubsetFont: Helvetica Initial
ct_T42Dict begin
-0.949 -0.48 1.445 1.121
 256 array 0 1 255 {1 index exch /.notdef put} for  /Helvetica
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c0000038c6670676d00000000000004b800000b90
676c796600000000000062a4000414b06865616400000000000010480000
003668686561000000000000108000000024686d747800000000000010a4
000023306c6f636100000000000033d4000023346d617870000000000000
5708000000206e616d6500000000000057280000070c7072657000000000
00005e340000046e67646972000000000000000000000000000303880190
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300400009
fb020600fea4003d079a01cd2000019f4f010000042f05bd000000200000
05c0001005bd00280580001a042f001f0000ffd90000ffda0000ffd9fe55
ffe605c70010fe6dfff1033b000000b9000000b902fe3f3c00c0008d009b
00af000600a800c00028005e009800c9016a00b9015c00b400d6011e002e
0080000400b8004c00cc01ffffd1006600a400af007400c2009500b1000c
0028006d0015004c008e0125ff7a000c0040004c00620084ffa200240038
008600bd0039005e008e00edffa9ffb300400052005500aa00ab00c200cb
012302b10413ffaeffe4000800510074008400aa00d1ff4cffaf0012002c
004200500051008400be012503daff680018003b0098009c009f00a100c1
00ec018201b4ff68ff76ffd0ffe100020018001c00530053007d01b401e1
03af0486ff9cffeafffe001f0028002a00520060009300a300aa00af00af
00c001000145016b0174019301950240028202b404850517fefd00060029
004700470048006f008800b400b900c400f200f901ef02180310037403c5
ff35fff3000b004b004c0052005500650076007600870087008e00ab00bb
0106013001430150017d0194019501d3022a025502580277027802e6034e
035c037903d3047304b2058c0598060bfef5ffbbffc7ffd50017001d005b
0072007e009c00c200d000f400fa01030106011c0125013b0142015e015e
0180019b02b901a101b9025001c001d002aa01df01e301ef01fb0205020c
0215022b0274029302ab02c202ce03690395039903df03f5043e050205a1
05e5062507dbfe62fe89feceff3bffe1fff800030008002100390042004e
005f0061006f00700034007f008e00ad00ad00af00bd00c400c500c900c9
00c900e3011c00ed00f800f901000112011a0132014d014d014e014f0166
0169019e01ba01ba01be01e301ef01f602000200020902110217021c0253
0262026d028002d50280031b032a034a035a03af03af03c803d603fb03fb
04050413041504470449008c046d049a049a04a604a804b204cf0539053e
054e055605800589058c036305d105d6067e068e06b206ef06f00728074c
076f078c00b400c900c000c10000000000000000000000000004012400af
0032006e0063014401620096014301a10161008a00740064018801ef0170
0028ff5d037e0347023000aa00be007b0062009a007d0089035c00a1ffd8
03aa00d70093006c0000008000a70442001d0597001d00820030002a002a
002a002a002a002a0093007600a000ac00b800ab00c50000002bfe55001a
042f002105be002740292a292827262524232221201f1e1d1c1b1a191817
161514131211100d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b9400000000a2d2c00b9000040000b2d2c2045b000
43617d6818b0004360442d2c45b01a234445b01923442d2c2045b0032545
6164b050515845441b2121592d2c20b0032552582359212d2c69b04061b0
008b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b0
112bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb01745
8cb0172344b0177ae5182d2cb002254661658a46b040608b482d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b003
2545b019236a4445b01a23444565234520b00325606a20b009234223688a
6a606120b0005258b21a401a4523614459b0005058b21940194523614459
2d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7
830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c456920b00943b0022660b00325b00525
4961b0805358b21940194523616844b21a401a4523606a44b209191a4565
2345604259b00943608a103a2d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c764520b003
254523616818236860442d2c7645b00325452361682318456860442d2c76
45b0032545616823452361442d2c4569b014b0324b505821b0205961442d
b8002b2c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db8002c2c2020456944b001602db8002d2cb8002c2a212db8002e2c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db8002f2c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db800302c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db800312c2020456944
b001602020457d691844b001602db800322cb800312a2db800332c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db800342c4b535845441b2121592db800352c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800362c20
20456944b001602db800372cb800362a212db800382c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800392c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db8003a2c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db8003b2c2020456944b00160202045
7d691844b001602db8003c2cb8003b2a2db8003d2c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8003e2c4b535845441b2121592db8003f2c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db800402c2020456944b001
602db800412cb800402a212db800422c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db800432c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db800442c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db800452c2020456944b001602020457d691844b001
602db800462cb800452a2db800472c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
482c4b535845441b2121592db800492c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db8004a2c2020456944b001602db8004b2c
b8004a2a212db8004c2c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db8004d2c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db8004e2c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db8004f2c2020456944b001602020457d691844b001602db800502c
b8004f2a2db800512c4b20b003265358b0801bb040598a8a20b003265358
2321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b003
2653582321b801408a8a1b8a235920b80003265358b0032545b801805058
2321b8018023211bb003254523212321591b2159442db800522c4b535845
441b2121592db800532c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db800542c2020456944b001602db800552cb800542a212d
b800562c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db800572c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800582c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80059
2c2020456944b001602020457d691844b001602db8005a2cb800592a2db8
005b2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a
1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db8005c2c4b535845441b2121592db8005d2c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db8005e2c2020456944b00160
2db8005f2cb8005e2a212db800602c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800612c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800622c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800632c2020456944b001602020457d691844b00160
2db800642cb800632a2db800652c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a
235920b0032653582321b801008a8a1b8a235920b0032653582321b80140
8a8a1b8a235920b80003265358b0032545b8018050582321b8018023211b
b003254523212321591b2159442db800662c4b535845441b2121592d0001
00000000000067a8ffcc5f0f3cf500110800000000005f4d8f0000000000
d8b9a29bf865fc270b9108f9000000090001000100000000000100000629
fe2900000c01f865fced0b910001000000000000000000000000000008cc
05120042000000000239000002390000023900ed02d70052047300000473
0040071d0042055600590187009c02aa008e02aa0044031d004e04ac005c
023900aa02aa0055023900af0239000004730040047300c4047300400473
003104730034047300420473004d0473004b0473004204730049023900e3
023900e304ac001c04ac005c04ac001c0473009c081f00e10556001e0556
009705c7005a05c700a5055600af04e300af0639006305c700a1023900c9
040000230556009c0473009c06aa009705c7009c06390050055600af0639
005005c700b40556006004e3002105c700aa05560034078d00250556002a
0556002a04e3002f023900800239ffbb0239002f03c100780473000002aa
002604730052047300760400003b04730038047300480239001c0473003d
0473008401c7008401c7ffda0400008001c7008906aa0084047300840473
003b047300760473003c02aa00890400004202390017047300800400000b
05c700120400000b040000150400003402acffd50214009002ac002a04ac
00120556001e0556001e05c7005a055600af05c7009c0639005005c700aa
0473005204730052047300520473005204730052047300520400003b0473
004804730048047300480473004802390067023900080239000002390025
047300840473003b0473003b0473003b0473003b0473003b047300800473
00800473008004730080047300500333006f04730068047300380473004b
02cd0095044cfff504e300c705e5001505e50012080000ed02aa008a02aa
00520464005c080000100639004205b4002a0464005c0464005a0464005c
0473ffe1049cffb403f4006a05b400280696001c0464002f0231ff7902f6
003b02ec00310625005e071d004904e3005c04e300ba02aa00e804ac005c
0464ffef047300280464005c04e50071047300c2047300c2080000ed0239
00000556001e0556001e0639005008000049078d00470473fffb080000f1
02aa004e02aa004e01c7008401c700aa0464005c03f40042040000150556
002a0156feaa05f4006002aa00b402aa00aa0400001c0400001c04730050
0239009701c700aa02aa004e0800000e0556001e055600af0556001e0556
00af055600af0239006b0239fff902390020023900020639005006390050
065200690639005005c700aa05c700aa05c700aa023900bd02aa002a02aa
fff702aa001502aa001902aa00f702aa008402aa007902aaffff02aa00a1
02aa002a0473ffe801c7ffd7055600600400004204e3002f040000340214
009005c700210473003d0556002a04000015055600800473008004ac005c
04ac007402aa005702aa000b02aa000706ac005a06ac00a306ac004b0473
0000063900630473003d023900c9055600600400004205c7005a0400003b
05c7005a0400003b047300380556001e047300520556001e047300520556
001e0473005205c7005a0400003b05c7005a0400003b05c700a505480038
055600af04730048055600af04730048055600af04730048055600af0473
0048055600af04730048063900630473003d063900630473003d06390063
0473003d0473003d05c700a10473008405c700350473003e038f00690371
004403330059031f00650239003501c7ffdf063900c9038e008404000023
01c7ffa3055600320400fff10473009c021f00830473009c01c7000c0473
009c021a004e0473009c027b008905c7009c0473008405c7002a0473000a
05c7009c047300840473000e063900500473003b063900500473003b0639
00500473003b05c700b402aa008905c7004902aa001705c700b402aa0042
0556006004000042055600600400004204e300210239001704e3002102e1
001704e30021028fffe205c700aa0473008005c700aa0473008005c700aa
0473008005c700aa0473008005c700aa0473008005c700aa04730080078d
002505c700120556002a0400001504e3002f0400003404e3002f04000034
055600600400004204e30021023900170473004b0000fcfc0000fcfc0000
fc9c0000fc680000fc860000fc8a0000fd690000fcc40000fcf60000fc70
0000fc9c0000fd5b0000fcea0000fd120000fc9105c70021063900630473
003d0473009c01c700890556009c0400008005c7009c0473008405c700b4
02aa008901aaffdb023700e102aa005501c7ffda040000800239001c0473
0048047300480400003a047300510000fd3c0000fc660000fc8a0239fffb
0239fffb05c7009c047300840000fcc4056d0024054c0098055600980427
0098059c00250556009807f0000a0554004505c7009805c7009805560098
057e002506aa009805c700980639005005c700980556009805c7005004e3
001d0556002f06d800410556002505db009805360060078d009807a10098
06aa001d070900980536009805c700640800009805b7006a047300560473
0048046200870339008704d9001c04730050063d00170400003304ab0087
04ab0087046200870498001b055400870473008704730048047300870473
007d04000048040000330400001706a800460400001404910087044e005c
063900870657008704e3001b05c7008703ff00870414002f063900870477
005005560098047300500427009803390087023900ba01c7008704000023
05c70050040000480239001d020300290800002506c3001b07e10098067c
008701c7ffdd055600620639004e0473001b055600980462008704000048
0617001b0473001b0556002f0400001705c700980473008704730098031d
00870000fd5b0000fd5b0000fd5b0000fd5b0000fc700000fd930000fd2a
0000fc8a0000fcfc0000fcfc0000fc860000fd690000fcc40000fcf60000
fd930000fc9c0000fc9c0000fc8a0000fc8a0000fc680000fc860000fc66
0000fc680000fc860000fc660000fc660000fd500000fc660000fd5b0000
fc8a0000fc8d0000fd2a000000000239001b0473008306aa008302aa0088
06aa008302aa008902aa0088042b0052042b005302020087033afffd0239
0017023900170400000a05c70011040000140473009c0473009d0473009c
0400008004b2003904b2003905c7005905c7002104890049055600af0556
0060040000420498003906e600aa05950080060a0052021400b6037300b6
023900c3048c002b0400003b0134005102aa00c102aa00c20b06000e0556
00ed029600ed02aa004e01c700aa02aa0055044cfff5042f00c1042f00c2
056500c1056500c202aa0055029600ed02aa0055080000f102d500a4011d
000000000000000000000000000000000000000000000000000000000000
023900000239000002390000023900000239000002390000023900000239
0000023900000000000000000000000000000000000000000000011d0000
008f000002aafff7037000b60473009c02aa005502aa0006044c0072044c
00730556001e04e300ae04730048071c00500568003b0000fd5e0000fd5e
0000fd5e0000fd5e0000fcc90000fcd20000fd980000fccd0000fcef0000
fce10000fcd90000fcec0000fc5e0000fd440000fd4a0000fccf0000fcd1
0000fc860000fc910000fcc10000fcc10000fcc10000fcc20000fcc20000
fc8a01550061027b00610155006101550061046400320464002b03f4002d
03f4002f05b4011305b400280231006b0231fe830464ff330464ffef0464
002b0464002d08fa006f0816006f0556009c023900c9047200c906ab00c9
078f00c905560034078f003409c800340c010034078f00c90556002a078f
002a09c8002a0473009c05c7005a05c700a506aa009701c70084038e0084
0555008405c700840400000b05c7000b078e000b0955000b05c700840400
000b05c7000b078e000b01c700890400003b0473003806aa008409e20074
08c1004f07db003807da006b05a7007102f7005808e7007106f0006b05a1
00530556001e047300520239001e0239ffff063900500473003b05c700aa
0473008005c700aa0473008005c700aa0473008005c700aa0473008005c7
00aa047300800556001e047300520556001e0473005208000010071d0049
063900630473003d0556009c04000080063900500473003b063900500473
003b01c7ffbe09cd005408fc006f07fb00380639006305c7009c04730084
0556001e0473005208000010071d00490639004204e3005c0556001e0473
00520556001e04730052055600af04730048055600af047300480239ff71
01c7ff350239fff801c7ffaa063900500473003b063900500473003b05c7
00b402aaffd605c700b402aa004f05c700aa0473008005c700aa04730080
05c700a1047300840556001e04730052055600af04730048063900500473
003b063900500473003b063900500473003b063900500473003b0556002a
0400001502aa004e023900c90556001e0473005205560097047300760556
009704730076055600970473007605c7005a0400003b05c700a504730038
05c700a50473003805c700a50473003805c700a50473003805c700a50473
0038055600af04730048055600af04730048055600af04730048055600af
04730048055600af0473004804e300af0239001c063900630473003d05c7
00a10473008405c700a10473008405c700a10473008405c700390473001b
05c700a1047300840239ffec01c7ff9e02390027023900160556009c0400
00800556009c040000800556009c040000800473009c01c700890473009c
01c7ff9d0473009c01c7ffb50473009c01c7ffc006aa009706aa008406aa
009706aa008406aa009706aa008405c7009c0473008405c7009c04730084
05c7009c0473008405c7009c04730084063900500473003b063900500473
003b063900500473003b063900500473003b055600af04730076055600af
0473007605c700b402aa008905c700b402aa008305c700b402aa004a05c7
00b402aa0018055600600400004205560060040000420556006004000042
0556006004000042055600600400004204e300210239001704e300210239
001704e300210239ffe204e300210239ffe705c700aa0473008005c700aa
0473008005c700aa0473008005c700aa0473008005c700aa047300800556
00340400000b055600340400000b078d002505c70012078d002505c70012
078d002505c70012078d002505c70012078d002505c700120556002a0400
000b0556002a0400000b0556002a0400001504e3002f0400003404e3002f
0400003404e3002f04000034047300840239001005c70012040000150239
001c0556001e047300520556001e047300520556001e047300520556001e
0473ffcb0556001e047300520556001e047300520556001e047300520556
001e047300520556001e047300520556001e047300520556001e04730052
0556001e04730052055600af04730048055600af04730048055600af0473
0048055600af047300480556008c0473fff0055600af04730048055600af
04730048055600af04730048023900ae02390099023900c701c700840639
00500473003b063900500473003b063900500473003b063900500473ffd8
063900500473003b063900500473003b063900500473003b071c00500568
003b071c00500568003b071c00500568003b071c00500568003b071c0050
0568003b05c700aa0473008005c700aa0473008006e600aa0595008006e6
00aa0595008006e600aa0595008006e600aa0595008006e600aa05950080
0556002a040000150556002a040000150556002a040000150556002a0400
0015055600af04730048055600af04730048056d007505df009604860052
048600870723000a05890017056d002404860043056d002404860043056d
00750486005208d9001006dd0012054f0043040a003005df009604860087
05df009604860087065500500486005205df006004120037056d00100412
0019056d001004120019056d00100412001905ac005e047a006907480098
0600008d08000010071d004906aa009706aa008405c700b402aa004c0222
ffc50556001b05c700c504e300d505c70029055600c504e3004805c700b0
06390071023900ba055600b00556002f071d00be05c700b004e300620639
007105c700b0055600c504e3005804e1002f0556002905c700500558003d
06a8007f063900640239000a0556002904e3005a04e300b40473001204e3
006804730077038d004a04e3003b04e5008f023900b0047300b004730025
04e300b8047300420400007104e3006f04e300aa0473004c04e3006f0400
003b04e300b805c700770473000e05c7008f0610006a0239000a04e300b8
0239009a0222000b0000fd19023900b0016c0088016c00880000fcfc0000
fcfc016c008802ca001a02b5001a03050088031200880222002e0222002f
031e00880362006f033300880362006f0735007f0625005e0639ffef01c7
008401c700aa047200ed06ac009c06ac00ed04730048047300480556001e
0473005204730052055600af04730048055600af04730048055600af0473
00480239fff00239ffdb01c70079063900500473003b063900500473003b
063900500473003b055600600400004205c700aa047300800400000b06e6
00aa05950080060200610473ffd605c7fff20473008406aa008403f0009c
0460009a03a6005a03e9000c02cf00020448005c06020061047300500655
004e0486004c0639005002aa001e07c6002407c6002408e6ffca0000f920
0000fa0b0000fa0b0000fa060000fa0606020061047300500655004e0486
004c0222002f02b5001a0473002504e3002f040000340473003b04d20084
04dc00380473007204bd003804d7003d0473008204d7008202220086078d
00470387008802aa008604d2003c04b80032052b00320772003805600017
043a001705ce001c04c2008904b8008901a9008a01a9008a01c700aa0187
007802aa000802aa00c102aa003a0187007802aa000802aa00c102aa003a
01a9008a01a9008a02aa001e02aafff7023a0042023a004100e4ffed0155
00450155004401c4004402e400090200000b023a004e023a004f0256000e
0256000e025600240256002402aa00550256002e0256002e0256002e0200
00210200000600e300440256003a023a000902560024025600240256000e
0256000e02aa0078023a004f0000fccd0000fca20000fca20000fd6f0000
fd6f0000fc490000fc490000fb9e0000fca20000fc490000fccd0000fcc2
0000fcc20000000002390000000000000000000000000000031d004e031d
004e06da00c107c60024023900e308e6009c07c60024071d00d00703001b
023900800239008000000000000000000000000000000000000000000000
0000067b003a023a00200239001a02390021023a002702390025023a0021
023900240256002e0155002b0256002e0155004701550022023a0042023a
0020023a006202390020023900180239001a02390021023a002702390025
023a0021023900240256002e0155002b0256002e0155004701550022063c
0011063900630473009c0473009c0556002a06ab00280600003007560011
0473007207c8005806ac005a05c7005a0556005904e500710696001c06ab
003406ab0028055600af04730076055600af0473007604e3000206390050
04c400a1024100230369001105c7005002bb0023033afffd0473009c0473
009c01c7002a01c7002a0473003d04e3005a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a04e3005a05c1005b05b3005b076c00880776
008807760088078d008807ca006f07a0006f047300770473007704730077
04730077047300770473007706c2008806c200880874008808890088085b
00880868008804e3003b04e3003b04e3003b04e3003b04e3003b04e3003b
04e3003b04e3003b073300880733008808e5008808fa008808cc008808d9
00880929006f0929006f023900b0023900b002390041023900390239003d
0239003d023900230239002303a5008803a5008805570088056c0088053e
0088054b0088059b006f059b006f04e3006f04e3006f04e3006f04e3006f
04e3006f04e3006f07a5008807a5008809570088096c0088093e0088094b
008804e300b804e300b804e300b804e300b804e300b804e300b804e300b8
04e300b806c20088088900880868008808b8006f0610006a0610006a0610
006a0610006a0610006a0610006a0610006a0610006a0791008807910088
0943008809580088092a0088093700880987006f0987006f04e3005a04e3
005a047300770473007704e3003b04e3003b023900b0023900b004e3006f
04e3006f04e300b804e300b80610006a0610006a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a04e3005a04e3005a0811005b080c005b
0991008809d80088097f0088099b008809d3006f09ce006f04e3003b04e3
003b04e3003b04e3003b04e3003b04e3003b04e3003b04e3003b096c0088
096c00880b1e00880b3300880b0500880b1200880b62006f0b62006f0610
006a0610006a0610006a0610006a0610006a0610006a0610006a0610006a
09ca008809ca00880b7c00880b9100880b6300880b7000880bc0006f0bc0
006f04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a
0556001b0556001b0666002e0661002f07a9001b04e3003b04e3003b04e3
003b04e3003b04e3003b06ac002e06a7002f06d2002e06ba002f083100b0
0239ffcf0239ffce0239ffcc0239ffda0239ffdc0239ffc50239ffe10239
ffee0343002e0348002f04e300b804e300b804e300b804e300b804e300aa
04e300aa04e300b804e300b8055600290556002906b1002e0713002f06c2
00880610006a0610006a0610006a0610006a0610006a075a002e0789002f
0792002e07a9002f0878005e04e3005a0473007704e3003b023900b004e3
006f04e300b80610006a05d5007206a7002f06ba002f0348002f0789002f
0713002f07a9002f0239ffcb04e300b804ac002504ea011704f700a102f3
001b02bb00230473002504e3005a04e3005a04e3005a04e3005a04e3005a
04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3005a04e3
005a04e3005a04e3005a04e3005a0239ffd70239ffe40239ffd20239ffd7
0239ffdb0239ffdb0239ffcd0239ffe00239ffc80239ffc30239ffdc0239
ffdc0239ffd70239ffd70239ffd20239ffcd0239ffd20239ffd704e300b8
04e300b804e300b804e300b804e300b804e300b804e300b804e300b804e3
00b804e300b804e300b804e300b804e300b804e300b804e300b804e300b8
04e300b804e300b80666002e0661002f05c1005b076c00880776008805b3
005b07760088078d00880666002e0661002f05c1005b076c008807760088
05b3005b07760088078d00880343002e0348002f0348002f03a500880557
0088053e008803a50088056c0088054b00880343002e0348002f0348002f
03a5008805570088053e008803a50088056c0088054b008806b1002e0713
002f0713002f06c20088088900880868008806c200880889008808680088
06b1002e0713002f0713002f06c20088088900880868008806c200880889
00880868008805c700b405c7005a0639005001c70020051d0029055600af
05c700a10000fd31055200680473003806390050047300480772005b0738
004505e5001306ac003d06ac003d06ac003a06ac003a066d001d04e3001b
082200d005e1008a06a8007f05c7008f0556001e0400000b079900d005cf
008a04da003802ca002405d900160588003805c700b404730052031f0000
04da00a103eb00a1064900a104cf00840556009c0400008004e3002f0400
003408d9001406dd0030054f0072040a0047056d00a50412007a05df00ac
0486009105df00630412003f04f8002b0412003a056d002e0412002405ac
00ac047a007705ac00ac047a00770556002a0556002a04d900bc037c0091
05ac00ac047a0077063200a504df007a075f00ac059b00910556002a0556
002a06fe0028054e00350748003a059400260748003a0594002607720048
05b3003805df00ac0486009104730052054f00ac054f00ac06a8007f04dc
005d0855004405e0002605560025040000040556003404b6000b0400003b
054f0072040a004705f10026049c0024023900bd056d002e041200240556
00340556001e05c7005a0400003b0473ffe804e3002101c7003e02bb0023
04e30021055600af0473009c0473009c055600af047300480456002301c7
ffda05c700aa01a9002101a9002102aa003302aa003302aa003a02aaffe9
023900e302aa003c02aa003c057f005b04ac002504ac0074023900e304ac
0025057c004c04ac0074023900e3023900e3063900710412003f0412003f
055600ae0473008005c7005a06aa009705dd0097059b004605c7005a05c7
005a05c7005a0400003b0400003b0400003b0473003805ca003006c6002e
063f002f031f001a062e001904e900310488004502aa00be02aa00be02aa
00be02aa00be0277003b0277003b034b0000034b0000034b0000034b0000
034b00000487001203f7001e045e0054043600830436008302fd005d034f
0012069900390655003e052900300000f86506e1002204e9002001e0004b
01e9004b015d0025015d000a0199002a0198001202fb0017030400170267
0013025700120257001202c8004b01d8000701d8000707e9003a097c004b
0931004909310002013c004b04570022058900050589000d04be00150442
001801d8000701d8000703fe003d03fe003d0404003a036f000b0467003c
0000fb760000fcc10000fc080000fc730000fc730000fa630000fce00000
fe950000fc8e0000fc510000fa0b0000fc9f046500360465002204010034
0401002407760017044c001b03ea001d051a00340653003204c8003306c2
008808890088086800880556001b0556001b0239ffdf0239ffe105560029
055600290404001505e5001405e5001405e500140800ffeb0800ffeb0800
03b40800038c080003b40800038c0800ffe90800ffe9080003b40800038c
0800ffe90800ffe9080000000404001500e40042023a0029023a0024023a
001e02000006023a002405c7005a0639006305c7005a0471002205520029
04e300210556001e04d0002805c2004e04d9004e05c7005a06aa008405d0
003106640037082d00350552006805520068039c003f0380003b039c003f
0380003b039c00530381003c039c00530381003c02eb005302e3005302e3
005302e3005302eb005302eb000802e3000002e3000002e3000002eb0008
0363005303630053036300530363005303630053027f00010330004503b2
002603c3000b050b0031069c00290390007f0000fc4f0000fc4f0000fc42
0000fc420000fc420000fc420000fc010000fc010000fd44046500220401
00240a3900500873003b0436008304360083043600830329003a0329003a
03550028050d00340329005403290028032900330329003302f6003a02f6
003a0329002b0143005e02d7005b04bb005e0329005e0329002a02d70029
032900270329002a03290054019400100329005b0373003704bb005e02d7
0008037800800329000d0378004a04dc004d0632002a04be003304730039
0473003b04e6003804e1003a04fa0039076e003e0329000a0143005e01e4
00610329005b02d70008037800800329000d037800790329000a042b0052
05c5001001c70084045e0054070a002e06cb003504d6001b04fa001a02d8
000d04e9001b0330000d02d9000a02db000c01c700aa02aa004e01c700aa
02aa004e01c700aa02aa004e01c700aa02aa004e053d007a0708003b0310
008f0574009708c000220473004002e00034047300400473003104730034
047300420473004d0430002b047300420473004903cc000903cc000903cc
0009042800580425004e048d00560437003d06a600560450004804460048
04f8001f06c70056044e0056042d003d07c7005a049c0056049e007505e3
00560446003f0475005205e9005c046a0075054e00560475003106660056
0448003b05e300560468005604a400560487007504b40058049a005604a4
007504d1003d049a007504250044043d003d04be0056043d004e0458004e
0458004e04ba005605df0056044c00aa04d500b10473005e0473002f0425
00330473007b0437003d04250056049e0050048b003d04b8005604b80056
072b005204a20048048f004804db001f074c007104c10071047d003d085c
005604dd005604dd007b06a20071046f003d04b4004e0619005604ba0085
05d5005604ee0056068b004804a80048063f005204cd005604dd005604c3
007b053b005604e7005604e70085051d005604e70085049600480493003d
0521004e04c50056049300480491004804e7005606060056049c004804c3
007b049c004804ae00560527004c02f6007b044e0056048d005604c50056
05ae005605ee006f000000000000006c0000006c0000006c0000006c0000
00cc0000011c0000028000000430000005c0000007500000079400000824
000008a80000099800000a0000000a6400000aa000000ae000000b280000
0c0400000c5000000d6800000ec000000f5c00001084000011b000001244
000013a8000014d40000152c000015a80000163c0000168c000017240000
1828000019d800001a5400001b5c00001c7c00001d4000001dc800001e2c
00001f7c00001fec0000201c000020a000002194000021e4000022fc0000
23a8000024a400002550000026c4000027d800002970000029cc00002a5c
00002b1800002cb000002da800002e6c00002f0400002f5c00002fbc0000
30200000306c00003094000030c000003254000033280000342c00003504
000036980000373000003880000039200000397c000039f000003ad00000
3b1400003c0c00003cc400003db400003e9800003f800000400c000041cc
0000426c000043200000444c000045a80000460800004734000047d40000
48b4000048f8000049f400004ab000004ac800004ae000004ca800004cc0
00004cd800004cf000004d0800004d2000004d3800004d5000004d680000
4d8000004d9800004f4400004f5c00004f7400004f8c00004fa400004fbc
00004fd400004fec000050040000501c000050340000504c000050640000
507c00005094000050ac000050c4000050dc000050f400005150000051c8
0000538c00005518000056e400005770000057e4000058fc00005a9c0000
5c0000005ce400005d1400005d7c00005e5c00005f400000611c00006270
000062f800006398000064480000656800006668000067a00000686c0000
68cc0000697c00006a0400006b6000006c3400006d5400006f7c00007124
0000721c00007280000072c400007374000074b0000075a8000076340000
76e40000779800007804000078040000781c000078340000784c00007978
00007b5800007b9000007bcc00007c6c00007cfc00007d5c00007dbc0000
7e2c00007f1400007f2c00007f4400007fa40000811000008180000081f0
000082b400008364000083e800008440000084a400008538000087600000
877800008790000087a8000087c0000087d8000088240000889400008914
00008960000089780000899000008a3800008a5000008a6800008a800000
8a9800008ae800008b2c00008bb000008bdc00008c3800008c6800008d7c
00008e6000008ea800008f7400008fb400009084000091140000912c0000
91440000915c00009174000091d0000092c0000094280000944000009458
00009510000095dc00009604000096bc00009708000097c0000098b40000
99ac00009abc00009c8800009d4000009eb40000a02c0000a0840000a2b4
0000a4f00000a5080000a5200000a5380000a5500000a6180000a6300000
a6480000a6e00000a8a40000a8bc0000a8d40000a8ec0000a9040000a91c
0000a9340000a94c0000aa840000aa9c0000aab40000ab600000ac680000
ac800000ac980000acb00000acc80000ace00000acf80000ad100000ad28
0000ad400000ad580000ad700000ad880000ada00000adb80000add00000
aeb80000aed00000af700000af880000afcc0000afe40000b0dc0000b0f4
0000b17c0000b1940000b1ac0000b1c40000b1dc0000b1f40000b20c0000
b2240000b23c0000b2540000b2e40000b3440000b35c0000b3740000b38c
0000b3a40000b3bc0000b3d40000b3ec0000b4040000b41c0000b4340000
b44c0000b5c80000b7300000b7480000b7600000b7780000b7900000b7a8
0000b7c00000b7d80000b7f00000b8080000b8200000b8380000b8500000
b8680000b8800000b8980000b9b00000b9c80000b9e00000b9f80000ba10
0000ba280000ba400000bb0c0000bbf40000bc0c0000bc240000bc3c0000
bc540000bc6c0000bc840000bc9c0000bcb40000bccc0000bce40000bcfc
0000bd140000bd2c0000bd440000bed80000c06c0000c1000000c1fc0000
c3640000c3900000c3c00000c4040000c4880000c4b40000c5140000c544
0000c5a40000c6b40000c6fc0000c73c0000c7900000c86c0000c9380000
c9640000ca500000ca680000ca840000ca9c0000cab40000cacc0000cae4
0000cafc0000cb140000cb2c0000cb440000cbc00000cc380000cc640000
ccb40000cd1c0000cd940000ce4c0000cf040000cfc80000d14c0000d20c
0000d2380000d2980000d2b00000d2c80000d3680000d42c0000d4740000
d4cc0000d5c00000d7500000d78c0000d85c0000d8bc0000d9680000dadc
0000db740000dc3c0000dca80000dd380000ddf40000de7c0000dfc80000
e0300000e1140000e2080000e2500000e2c00000e4680000e4d40000e558
0000e6000000e6740000e7200000e8140000e9100000e9fc0000eae40000
ec0c0000ed840000ef100000f0e00000f24c0000f2880000f34c0000f438
0000f4e00000f61c0000f6b40000f77c0000f7e40000f8700000f92c0000
f9b40000faf00000fb540000fca00000fd940000fddc0000fe4800010090
000100f80001017c0001021c000102900001033c000104300001052c0001
0614000106d8000107f400010934000109d400010ae000010b3800010b94
00010bc400010c1400010ca400010d7400010e3000010eb000010f300001
107c000111b4000112d8000113fc00011480000115d00001168800011774
00011800000118880001197000011ab400011bb000011c6000011d0c0001
1d8000011df400011e6000011ecc00011f2000011f7400011fc80001201c
000120680001209c0001210400012178000121a4000121d0000121fc0001
222c0001228c0001239c000123cc0001240c00012450000124ac0001250c
00012590000125bc000125e80001266c00012698000126c4000127040001
282000012860000128b400012914000129a400012a0c00012a0c00012aac
00012b4400012c1400012c8400012d8000012df000012e6000012f5c0001
30a8000130fc0001318400013224000132c800013310000133880001340c
000134f0000135d4000136b400013724000138300001393800013a100001
3b3000013c9400013cf400013e6000013f5c00013fb40001406c0001413c
000142a4000142d400014338000143940001444400014500000145540001
4584000145b400014994000149f800014a2800014ad000014b2c00014b58
00014bdc00014c2400014c6800014cc800014d2400014d5000014d800001
4dac00014dd800014e0c00014e0c00014e0c00014e0c00014e0c00014e0c
00014e0c00014e0c00014e0c00014e0c00014e0c00014e0c00014e0c0001
4e0c00014e0c00014e0c00014e0c00014e0c00014e0c00014e0c00014e0c
00014e0c00014e0c00014e0c00014e0c00014e4800014eac00014fd40001
5000000150140001506c000150cc000150e40001513c000151f400015374
000154e000015538000155d400015670000156c800015844000158ec0001
593800015a4c00015af000015ba800015ca400015d3c00015e1800015e8c
00015f3400015f7800015fd80001601800016044000160ac000160f40001
613c00016188000161d40001624800016274000162b8000162e400016310
000163280001633800016350000163600001637800016388000163a00001
63b4000163cc000163dc000163f4000164040001641c0001643400016444
000164540001646c0001648c000164a4000164b4000164cc000164ec0001
65140001652c0001653c00016554000165740001658400016594000165a4
000165b4000165c4000165dc000165fc00016614000166240001663c0001
665c000166840001669c000166ac000166c4000166e4000166f400016704
00016714000167240001674400016764000167840001679c000167b40001
67cc000167e4000167fc000168140001682c000168440001685c00016874
0001688c000168a4000168bc000168d4000168f400016914000169340001
69540001697400016994000169b4000169d4000169f400016a1400016a34
00016a5400016a6c00016a8400016a9c00016ab400016acc00016ae40001
6afc00016b1400016b3400016b5400016b6c00016b8400016b9c00016bb4
00016bcc00016be400016bfc00016c1c00016c3c00016c5400016c6c0001
6c8400016c9c00016cb400016ccc00016ce400016cfc00016d1400016d2c
00016d4400016d5c00016d7400016d8c00016da400016dbc00016dd40001
6dec00016e0400016e1c00016e3400016e4c00016e6400016e7c00016e94
00016eac00016ec400016edc00016ef400016f0c00016f2400016f3c0001
6f5400016f6c00016f8c00016fac00016fcc00016fec000170040001701c
0001703c0001705c000170740001708c0001709c000170ac000170c40001
70dc000170f40001710c000171240001713c000171540001716c00017184
0001719c000171b4000171cc000171e4000171fc000172140001722c0001
72440001725c000172740001728c000172ac000172cc000172ec0001730c
000173240001733c000173540001736c0001738c000173ac000173c40001
73dc000173f40001740c000174240001743c000174540001746c00017484
0001749c000174b4000174cc000174e4000174fc000175140001752c0001
754c0001756c000175840001759c000175b4000175cc000175e4000175fc
000176140001762c0001764c0001766c000176840001769c000176b40001
76cc000176e4000176fc000177140001772c000177440001775c00017774
0001778c000177a4000177bc000177d4000177ec000178040001781c0001
783c0001785c0001787c0001789c000178bc000178dc000178fc0001791c
000179340001794c000179640001797c00017994000179ac000179c40001
79dc000179fc00017a1c00017a3400017a4c00017a6400017a7c00017a94
00017aac00017acc00017aec00017b0c00017b2c00017b4c00017b6c0001
7b8400017b9c00017bb400017bcc00017be400017bfc00017c1400017c2c
00017c4400017c5c00017c7400017c8c00017ca400017cbc00017cdc0001
7cfc00017d1c00017d3c00017d5400017d6c00017d8400017d9c00017db4
00017dcc00017de400017dfc00017e1400017e2c00017e4400017e5c0001
7e7400017e8c00017ea400017ebc00017ed400017eec00017f0400017f1c
00017f3400017f4c00017f6400017f7c00017f9400017fac00017fc40001
7fdc00017ff40001800c000180240001803c000180540001806c00018084
000180a4000180c4000180e4000181040001812400018144000181640001
8184000181a4000181c4000181e400018204000182240001824400018264
00018284000182a4000182c4000182e4000183040001831c000183340001
834c000183640001837c00018394000183b4000183d4000183f400018414
00018434000184540001847400018494000184b4000184d4000184ec0001
85040001851c000185340001854c000185640001857c00018594000185b4
000185d4000185f400018614000186340001865400018674000186940001
86b4000186d4000186ec000187040001871c000187340001874c00018764
0001877c00018794000187ac000187c4000187dc000187f40001880c0001
88240001883c000188540001886c000188840001889c000188b4000188cc
000188e4000188fc000189140001892c000189440001895c000189740001
898c000189a4000189bc000189d4000189f400018a1400018a3400018a54
00018a6c00018a8400018a9c00018ab400018acc00018ae400018afc0001
8b1400018b2c00018b4400018b5c00018b7400018b8c00018ba400018bbc
00018bd400018bec00018c0400018c1c00018c3400018c4c00018c640001
8c7c00018c9400018cac00018cc400018cdc00018cf400018d0c00018d24
00018d3c00018d5400018d6c00018d8400018d9400018da400018dbc0001
8dd400018dec00018e0400018ebc00018f1c0001909c000190d800019114
00019174000191bc0001923c000193bc000193ec000194540001949c0001
9550000195d40001962800019790000197f4000198c80001992000019968
000199c800019b5800019bc400019d0400019e6c00019ef400019f8c0001
a0d40001a29c0001a3340001a4ac0001a6000001a7180001a7b80001a8b4
0001a9240001a9900001aa0c0001ab0c0001ab500001acc80001ae080001
af2c0001b0440001b1940001b2140001b2940001b4200001b4ec0001b5a0
0001b7380001b7e80001b8a00001b8ec0001b94c0001b9b00001ba0c0001
ba680001bac40001baf00001bb200001bb7c0001bc140001bcb80001bd28
0001bd980001bdc40001bdf00001be600001beec0001bf5c0001bff00001
c1800001c2ec0001c44c0001c4a80001c5040001c51c0001c5340001c54c
0001c56c0001c58c0001c5ac0001c5cc0001c5ec0001c6040001c61c0001
c63c0001c65c0001c67c0001c69c0001c6bc0001c6dc0001c6f40001c70c
0001c7240001c7440001c7640001c7840001c7a40001c7bc0001c7d40001
c7f40001c8140001c82c0001c8440001c85c0001c9180001ca080001cab0
0001cb440001cc500001cc8c0001cd680001ce640001ced80001cf500001
d08c0001d1480001d2380001d2e80001d37c0001d4540001d4980001d4fc
0001d5600001d7a80001d8500001d8b40001d9180001d9440001d9700001
d9880001d9a00001d9b80001d9d00001d9fc0001da940001db240001db98
0001dc0c0001dc9c0001dd640001deac0001dfe80001e10c0001e26c0001
e3500001e4680001e4dc0001e6380001e6f40001e7b00001e8f00001e9c8
0001ea800001ebc00001edac0001eeac0001f01c0001f1680001f1cc0001
f22c0001f2c80001f3240001f3540001f3800001f3b00001f3dc0001f40c
0001f4340001f4600001f48c0001f4ec0001f5880001f5c80001f6080001
f6a40001f7880001f7f40001f8680001f8e40001f9780001f9ec0001fa64
0001fb480001fc2c0001fc6c0001fcac0001fcf00001fd340001fd600001
fdc80001fe300001fe9c000200000002006800020098000200e400020180
000201c4000202080002024800020288000203980002047c000204c80002
05080002054800020598000205e800020648000206a80002072400020764
000207c800020814000208e8000209240002092400020924000209240002
092400020924000209b800020ac400020b3c00020ba000020c2800020c40
00020ce800020e2400020ec800020f3c00020fb400020fb400020fb40002
0fb400020fb400020fb400020fb4000211640002128c00021310000213f8
0002154c0002159c00021780000218e40002194c00021974000219b40002
1a6800021b1400021bc000021ce800021d2800021dd400021f0c00021f90
00022078000221cc0002221c000223fc00022560000225c8000225f00002
2630000226e400022790000227f4000229100002294c00022988000229e4
00022a6400022c5800022d3800022db000022e8800022ee000022fc00002
315800023198000232100002322800023238000233180002344400023524
00023644000236cc000238100002389000023938000239c800023b440002
3bd000023c8000023dd800023f2c00023f8000023fd8000241040002411c
000241340002414c000241640002417c00024194000241ac000241c40002
41dc000241f40002420c000242240002423c000242540002426c00024284
0002429c000242b4000242cc000242e4000242fc000243140002432c0002
43440002435c000243740002438c000243a4000243bc000243d4000243ec
000244040002441c000244340002444c000244640002447c000244940002
44ac000244c4000244dc000244f40002450c000245240002453c00024554
0002456c000245840002459c000245b4000245cc000245e4000245fc0002
46140002462c000246440002465c000246740002468c000246a4000246bc
000246d4000246ec000247040002471c000247340002474c000247640002
477c00024794000247ac000247c4000247dc000247f40002480c00024824
0002483c000248540002486c000248840002489c000248b4000248cc0002
48e4000248fc000249140002492c000249440002495c000249740002498c
000249a4000249bc000249d4000249ec00024a0400024a1c00024a340002
4a4c00024a6400024a7c00024a9400024aac00024ac400024adc00024af4
00024b0c00024b2400024b3c00024b5400024b6c00024b8400024b9c0002
4bb400024bd400024bf400024c1400024c3400024c5400024c7400024c94
00024cb400024cd400024cf400024d1400024d3400024d5400024d740002
4d9400024db400024dd400024df400024e1400024e3400024e5400024e74
00024e9400024eb400024ed400024ef400024f1400024f3400024f540002
4f7400024f9400024fb400024fd400024ff4000250140002503400025054
0002507400025094000250b4000250d4000250f400025114000251340002
51540002517400025194000251b4000251cc000251e4000252040002521c
0002523c00025254000252740002528c000252a4000252bc000252d40002
52ec0002530c00025324000253440002535c0002537c00025394000253ac
000253c4000253dc000253f40002540c000254240002543c000254540002
546c000254840002549c000254b4000254cc000254e4000254fc00025514
0002552c000255440002555c000255740002558c000255a4000255bc0002
55d4000255ec000256040002561c0002563c00025654000256740002568c
000256ac000256c4000256dc000256f40002570c000257240002573c0002
57540002576c000257840002579c000257b4000257cc000257e4000257fc
000258140002582c000258440002585c000258740002588c000258a40002
5974000259c000025a1400025acc00025b3800025b5000025b7000025b90
00025bb000025bd000025bf000025c1000025c3000025c5000025c700002
5c9000025cb000025cd000025cf000025d1000025d3000025d5000025d70
00025d9000025db000025dd000025df000025e1000025e3000025e500002
5e7000025e9000025eb000025ed000025ef000025f1000025f3000025f50
00025f7000025f9000025fb000025fd000025ff000026010000260300002
60500002607000026090000260b0000260d0000260f00002611000026130
000261500002617000026190000261b0000261d0000261e8000262000002
62180002623000026248000262600002627800026290000262a8000262c0
000262d8000262f000026308000263200002633800026350000263680002
6380000263a0000263b8000263d0000263e8000264000002641800026430
00026448000264600002648000026498000264b0000264c8000264e00002
64f8000265100002652800026540000265600002657800026590000265a8
000265c0000265d8000265f0000266080002662000026640000266580002
667000026688000266a0000266b8000266d0000267f80002692400026aa4
00026afc00026bb000026cc400026d8000026db800026e5800026e700002
6f5800026ff4000271f000027420000275f80002781400027ad000027cb8
00027e1c00027f40000280640002816000028228000283680002841c0002
849800028514000285f0000286dc0002878c000288300002891800028a30
00028b2c00028d8800028e7000028ebc00028f0800028f9c000290440002
90dc00029178000291e00002924400029318000293ec000295dc0002983c
000298cc00029950000299e000029a7000029ba000029cc400029d280002
9d9000029e2000029eb400029f4800029ff40002a0780002a10c0002a168
0002a1c40002a21c0002a2740002a3340002a3ec0002a4980002a5340002
a5f80002a6800002a7240002a7a80002a8400002a8c00002a9b80002aaa8
0002ac380002adc40002ae580002af100002afb00002b05c0002b2340002
b3500002b46c0002b5f40002b7280002b8740002b9c40002ba340002ba9c
0002bb400002bbf40002bcc40002bdf80002bf440002bfe80002c0900002
c0c00002c1600002c1f80002c2400002c2b40002c3d80002c5180002c594
0002c63c0002c68c0002c6f80002c7600002c8380002c91c0002c9e40002
cac00002cc140002ccc80002cd700002ce040002ce440002cea40002ceec
0002cf380002cf640002cfe80002d0440002d0ac0002d0f00002d1ac0002
d2480002d2c80002d3240002d3c00002d4980002d5180002d5980002d638
0002d7100002d7a40002d83c0002d92c0002da580002db300002dc000002
dcc80002de300002df100002e0140002e1200002e1f00002e2e40002e3dc
0002e5140002e6c40002e7b40002e8b80002e96c0002ea140002ead80002
ebd80002ec140002ec500002ec8c0002ecc40002ed100002ed4c0002ed90
0002edd40002ee280002ee7c0002eed40002ef100002ef6c0002eff00002
f0a80002f1600002f2b00002f3240002f4040002f5600002f6680002f6a8
0002f7e00002f91c0002f9580002fa140002fa4c0002fa840002fb3c0002
fbf80002fc400002fd080002fe240002febc0002ff540002ffc40002fff0
0003001c000300c4000300ec0003013000030174000301d40003021c0003
029c0003031c000304140003046400030490000304bc0003066c000307dc
000308ac0003098000030a9400030b4000030ba800030c2400030cd80003
0e1000030e6c00030ebc00030eec00030f800003111000031174000311c0
00031290000313640003143800031514000316fc000317f0000318f40003
19e000031af400031c6c00031c8400031c9c00031cb400031d1c00031db8
00031dfc00031e7400031ed800031f700003205800032270000324880003
26300003265c00032688000326bc000326f00003272c00032768000327a4
000327e00003281c0003285800032894000328d0000328fc000329e40003
2a3000032bb000032c5800032d7000032dd800032e8800032fac00033104
000332400003338c000334c400033560000336640003382c00033ab80003
3ccc00033e3000033fa4000340580003422c000343d8000344300003448c
00034530000345ec000346900003474c000347f8000348b8000349640003
4a2400034ae400034ba000034c5c00034d1800034dd400034e9400034f50
0003500c000350c800035188000351c4000352100003525c000352a80003
52e4000353a4000353f40003549c000354e000035608000357dc00035834
0003597800035ac000035afc00035b3800035b7400035bb000035c040003
5c5400035cc800035d9c00035e7800035e9000035ea800035f8400036044
0003610400036288000364000003651c000366dc000367e4000368e80003
699400036a4400036b3c00036c3c00036d6800036db800036e2800036f00
00036fc8000370e0000371b0000372300003730000037428000374d00003
757400037648000377180003775c0003791c000379b800037b4000037c14
00037d6400037e7800037f4c000380600003818400038260000384140003
857800038648000386980003870c000387b0000387f4000389b400038a50
00038b7400038c4400038d9c00038e3c00038e8c00038f08000390b80003
9210000393a40003953800039690000398400003994000039a1800039b7c
00039bd800039c8800039ce400039d8c00039dec00039e9800039ef40003
9fa00003a1100003a1780003a29c0003a4b00003a5200003a6500003a698
0003a7840003a91c0003a9a40003aa900003abe80003ac3c0003ae280003
af940003afd80003b0140003b0580003b12c0003b1e40003b2c80003b3cc
0003b4ec0003b5bc0003b6cc0003b7fc0003b9040003b9b40003baa40003
bbec0003bcf40003bdec0003bed00003bfbc0003c0980003c1b40003c268
0003c3700003c4580003c5c00003c6ac0003c7a00003c8b00003ca080003
cb140003cc240003cd0c0003ce480003cf680003d0480003d1380003d288
0003d3dc0003d4e40003d5c40003d6c80003d80c0003d9a40003da400003
da900003db800003dc040003dcf80003de100003df180003dfd40003e0bc
0003e1800003e2640003e37c0003e4d00003e5ac0003e6c40003e7f80003
e9200003e9fc0003eaec0003ec700003ed9c0003ee980003efac0003f0a4
0003f1840003f2b00003f3680003f44c0003f54c0003f6bc0003f7b80003
f8e40003f9e80003fb3c0003fc480003fd580003fe340003ff80000400b0
0004018800040278000403a8000404d0000405d4000406b4000407b40004
091800040a4c00040b5400040c7000040d8400040e5c00040f440004101c
00041120000411d8000412c8000413a0000414b00001000008cc006f0009
006b00070002001000100067000007e80b90000400010000003902b20001
000000000000005000000001000000000001000900500001000000000002
000700590001000000000003001f02160001000000000004000902350001
0000000000050008023e0001000000000006000902460001000000000007
0032024f0001000000000012000903f80001000000000100000904010001
0000000001010010040a0001000000000102000e041a0001000000000103
0014042800010000000001040012043c00010000000001050009044e0001
000000010007002f02810001000000020007003c02b00001000000030007
003002ec0001000000040007003a031c0001000000050007003603560001
0000000600070030038c0001000000070007003c03bc0003000104030002
000c01580003000104040002000600cc0003000104050002000e01760003
000104060002000c00e60003000104070002000c007c0003000104080002
000801920003000104090002000e006000030001040b0002001000f20003
0001040c0002000e006e00030001040d00020008019a00030001040e0002
000c01a20003000104100002001000a80003000104110002000a00880003
000104120002000600b80003000104130002001000980003000104140002
000c01020003000104150002000e010e0003000104160002000c00da0003
000104180002000c01c60003000104190002000e012a00030001041a0002
0012016400030001041b0002000e01d200030001041d0002000c01380003
0001041e00020008014400030001041f0002000c014c0003000104210002
000e01ae0003000104220002001201e000030001042a0002001801fe0003
000104390002000c01f200030001043e0002000a01bc0003000108040002
000600920003000108090002000e01840003000108160002000e011c0003
00010c010002000800d2000300010c0a0002000e00bea920313939302d32
303036204170706c6520436f6d707574657220496e632e20a92031393831
204c696e6f7479706520414720a920313939302d3931205479706520536f
6c7574696f6e7320496e632e48656c766574696361526567756c61720052
006500670075006c006100720043006f007500720061006e0074004e006f
0072006d0061006c30ec30ae30e530e930fc5e3889c44f53005200650067
0075006c006900650072005200650067006f006c006100720065c77cbc18
ccb40052006500670075006c006100726a196e969ad406390627062f064a
004e006f0072006d0061006c004e006f0072006d0061006c004e006f0072
006d00610061006c0069004e006f0072006d0061006c0052006500670075
006c006100720052006500670075006c00610072041e0431044b0447043d
044b0439004e006f0072006d0061006c0e1b0e010e150e34004e006f0072
006d0061006c004e006f0072006d0061006c0052006500670075006c0061
0072006e00690052006500670075006c006100720052006500670075006c
00610072039103c003bb03ac05e805d205d905dc004e006f0072006d00e1
006c0052006500670075006c0065007200420069006100730061004e006f
0072006d0061006c0052006500670075006c006100720417043204380447
04300439043d043804390928093f092f092e093f09240054006800f4006e
006700200074006801b01edd006e006748656c7665746963613b2031352e
30643165333b20323031392d30332d323148656c76657469636131352e30
6431653348656c76657469636148656c7665746963612069732061207265
67697374657265642074726164656d61726b206f66204c696e6f74797065
20414748656c7665746963612065737420756e65206d617271756520648e
706f738e65206465204c696e6f7479706520414748656c76657469636120
6973742065696e2065696e676574726167656e657320576172656e7a6569
6368656e20646572204c696e6f7479706520414748656c76657469636120
8f20756e206d61726368696f207265676973747261746f206469204c696e
6f7479706520414748656c7665746963612069732065656e206765726567
69737472656572642068616e64656c736d65726b2076616e204c696e6f74
79706520414748656c766574696361208a72206574742072656769737472
6572617420766172756d8a726b6520669a72204c696e6f74797065204147
48656c76657469636120657320756e61206d617263612072656769737472
616461206465204c696e6f7479706520414748656c766574696361206572
20657420726567697374726572657420766172656dbe726b652074696c68
bf72656e6465204c696e6f7479706520414748656c7665746963614c6967
617475726573436f6d6d6f6e204c69676174757265734e756d6265722053
706163696e6750726f706f7274696f6e616c204e756d626572734d6f6e6f
737061636564204e756d626572734e6f204368616e6765000000b8005d2b
01ba000501b9005f2b01bf01bb003e00340029001d0012000000652bbf01
bc004200340029001d0012000000652bbf01bd003a00340029001d001200
0000652b00bf01b7004d003d003700280012000000652bbf01b80060004f
00370028001b000000652bbf01b90047003d0029001d0012000000652bbf
01ba004200340029001d0012000000652b00ba01be000400642bb801b620
457d691844b800532bb800492bb8003f2bb800352bb8002b2b4118008001
a6009001a600a001a600030069018b0079018b0089018b0099018b000400
89018b0099018b00a9018b00b9018bb2040840ba0179001a014a400b041f
5414191f180a0b1fd2b80106b49e1fd918e3bb0119000d00e10119b20d00
09410a01a0019f0064001f01a50025017a00480028019ab3296c1f60410a
01a9007001a9008001a90003008001a9000101a9b21e321fbe012c002504
01001f0126001e0401b61fe7312d1fe531b80201b21fc227b80401b21fc1
1eb80201400f1fc01d9e1fbf1d671fbe1d671fab27b80401b21faa29b804
01b61fa91d6c1f931eb8019ab21f921db80101b21f911db80101b21f751d
b80201b61f6d29961f6431b8019ab21f4c96b802abb21f391db80156400b
1f3638211f351de41f2f27b80801400b1f2d1d4c1f2a31cd1f241db802ab
b21f201eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa01
9b002a019bb2254a1fba019b0025017ab349293896b8017bb348283125b8
017a403648289629482725294c1f252946272729482756c80784075b0741
0732072b072807260721071b071408120810080e080c080a08080807b801
acb23f1f06bb01ab003f001f01abb308060805b801aeb23f1f04bb01ad00
3f001f01adb70804080208000814b8ffe0b40000010014b801abb4100000
0100b801abb606100000010006b801adb300000100b801ad401f04000001
000410000001001002000001000200000001000002010802004a00b0018d
b806008516763f183f123e113946443e113946443e113946443e11394644
3e113946443e11394660443e11394660443e11394660442b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa
1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b6542
2b2b4b5279b376706a66456523456023456560234560b08b766818b08062
2020b16a704565234520b003266062636820b003266165b070236544b06a
234420b176664565234520b003266062636820b003266165b066236544b0
762344b10066455458b166406544b27640764523614459b36242725d4565
23456023456560234560b089766818b080622020b172424565234520b003
266062636820b003266165b042236544b072234420b1625d4565234520b0
03266062636820b003266165b05d236544b0622344b1005d455458b15d40
6544b262406245236144592b2b2b2b456953427374b8019a2045694b20b0
2853b049515a58b020615944b801a62045694475000000>
[16257 16325 16277 16241 16045 16361 16349 16373 16341 15953 16333 16361 15785
16177 16241 16369 7669 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2856 19 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>Helvetica AddT42Char 
1 3432 22 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>Helvetica AddT42Char 
1 5692 32 <0002005c00de046f03360003000700274015012000cd07200604001a0907
021908095c213f52182b2b4ef43c10f63c002f4dedfdfd31300115213501
152135046ffbed0413fbed0336a8a8fe53abab00>Helvetica AddT42Char 
1 15372 81 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>Helvetica AddT42Char 
1 0 0 <00020042000004d005bd000300070043b800532bb800082fb800042fb800
0810b80000d0b800002fb8000410b80003dcb8000010b80007dcb8000310
b80009dc00ba0007000000562bba0002000500562b303133112111271121
1142048eb8fce205bdfa43b8044dfbb30000>Helvetica AddT42Char 
Helvetica /CharStrings get begin
/zero 19 def
/three 22 def
/equal 32 def
/n 81 def
end
Helvetica /Encoding get
dup 48 /zero put
dup 51 /three put
dup 61 /equal put
dup 110 /n put
pop
end
%ADOEndSubsetFont
/MBMLIY+Helvetica /Helvetica findfont ct_VMDictPut/MBMLIY+Helvetica*1 [48{/.notdef}rp /zero 2{/.notdef}rp /three 9{/.notdef}rp /equal 48{/.notdef}rp /n 145{/.notdef}rp]MBMLIY+Helvetica nfMBMLIY+Helvetica*1 [9 0 0 -9 0 0 ]msf142.28 323.32 mo(n=30)[5.004 5.256 5.004 0 ]xshgrestore
gsave
270.08 328.69 mo
494.46 328.69 li
494.46 311.48 li
270.08 311.48 li
cp
clp
270.08 328.69 mo
494.46 328.69 li
494.46 311.48 li
270.08 311.48 li
cp
.13547 .104463 .108492 0 cmyk
f
.72607 .666682 .65243 .782284 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIY+Helvetica gcheck setglobal} if
1 3932 24 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>MBMLIY+Helvetica AddT42Char 
MBMLIY+Helvetica /CharStrings get begin
/five 24 def
end
MBMLIY+Helvetica /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIY+Helvetica*1 [48{/.notdef}rp /zero 2{/.notdef}rp /three /.notdef /five 7{/.notdef}rp /equal 48{/.notdef}rp /n 145{/.notdef}rp]MBMLIY+Helvetica nfMBMLIY+Helvetica*1 [9 0 0 -9 0 0 ]msf372.14 323.32 mo(n=50)[5.004 5.25601 5.00397 0 ]xshgrestore
gsave
499.95 328.69 mo
724.33 328.69 li
724.33 311.48 li
499.95 311.48 li
cp
clp
499.95 328.69 mo
724.33 328.69 li
724.33 311.48 li
499.95 311.48 li
cp
.13547 .104463 .108492 0 cmyk
f
.72607 .666682 .65243 .782284 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIY+Helvetica gcheck setglobal} if
1 3076 20 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>MBMLIY+Helvetica AddT42Char 
MBMLIY+Helvetica /CharStrings get begin
/one 20 def
end
MBMLIY+Helvetica /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIY+Helvetica*1 [48{/.notdef}rp /zero /one /.notdef /three /.notdef /five 7{/.notdef}rp /equal 48{/.notdef}rp /n 145{/.notdef}rp]MBMLIY+Helvetica nfMBMLIY+Helvetica*1 [9 0 0 -9 0 0 ]msf599.5 323.32 mo(n=100)[5.00403 5.25598 5.00397 5.00403 0 ]xshgrestore
50.42 580.09 mo
50.42 577.35 li
.694331 .632349 .621027 .583551 cmyk
@
101.42 580.09 mo
101.42 577.35 li
@
152.41 580.09 mo
152.41 577.35 li
@
203.41 580.09 mo
203.41 577.35 li
@
254.41 580.09 mo
254.41 577.35 li
@
.653956 .580194 .5682 .366491 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIY+Helvetica gcheck setglobal} if
1 2720 17 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>MBMLIY+Helvetica AddT42Char 
1 3152 21 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>MBMLIY+Helvetica AddT42Char 
1 4528 26 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>MBMLIY+Helvetica AddT42Char 
MBMLIY+Helvetica /CharStrings get begin
/period 17 def
/two 21 def
/seven 26 def
end
MBMLIY+Helvetica /Encoding get
dup 46 /period put
dup 50 /two put
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIY+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /.notdef /five /.notdef /seven 5{/.notdef}rp /equal 48{/.notdef}rp /n 145{/.notdef}rp]MBMLIY+Helvetica nfMBMLIY+Helvetica*1 [9 0 0 -9 0 0 ]msf41.66 588.74 mo(0.00)[5.004 2.502 5.004 0 ]xsh92.66 588.74 mo(0.25)[5.004 2.502 5.004 0 ]xsh143.66 588.74 mo(0.50)[5.004 2.502 5.004 0 ]xsh194.65 588.74 mo(0.75)[5.004 2.502 5.004 0 ]xsh245.65 588.74 mo(1.00)[5.004 2.502 5.00398 0 ]xsh280.28 580.09 mo
280.28 577.35 li
.694331 .632349 .621027 .583551 cmyk
@
331.28 580.09 mo
331.28 577.35 li
@
382.28 580.09 mo
382.28 577.35 li
@
433.27 580.09 mo
433.27 577.35 li
@
484.27 580.09 mo
484.27 577.35 li
@
.653956 .580194 .5682 .366491 cmyk
MBMLIY+Helvetica*1 [9 0 0 -9 0 0 ]msf271.53 588.74 mo(0.00)[5.004 2.50201 5.00397 0 ]xsh322.52 588.74 mo(0.25)[5.004 2.50201 5.00397 0 ]xsh373.52 588.74 mo(0.50)[5.004 2.50201 5.00397 0 ]xsh424.51 588.74 mo(0.75)[5.004 2.50198 5.00403 0 ]xsh475.51 588.74 mo(1.00)[5.004 2.50198 5.00403 0 ]xsh510.15 580.09 mo
510.15 577.35 li
.694331 .632349 .621027 .583551 cmyk
@
561.14 580.09 mo
561.14 577.35 li
@
612.14 580.09 mo
612.14 577.35 li
@
663.13 580.09 mo
663.13 577.35 li
@
714.13 580.09 mo
714.13 577.35 li
@
.653956 .580194 .5682 .366491 cmyk
MBMLIY+Helvetica*1 [9 0 0 -9 0 0 ]msf501.39 588.74 mo(0.00)[5.004 2.50198 5.00403 0 ]xsh552.38 588.74 mo(0.25)[5.00403 2.50195 5.00403 0 ]xsh603.38 588.74 mo(0.50)[5.00403 2.50195 5.00403 0 ]xsh654.38 588.74 mo(0.75)[5.00403 2.50195 5.00403 0 ]xsh705.37 588.74 mo(1.00)[5.00403 2.50195 5.00403 0 ]xsh30.29 516.27 mo(5)sh25.28 445.8 mo(10)[5.004 0 ]xsh25.28 375.33 mo(15)[5.004 0 ]xsh37.48 513.04 mo
40.22 513.04 li
.694331 .632349 .621027 .583551 cmyk
@
37.48 442.57 mo
40.22 442.57 li
@
37.48 372.1 mo
40.22 372.1 li
@
.749721 .679194 .670497 .901457 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIY+Helvetica gcheck setglobal} if

1 0 3 <> MBMLIY+Helvetica AddT42Char 
1 1940 11 <0001008efe5e026105d50014003e4009141109131617171a09bb019c0008
0014019c400e400080044c10191516f7216c5218b80732852b2b4ef44ded
1add1aedd4ed4e456544e6003f3f3130010207061110171613232e012726
27263510373613025e9d2f475132937992462938160b5d3bbb05d5fecf90
dbfee1fedef094feeae47e6c94a8574f0128e79301250000>MBMLIY+Helvetica AddT42Char 
1 2084 12 <00010044fe5e021705d500130036400c081100131517171a044c0f13bb01
9c00000009019c400908191415f7213f7b182b2b4ef44dedd4eddded4e45
6544e6003f3f3130131237361110272603331e01171e011510070603479f
2e46513293799a412630295e3bbafe5e01368ed701210121f0940116f673
657df471fed8e895fede0000>MBMLIY+Helvetica AddT42Char 
1 3776 23 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>MBMLIY+Helvetica AddT42Char 
1 7004 38 <0002005affda057105e5001d001e00b1403b1b0597019605031f011f0482
018705891305530803861d111115063a1d030c3a15091e021e1e19033102
3b1031111a20093119191f20a1216a66182b2b4ef44ded4e10f64dedf4ed
12392f003f3fed3fed12392f10ed31304379403a001c172513260e251b26
0b160932000d1410320112110f10071c0932000500033201010204030a18
0c32000f120c3200081a06320104010632012b2b2b2b01103c103c2b2b10
3c103c2b2b2b2b2b2b815d015d080117232e012322001110123332373637
3306070621202726111037362123041e013411c221c5b2d9fef5f1efdc73
3d1ec21a92affed7ff00aee5acba01472805e5fedabb8ea6fecffec5fefe
febfa95991e89dbd9bcd01ac0145d0e20000>MBMLIY+Helvetica AddT42Char 
1 8172 44 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>MBMLIY+Helvetica AddT42Char 
1 12480 68 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>MBMLIY+Helvetica AddT42Char 
1 13572 72 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>MBMLIY+Helvetica AddT42Char 
1 14624 76 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>MBMLIY+Helvetica AddT42Char 
1 15556 82 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>MBMLIY+Helvetica AddT42Char 
2 0 85 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>MBMLIY+Helvetica AddT42Char 
2 588 87 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>MBMLIY+Helvetica AddT42Char 
2 928 89 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>MBMLIY+Helvetica AddT42Char 
2 1576 91 <0001000b000003e1042f000b002300b10a083fb00633b100063fb0033301
b00c2fb00dd600b1000a1112b102083939303113331b0117090123090123
011ee9f6f9dbfe970179e6fef6fefee40179042ffe87017905fdfbfddb01
92fe6e022500>MBMLIY+Helvetica AddT42Char 
MBMLIY+Helvetica /CharStrings get begin
/space 3 def
/parenleft 11 def
/parenright 12 def
/four 23 def
/C 38 def
/I 44 def
/a 68 def
/e 72 def
/i 76 def
/o 82 def
/r 85 def
/t 87 def
/v 89 def
/x 91 def
end
MBMLIY+Helvetica /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 52 /four put
dup 67 /C put
dup 73 /I put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIY+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /.notdef /seven 5{/.notdef}rp /equal 5{/.notdef}rp /C 5{/.notdef}rp /I 23{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /.notdef /t /.notdef /v /.notdef /x 135{/.notdef}rp]MBMLIY+Helvetica nfMBMLIY+Helvetica*1 [11 0 0 -11 0 0 ]msf337.67 601.57 mo(Covariate ICC \()[7.94183 5.95099 5.22501 6.116 3.82791 2.44183 6.116 3.05801 6.116 3.05798 3.05801 7.94183 7.94183 3.05798 0 ]xsh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 114 /rho putdup 115 /sigma putdef/UniqueID 42996 def/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/rho <1C60D8A8C9B79676CAD432945B23A2A5FE831701326EBBB2A20E18496F090CAAD6C5077A4686DE7BCB9CD9C76B42EFDCCE57176D9C6204D60A5196B760CBA61178BDB955FFDBBA2E438D7D980CE0FA915E3DC57B338D501D53462E9549C62222701BFCBA4FE179AADE29B8A8B992740D35684D7E5C4D38B052FF9F6B309C8FF790A18718F478B45942813BDF31E46FCC390F3FC215A3074BFB0993302247FD4C6476D3D472268DBC954697F2099C6E45718C0384624C37105806BB8A8B2C> |-/sigma <1C60D8A8C9B7C05447F5912FBA2452AF183FCDA4EABE4B48A1B8CA2DB2FE27B5CA05184337E6A14471F4E4784E68DE4BCCB0F4CBDF4CF56943F8EAC4BE9236E53E561465B455434CB9B524ED6F54658755443A22EF90736E45BBEF02E32C0C302E57A2C333DCAF88A033C44D239492CE07F8959B883BCC98EFFD299A778B9FD0B07ABB4FAB7AAA28829714962ABE342EDDC72A559B> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/MBMLIZ+Symbol /Symbol findfont ct_VMDictPut/MBMLIZ+Symbol*1 [114{/.notdef}rp /rho /sigma 140{/.notdef}rp]MBMLIZ+Symbol nfMBMLIZ+Symbol*1 [11 0 0 -11 0 0 ]msf413.18 601.57 mo(r)shMBMLIY+Helvetica*1 [8 0 0 -8 0 0 ]msf419.22 603.58 mo(x)shMBMLIY+Helvetica*1 [11 0 0 -11 0 0 ]msf423.22 601.57 mo(\))shMBMLIZ+Symbol*1 [0 -11 -11 0 0 0 ]msf16.57 458.56 mo(s)shMBMLIY+Helvetica*1 [0 -8 -8 0 0 0 ]msf20.12 451.93 mo(4)sh11.1 451.93 mo(2)sh735.29 501.66 mo
786.52 501.66 li
786.52 404.38 li
735.29 404.38 li
cp
0 0 0 0 cmyk
f
.749721 .679194 .670497 .901457 cmyk
MBMLIZ+Symbol*1 [11 0 0 -11 0 0 ]msf740.77 416.56 mo(r)sh%ADOBeginSubsetFont: Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal MBMLIY+Helvetica gcheck setglobal} if
2 1672 92 <00020015fe4903e804490018001900ca406e8a158818a718030706170638
12481258126707770377078c1498009705981597169717a800a816104800
4b154717c915044405c605028705a600a601a705a8170524280518151716
010006150c0b0f1d080e19071919161b17171a050001af171518af0c8f16
191a1bd421677e182b2b194ef44de418fd3939fd3939194e456544e61812
392f003f3f4dfd3932192f183f3c3c3c123939014b527940121515001616
6d121717180501016d12000018872e2b107dc418872e2b10087dc418015d
71313071015d005d013306030207020623222627351e01333236373e0137
013301030321c7268362429c809c26291e2f2a10322f10053e0efe74cc01
1f01042f67fe91feecaefe66b40608a40d062118089424044efc98038200
>MBMLIY+Helvetica AddT42Char 
2 2356 95 <000100900000013b05d20003002940150200010a0517171a0300c1020119
0405c1217765182b2b4ef43c4dfd3c4e456544e6003f3f31302123113301
3babab05d2000000>MBMLIY+Helvetica AddT42Char 
MBMLIY+Helvetica /CharStrings get begin
/y 92 def
/bar 95 def
end
MBMLIY+Helvetica /Encoding get
dup 121 /y put
dup 124 /bar put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/MBMLIY+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /.notdef /seven 5{/.notdef}rp /equal 5{/.notdef}rp /C 5{/.notdef}rp /I 23{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /.notdef /t /.notdef /v /.notdef /x /y 2{/.notdef}rp /bar 131{/.notdef}rp]MBMLIY+Helvetica nfMBMLIY+Helvetica*1 [8 0 0 -8 0 0 ]msf746.81 418.57 mo(y|x)[4 2.07996 0 ]xsh740.77 444.34 mo
758.05 444.34 li
758.05 427.06 li
740.77 427.06 li
cp
.0371099 .0246281 .0246586 0 cmyk
f
[4.27 4.27 ] 0 dsh
742.5 435.7 mo
756.32 435.7 li
0 .676905 .505577 0 cmyk
@
740.77 461.62 mo
758.05 461.62 li
758.05 444.34 li
740.77 444.34 li
cp
.0371099 .0246281 .0246586 0 cmyk
f
742.5 452.98 mo
756.32 452.98 li
.580163 .113375 1 .00427253 cmyk
@
740.77 478.9 mo
758.05 478.9 li
758.05 461.62 li
740.77 461.62 li
cp
.0371099 .0246281 .0246586 0 cmyk
f
742.5 470.26 mo
756.32 470.26 li
.710414 0 .273747 0 cmyk
@
740.77 496.18 mo
758.05 496.18 li
758.05 478.9 li
740.77 478.9 li
cp
.0371099 .0246281 .0246586 0 cmyk
f
742.5 487.54 mo
756.32 487.54 li
.356481 .54461 0 0 cmyk
@
.749721 .679194 .670497 .901457 cmyk
MBMLIY+Helvetica*1 [9 0 0 -9 0 0 ]msf763.53 438.93 mo(0.01)[5.00403 2.50195 5.00403 0 ]xsh763.53 456.21 mo(0.05)[5.00403 2.50195 5.00403 0 ]xsh763.53 473.49 mo(0.1)[5.00403 2.50195 0 ]xsh763.53 490.77 mo(0.2)[5.00403 2.50195 0 ]xsh%ADOBeginSubsetFont: Helvetica-Bold Initial
ct_T42Dict begin
-1.016 -0.48 1.434 1.156
 256 array 0 1 255 {1 index exch /.notdef put} for  /Helvetica-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c000003a46670676d00000000000004d000000d0a
676c7966000000000000650c0003fedc6865616400000000000011dc0000
003668686561000000000000121400000024686d74780000000000001238
000023306c6f63610000000000003568000023346d617870000000000000
589c000000206e616d6500000000000058bc000008007072657000000000
000060bc0000044e67646972000000000000000000000000000304f902bc
00050000059905330000011e05990533000003d000660200000000000000
000000000000e00002ff5000785b00000000000000007079727300200009
feff0600fea4003d07ae01db2000019f4f010000044205c2000000200000
05c0001105c2002d0597001d0442001d0000ffda0000ffdb0000ffdafe53
ffef05d0000afffdffed03340000012200000122dffb011400af000700b7
007e000400d200aa0109002300ed013200d9011d012a00d800fe00db00e2
001a008b00a0001a004500e801f6000900e90128013200360082009e009f
ff700070003f003f00e801050015003800e9ff7bffc8fff90042008a00c4
01070113011dffb9002f00870087009a009c010c0262ffb10018004c0077
0080008200c900daffb2ffea001a003600e50111012f043bffdd00020005
001a0039008900aa00b701210123012a015bffe5000200180023005c00aa
ff4dff76ffb2ffef001a002f004e007b008a00e1011f0126012b019a01de
03edff80ff8e0007001c004e005500630063006d00810098009c00ad011f
01260162041c051500390044004b0063008e00cc00e800f2010001290142
017802d503ea03f0043b049affc400050055005c0060009f0103011d0124
01550164017001ad01b401c301f602370261033903d5047004a100020055
008800a100bd00c700d300dd00eb00ed00fa00fd0104012b013e014f017b
019d01ad01e20233025d027d028c02da02ef033103de0407048b058505bb
ff04ffd5fffa0007001e002a003b004700510058006500650066006e0075
007f00840107009700b100c300cc00df00df010a0110012f013101470154
015b016b0179009101a401ba01dc01e401e601e901f60213021f0223022f
0276027d0282028902ad02b202b902ed03110374037d03c003de03f60415
045d04c004c004df052d0574061c064b0751fe94fedfff2dff90ff9affea
0016001600240029002d003e0104006d006d008400870089008e009c00a4
00ab00ae00b200b2fffb013900c400d100df00e100ef00f70121011c011c
012101320138015001510154016c016d017f019801a401aa01b601ba01bb
01bb00d701d701fb01fb01fe00190209022d025b026102790279029a0098
02d302da02ef030c03210328032d034b0353fff103ad03b103f20425045a
0471047b048a0498049f051c053d0557055a0570059505b605cb05d605ef
05f4061d068706a406b406d307080734079807fe012201320120012500b4
00be0082009603700132012400430184011d015600cc010500ed00c500fb
00f900c000a7011d00fe035500880026ffa100b8ff8800dd00bd00b5037c
003c00910293024aff3f03a803090132fff700820030002a002a002a002a
002a002a002a00fe0098012a011f013400000029fe50000e0442002305c2
002d402a292827262524232221201f1e1d1c1b1a19181716151413121110
0f0e0d0c0b0a090807060504030201002c4523466020b02660b004262348
482d2c452346236120b02661b004262348482d2c45234660b0206120b046
60b004262348482d2c4523462361b0206020b02661b02061b00426234848
2d2c45234660b0406120b06660b004262348482d2c4523462361b0406020
b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd4423
20b8015a51582320b08d44235920b0ed51582320b04d44235920b0905158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560
442d2c01b9400000000a2d2c00b9000040000b2d2c2045b00043617d6818
b0004360442d2c45b01a234445b01923442d2c2045b00325456164b05051
5845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360
442d2c20b0032552582359212d2c69b04061b0008b0c6423648bb8400062
600c642364615c58b0036159b002602d2c45b0112bb0172344b0177ae518
2d2c45b0112bb01723442d2c45b0112bb017458cb0172344b0177ae5182d
2cb002254661658a46b040608b482d2cb0022546608a46b040618c482d2c
4b53205c58b002855958b00185592d2c20b0032545b019234445b01a2344
4565234520b00325606a20b009234223688a6a606120b0005058b21a401a
4523604459b0005258b219401945236044592d2cb9187e3b210b2d2cb92d
412d410b2d2cb93b21187e0b2d2cb93b21e7830b2d2cb92d41d2c00b2d2c
b9187ec4e00b2d2c4b525845441b2121592d2c0120b003252349b04060b0
206320b000525823b002253823b002256538008a63381b21212121215901
2d2c456920b00943b0022660b00325b005254961b0805358b21940194523
616844b21a401a4523606a44b209191a45652345604259b00943608a103a
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c764520b003254523616818236860442d2c
7645b00325452361682318456860442d2c7645b003254561682345236144
2db8002a2c4bb800095058b101018e59b801ff85b800441db9000900035f
5e2db8002b2c2020456944b001602db8002c2cb8002b2a212db8002d2c20
46b003254652582359208a208a49648a204620686164b004254620686164
525823658a592f20b00053586920b000545821b040591b6920b000545821
b0406559593a2db8002e2c2046b00425465258238a592046206a6164b004
2546206a61645258238a592ffd2db8002f2c4b20b0032650585158b08044
1bb04044591b21212045b0c05058b0c0441b2159592db800302c20204569
44b001602020457d691844b001602db800312cb800302a2db800322c4b20
b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920
b0032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b
8a235920b80003265358b0032545b8018050582321b8018023211bb00325
4523212321591b2159442db800332c4b535845441b2121592db800342c4b
b800095058b101018e59b801ff85b800441db9000900035f5e2db800352c
2020456944b001602db800362cb800352a212db800372c2046b003254652
582359208a208a49648a204620686164b004254620686164525823658a59
2f20b00053586920b000545821b040591b6920b000545821b0406559593a
2db800382c2046b00425465258238a592046206a6164b0042546206a6164
5258238a592ffd2db800392c4b20b0032650585158b080441bb04044591b
21212045b0c05058b0c0441b2159592db8003a2c2020456944b001602020
457d691844b001602db8003b2cb8003a2a2db8003c2c4b20b003265358b0
801bb040598a8a20b0032653582321b0c08a8a1b8a235920b00326535823
21b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b800
03265358b0032545b8018050582321b8018023211bb00325452321232159
1b2159442db8003d2c4b535845441b2121592db8003e2c4bb800095058b1
01018e59b801ff85b800441db9000900035f5e2db8003f2c2020456944b0
01602db800402cb8003f2a212db800412c2046b003254652582359208a20
8a49648a204620686164b004254620686164525823658a592f20b0005358
6920b000545821b040591b6920b000545821b0406559593a2db800422c20
46b00425465258238a592046206a6164b0042546206a61645258238a592f
fd2db800432c4b20b0032650585158b080441bb04044591b21212045b0c0
5058b0c0441b2159592db800442c2020456944b001602020457d691844b0
01602db800452cb800442a2db800462c4b20b003265358b0801bb040598a
8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a
1b8a235920b0032653582321b801408a8a1b8a235920b80003265358b003
2545b8018050582321b8018023211bb003254523212321591b2159442db8
00472c4b535845441b2121592db800482c4bb800095058b101018e59b801
ff85b800441db9000900035f5e2db800492c2020456944b001602db8004a
2cb800492a212db8004b2c2046b003254652582359208a208a49648a2046
20686164b004254620686164525823658a592f20b00053586920b0005458
21b040591b6920b000545821b0406559593a2db8004c2c2046b004254652
58238a592046206a6164b0042546206a61645258238a592ffd2db8004d2c
4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b
2159592db8004e2c2020456944b001602020457d691844b001602db8004f
2cb8004e2a2db800502c4b20b003265358b0801bb040598a8a20b0032653
582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0
032653582321b801408a8a1b8a235920b80003265358b0032545b8018050
582321b8018023211bb003254523212321591b2159442db800512c4b5358
45441b2121592db800522c4bb800095058b101018e59b801ff85b800441d
b9000900035f5e2db800532c2020456944b001602db800542cb800532a21
2db800552c2046b003254652582359208a208a49648a204620686164b004
254620686164525823658a592f20b00053586920b000545821b040591b69
20b000545821b0406559593a2db800562c2046b00425465258238a592046
206a6164b0042546206a61645258238a592ffd2db800572c4b20b0032650
585158b080441bb04044591b21212045b0c05058b0c0441b2159592db800
582c2020456944b001602020457d691844b001602db800592cb800582a2d
b8005a2c4b20b003265358b0401bb000598a8a20b0032653582321b0808a
8a1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db8005b2c4b535845441b2121592db8005c2c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8005d2c2020456944b001
602db8005e2cb8005d2a212db8005f2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db800602c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db800612c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db800622c2020456944b001602020457d691844b001
602db800632cb800622a2db800642c4b20b003265358b0401bb000598a8a
20b0032653582321b0808a8a1b8a235920b0032653582321b800c08a8a1b
8a235920b0032653582321b801008a8a1b8a235920b0032653582321b801
408a8a1b8a235920b80003265358b0032545b8018050582321b801802321
1bb003254523212321591b2159442db800652c4b535845441b2121592db8
00662c4bb800095058b101018e59b801ff85b800441db9000900035f5e2d
b800672c2020456944b001602db800682cb800672a212db800692c2046b0
03254652582359208a208a49648a204620686164b0042546206861645258
23658a592f20b00053586920b000545821b040591b6920b000545821b040
6559593a2db8006a2c2046b00425465258238a592046206a6164b0042546
206a61645258238a592ffd2db8006b2c4b20b0032650585158b080441bb0
4044591b21212045b0c05058b0c0441b2159592db8006c2c2020456944b0
01602020457d691844b001602db8006d2cb8006c2a2db8006e2c4b20b003
265358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b003
2653582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db8006f2c
4b535845441b2121592d0000000100000001000087860ec65f0f3cf50011
080000000000a2272e8000000000d8b9a29df7dcfc270b7e094600010009
0001000100000000000100000629fe2900000c01f7dcfcdb0b7e00010000
00000000000000000000000008cc05c7009a000000000239000002390000
02aa00e103cb00a70473000004730038071d002f05c7006f01e7006302aa
005902aa0015031d002f04ac00490239007602aa002f023900800239ff90
047300400473008e04730040047300360473003604730036047300400473
0034047300360473003d02aa00e802aa00e804ac001704ac004904ac0017
04e3007b07cd00c705c7003405c700a105c7005c05c7009c055600a504e3
009c0639005505c7009a023900840473002d05c700a104e3009c06aa0097
05c7009706390065055600a30639006505c700a30556005504e3002105c7
009c0556002f078d001e055600210556002304e3003402aa00800239ff90
02aa002f04ac008b0473000002aaffce0473003b04e3007b0473004704e3
003f0473002f02aa001504e3004204e30087023900890239000904730082
0239008b071d008004e3008704e3004204e3007d04e3003c031d00820473
004202aa001504e3007d0473001a0639000e0473001a0473001504000021
031d0000023d006a031d002d04ac000405c7003405c7003405c7005c0556
00a505c700970639006505c7009c0473003b0473003b0473003b0473003b
0473003b0473003b047300470473002f0473002f0473002f0473002f0239
00760239ffce0239ffb60239ffd504e3008704e3004204e3004204e30042
04e3004204e3004204e3007d04e3007d04e3007d04e3007d047300470333
005e04730045047300420473004102cd00910473ffc304e3008905e5001a
05e5001a080000cb02aa007602aaffd504640049080000120639004705b4
00190464004904640047046400490473ffea049cffcb03f4002405b4fff7
06960007046400290231007602f6002802ec000e06250031071d003804e3
002a04e3006d02aa00e104ac00490464ffd50473001e0464004904e5fffa
047300af04730000080000bd0239000005c7003405c70034063900650800
004b078d003f0473fffb080000f10400008b040000970239008902390084
0464004903f4002104730015055600230156fea305f4004402aa00aa02aa
00aa04e3001c04e3001c0473004702390071023900920400009208000004
05c70034055600a505c70034055600a5055600a5023900760239ffb60239
ffd50239ffce0639006506390065065200690639006505c7009c05c7009c
05c7009c0239008902aaffb602aaffa802aaffbd02aaffc902aa009a02aa
004202aa001202aaffd302aa004202aaffb604e3fff10239ffe805560055
0473004204e3003404000021023d006a05c7001204e3006d055600230473
00150556008004e3008004ac004904ac005502aa005002aa001a02aa0012
06ac002f06ac005a06ac004e047300000639005504e30042023900840556
00550473004205c7005c0473004705c7005c0473004704e3003f05c70034
0473003b05c700340473003b05c700340473003b05c7005c0473004705c7
005c0473004705c7009c0600003f055600a50473002f055600a50473002f
055600a50473002f055600a50473002f055600a50473002f0639005504e3
00420639005504e300420639005504e3004204e3004205c7009a04e30087
05c7000f04e3fff1035cfffc037100010366000a035c000c0239000b0239
000306ac0084047200890473002d027bffc905c7008e0473005804e3009c
0271008b04e3009c0239002704e3009c0356008b04e3009c0329008b05c7
009704e3008705c7007504e3005c05c7009704e3008704e3008706390065
04e300420639006504e300420639006504e3004205c700a3031d008205c7
0092031d006905c700a3031d003605560055047300420556005504730042
04e3002102aa001504e3002103b8001504e3002102aaffe305c7009c04e3
007d05c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c
04e3007d05c7009c04e3007d078d001e0639000e055600230473001504e3
00340400002104e3003404000021055600550473004204e3002102aa0015
047300360000fc910000fc900000fc250000fc180000fc2c0000fc360000
fd0d0000fc450000fcb50000fbd80000fc250000fd010000fc9d0000fcb5
0000fbfb05c700120639005504e3004204e3009c0239008b05c700a10473
008205c7009704e3008705c700a3031d0080020e000802aa00e702aa002f
023900090473008202aa0015047300300473002e047300460473003a0000
fcfb0000fc2c0000fc360239ffcc0239ffc905c7009704e300870000fc2b
05c7002905bd00a805c700a804a000a805e50019055600a8080000190564
003d05c7008f05c7008f05c700b205c4003906aa008f05c7008f0639005a
05c7008f055600a805c7005a04e500190556003106ac003d0556001b05e5
008f0556005a078d008f07ab008f06aa002f078d00a8055600a805c7005a
0800008f05cb00460473003904e3004604c5008f038d0087051d00290473
003506ac00100400002d04e3008704e3008704e3008f0538003c05c70087
04e3008704e5004604e3008704e3007f04730046040000290473001d06a8
00460473001f04e300870473003f06ac008706aa008705560029066e0087
04a000850473004606aa008704e30056055600a80473003504a000a8038d
0087023900830239008f0473002f05c7005a047300460239ffcf02890029
080000390750003c07e9008f070e0087023900040556004e0664001704e3
002905c700b204e3008f047300440617001004e30029055600310473001d
05c7008f04e3008504e300a8038d00870000fd010000fd010000fd010000
fd010000fbd80000fd430000fc9e0000fc360000fc910000fc900000fc2c
0000fd0d0000fc450000fcb50000fd430000fc250000fc250000fc360000
fc360000fc180000fc540000fc2c0000fc180000fc2c0000fc2c0000fc2c
0000fd0d0000fc2c0000fd010000fc360000fc240000fc9e0000000002aa
001504e30086071d0080031d0081071d0080031d0082031d0081040a0046
040a004702390089030bffd802aa001502aa0015047300190639000d0473
001404e3007b04e3007b04e3007b0473008104bc003b04bc003b05c7005b
05c70012049e0048055600a4055600560473004304c3003d0758009c0671
007d0633005b023d00a5043b00a502aa00e10494001b04730047011d0045
02aa00af02aa00af0b620004056500bd02a500bd040000970239008502aa
002f0473000004e200af04e200af06e400af06e400af02aa002f02a500bd
02aa002f080000f1055401d0000000000000000000000000000000000000
000000000000000000000000000002390000023900000239000002390000
023900000239000002390000023900000239000000000000000000000000
00000000000000000000023900000239000002aafff6043b00a504e3007b
02aa002f02aafff6047300050473000005c7003404e3009c0473002e0792
0065065c00420000fd220000fd220000fd220000fd220000fc900000fc8d
0000fd470000fc790000fc990000fc940000fc860000fc9a0000fc080000
fcf10000fcf70000fc800000fc820000fc540000fbfb0000fc810000fc81
0000fc810000fc820000fc820000fc3602aa00af04e200af02aa00af02aa
00af046400130464001904510011046e002405b4007705b400830231ff5e
0231ff6e0464ff530464ffd5046400110464001a08fa005e0816005e05c7
00a1023900840472008406ab0084078f00840556002f078f002f09c8002f
0c01002f078f008405560021078f002109c8002104e3009c05c7005c05c7
009c06aa0097023900890472008906ab008906ac00890473001a06ac001a
08e5001a0b1e001a06ac00890473001a06ac001a08e5001a0239008b0473
004704e3003f071d008009d70048090f0058087b003f0876006d06af006d
042c008b09440063073f00680667005d05c700340473003b0239ffb60239
ffb60639006504e3004205c7009c04e3007d05c7009c04e3007d05c7009c
04e3007d05c7009c04e3007d05c7009c04e3007d05c700340473003b05c7
00340473003b08000012071d00380639005504e3004205c700a104730082
0639006504e300420639006504e300420239ffb60a0c006d0939006808ab
003f0639005505c7009704e3008705c700340473003b08000012071d0038
0639004704e3002a05c700340473003605c700340473003b055600a50473
002f055600a50473002f0239ff1d0239ff190239ffc60239ffcc06390065
04e300420639006504e3004205c700a3031dffaa05c700a3031d005e05c7
009c04e3005c05c7009c04e3007d05c7009a04e3008705c700340473003b
055600a50473002f0639006504e300420639006504e300420639006504e3
00420639006504e300420556002304730015040000970239008405c70034
0473003b05c700a104e3007b05c700a104e3007b05c700a104e3007b05c7
005c0473004705c7009c04e3003f05c7009c04e3003f05c7009c04e3003f
05c7009c04e3003f05c7009c04e3003f055600a50473002f055600a50473
002f055600a50473002f055600a50473002f055600a50473002f04e3009c
02aa00150639005504e3004205c7009a04e3008705c7009a04e3008705c7
009a04e3008705c7008204e3006605c7009a04e300870239ffa80239ffa0
0239ffd90239ffe905c700a10473008205c700a10473008205c700a10473
008204e3009c0239008b04e3009c0239ffbd04e3009c0239ffbd04e3009c
0239ffae06aa0097071d008006aa0097071d008006aa0097071d008005c7
009704e3008705c7009704e3008705c7009704e3008705c7009704e30087
0639006504e300420639006504e300420639006504e300420639006504e3
0042055600a304e3007d055600a304e3007d05c700a3031d008205c700a3
031d008205c700a3031d005105c700a3031d000105560055047300420556
005504730042055600550473004205560055047300420556005504730042
04e3002102aa001504e3002102aa001504e3002102aaffe304e3002102aa
001505c7009c04e3007d05c7009c04e3007d05c7009c04e3007d05c7009c
04e3007d05c7009c04e3007d0556002f0473001a0556002f0473001a078d
001e0639000e078d001e0639000e078d001e0639000e078d001e0639000e
078d001e0639000e055600210473001a055600210473001a055600230473
001504e300340400002104e300340400002104e300340400002104e30087
02aafffc0639000e0473001502aa001505c700340473003b05c700340473
003b05d3003404ec003b05d7ffe804a8ff8505c70034048d003b05c70034
0473003b05c700340473003b05c700340473003b05c700340473003b05c7
00340473003b05c700340473003b05c700340473003b055600a50473002f
055600a50473002f055600a50473002f057500a5047d002f0556002b04a2
ffb4055600a50473002f055600a50473002f055600a50473002f02390084
0239008902390084023900890639006504e300420639006504e300420639
006504e300420639006504e3ffc00639006504e300420639006504e30042
0639006504e3004207920065065c004207920065065c004207920065065c
004207920065065c004207920065065c004205c7009c04e3007d05c7009c
04e3007d0758009c0671007d0758009c0671007d0758009c0671007d0758
009c0671007d0758009c0671007d05560023047300150556002304730015
05560023047300150556002304730015055600a50473002f055600a50473
002f056d008605df008e048600370486008708d9002006dd000c056d0029
04860027056d002904860027056d00860486003708d9002006dd000c054f
003d040a002b05df008e0486008705df008e048600870655005a04860050
05df005b04120050056d00170412001e056d00170412001e056d00170412
001e05ac0059047a004c074800a80600008d08000012071d003806aa0097
071d008005c700a3031d00600222ffbc05c7003705c700a204e300a205c7
001b055600a204e3003d05c700a206390068025e009305c700a20558002d
071a00ae063900ba04e300520639006805c700a2055600a204e3002f04e5
00290556002705c700420556002d06ac007b06390044025e000405560027
04e5004804d500770473002504e3006204730077038d005204e1009a04e1
00810239008d0473008d0473003104e1009a047300310400005604e50060
04e3009a0473004e04e500600400004604e1009a05c700580473001405c7
006d05c7003b0239ffe904e1009a023900710222ffb20000fd4802c601a4
01c7006a01c7006a0000fc910000fc9001c7006a03290014032900140340
006a036a006a022200060222008c0376006a01c7ff9e036e006a01c7ff9e
08000073062500310639fffe0239008902390084055400e1078d007b078d
00e10473002f0473002f05c700340473003b0473003b055600a50473002f
055600a50473002f055600a50473002f0239ffbb0239ffb7023900890639
006504e300420639006504e300420639006504e300420556005504730042
05c7009c04e3007d0473001a0758009c0671007d0602003f04e3ffff05c7
000d04e30087071d0080043f009c0460007f0400006004d9006e0356fff8
048b00350602005d047300350655004b048600370639006502aaffef07ac
001b07ac001b09b600870000f9290000f9d30000f9d30000f9650000f9dd
0602005d047300350655004b048600370222008c032900140464003104e3
00340400002104e3004205300087052b003f04e3007704e3003f04e30042
04e30087054500870271008b078d003f03c60081031d008104e3003c04e3
fffe04e3fffe0800003f064c001504db001506b00015057f008b0555008b
01a4006f01a4006f0239008402aa010d02aafff602aa00af02aa000702aa
010d02aafff602aa00af02aa000701a4006f01a4006f02aaffef02aafff6
0272004402720044011d0005018f0041018f004101e30041031d0007023a
000b0272003e0272003e0256000c0256000c025600130256001302aa002f
025600250256002502560025023900210239000d011c00450256002b0239
001202560013025600130256000c0256000c02aa007b0272003e0000fc87
0000fc690000fc690000fd260000fd260000fc2c0000fc2c0000fb4f0000
fc690000fc2c0000fc870000fc810000fc81000000000239000000000000
0000000000000000031d002f031d002f08dc00af07ac001b02aa00e809c6
007b07ac001b071d01040702000602aa008002aa00800000000000000000
0000000000000000000000000000000006c5001b023a0020023a001b0239
001b02390020023a001a0239001b0239001e025600250155001802560025
0155002e0155000a02720044023a0020023a0047023a00200239001b023a
001b0239001b02390020023a001a0239001b0239001e0256002501550018
025600250155002e0155000a06f900340639005504e3009c04e3009c0556
002307d6fff70600002a078e001104e300820800004e06ac002f05c7005c
05c7006f04e5fffa0696000707d6002407d600310556009b04e300730556
009b04e3007304e3001306390065052b009a02ad002f036dfff605c70042
03060017030bffd804e3007b04e3007b023900090239000904e3004204e5
004804e5004804e5004804e5004804e5004804e5004804e5004804e50048
0629006a063b006a086e009b081d006e078d006a07f0006a078e0070078e
0048047300770473007704730077047300770473007704730077071d006a
071d00b208cc009008c4009a0896009108c0009504e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a04e1009a078e006a078e006a
093d006a0935006a0907006a0931006a078eff9e078eff9e0239008d0239
008d0239ffbd0239ffc10239ffd10239ffc10239ffd30239ffd30425006a
0425006a05d4006a05cc006a059e006a05c8006a0425ff9e0425ff9e04e5
006004e5006004e5006004e5006004e5006004e500600800006a0800006a
09af006a09a7006a0979006a09a3006a04e1009a04e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a071d006a08c4006a08c0006a
0792ff9e05c7003b05c7003b05c7003b05c7003b05c7003b05c7003b05c7
003b05c7003b07ec006a07ec006a099b006a0993006a0965006a098f006a
07ecff9e07ecff9e04e5004804e50048047300770473007704e1009a04e1
009a023900510239005604e5006004e5006004e1009a04e1009a05c7003b
05c7003b04e5004804e5004804e5004804e5004804e5004804e5004804e5
004804e500480899006a0878006a0a73006a0a7c006a0a15006a0a77006a
09c7006609c7006604e1009204e1009204e1009204e1009204e1009204e1
009204e1009204e1009209c7006a09c7006a0b76006a0b6e006a0b40006a
0b6a006a09c7ff9e09c7ff9e05c7003b05c7003b05c7003b05c7003b05c7
003b05c7003b05c7003b05c7003b0a25006a0a25006a0bd4006a0bcc006a
0b9e006a0bc8006a0a25ff9e0a25ff9e04e5004804e5004804e5004804e5
004804e5004804e5004804e5004805c7003705c7003706cd000606cd008c
07d8003704e1009204e1009204e1009204e1009a04e10092076300060784
008c07e2000607ca008c080700a20239ffbf0239ffaa0239ffb60239ffb6
0239ffcf0239ffc9025effd2025effc2043b002d0453008c04e1009a04e1
009a04e1009a04e1009a04e3009a04e3009a04e1009a04e1009a05560027
0556002707a500580797008c071d006a05c7003b05c7003b05c7003b05c7
003b05c7003b07f60045082b0059086500060899008c0852003104e50048
0473007704e1009a0239008d04e5006004e1009a05c7003b06cd008c0784
008c07ca008c0453008c07d4005e0775006c0842006c0239ffb604e1009a
067d003d04f700db04f7007b03220013031e002b0464003104e5004804e5
004804e5004804e5004804e5004804e5004804e5004804e5004804e50048
04e5004804e5004804e5004804e5004804e5004804e5004804e500480239
ffb60239ffb60239ffb50239ffb60239ffb60239ffb60239ffb60239ffb6
0239ffb60239ffbe0239ffbe0239ffb50239ffbe0239ffbc0239ffbe0239
ffbe0239ffbe0239ffbe04e1009a04e1009a04e1009a04e1009a04e1009a
04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1009a04e1
009a04e1009a04e1009a04e1009a04e1009a04e1009a06cd000606cd008c
0629006a086e006a078d006a063b006a085c006a07f0006a06cd000606cd
008c0629006a086e006a078d006a063b006a085c006a07f0006a04700006
0453008c0453008c0425006a05d4006a059e006a0425006a05cc006a05c8
006a047000060453008c0453008c0425006a05d4006a059e006a0425006a
05cc006a05c8006a07a500060797008c0797008c071d006a08c4006a08c0
006a071d006a08c4006a08c0006a07a500060797008c0797008c071d006a
08c4006a08c0006a071d006a08c4006a08c0006a05c700a305c7005c0639
00650239003b05aa008f055600a305c7004a0000fcfb04b5004a04e3003f
0639005a04e5004607b0004107b4004205e5001a06ac004506ac004506ac
004306ac0043063900b405560029082200a205e1005b06ac007b05c7006d
05c700340473001a080a00a20642005b0547001503d0001f0636003005ba
002905c700a30473003b02aaffcc04ac009a0425009a063d009a05240087
05c700a10473008204e300340400002108d9ffef06ddfff7054f0062040a
0033056d00a00412006a05df00a20486007c05df005f0412002c04f80022
04120028056dfff80412ffe105ac00a0047a006205ac00a0047a00620556
00230556002304d900ac037c007505ac00a004d7006206e300a00552006a
077600a205d9007c05560023055600230731001305d100230767002505f8
00250767002505f80025075b00360543001b05df00a20486007c0473003b
054f00a6054f00a606ac007b04f0005b088a003e06a6003305c7003904e1
001d05eb002f04e3001a04730047054f0062040a003305f10022049c0014
02390089056dfff80412ffe10556002f05c7003405c7005c0473004704e3
fff104e3002102390059031e002b04e30021055600a304e3007b04e3007b
055600a50473002f0473002d0239fff305c7009c01a9001a01a9001a02aa
000c02aa000c02aa000702aaffe102aa00e802aa002402aa0024067d0057
067d003d067d00ad02aa00e8067d003d067d005c067d011002aa00e802aa
00e8063900680412002c0412002c055600a504e3008005c7005c06aa0097
063000970548001605c7005c05c7005c05c7005c04730047047300470473
004704e3003f061b003a06a80039062e003b0384002b062200240549003b
04e5004f02aa00bf02aa00bf02aa00bf02aa00bf025d003d025e003d03cc
000903cc000903c3000003c3000003c3000004c2001303fe0027043c005c
044400780444007803070055034f0012070f003e0662004405fe00350000
f7dc0698004a0545004901ec004e01f4004e01b3002a01b2000c01d3002b
01d3001a033c001f0343001f03420013033f0013033f001302ff004e0224
000a0224000b07ec003d0982004e0933004b093300020149004e04850025
05d2000705d1000d04d10014047a00200224000a0224000b044b0041044b
004104290041038c0008049e00440000fb230000fc720000fb870000fc56
0000fc4f0000fa110000fcaf0000fe390000fc470000fc100000f9d30000
fc5e04cc003c04cc00380468003c046800380821001b04a6002104440022
0533003b069a0037057f003a071d006a08c4006a08c0006a05c7003705c7
0037025effd3025effd20556002705560027045f001605e5001a05e5001a
05e5001a0800ffeb0800ffeb080003b40800038c080003b40800038c0800
ffe90800ffe9080003b40800038c0800ffe90800ffe908000000045f0016
011d0045023a001e023a001802720021023a000d023a001805c7005c0639
005505c7005c045e0023063c002f04e3002105c700340532005306250032
0508003205c70058071d008006420033067800390832003604b5004a04b5
004a03470042034300470346004103430047034600570344004f03460057
0344004f03a1005703940057039400570394005703a1005703a0000d0394
0000039400000394000003a0000d03e9005703dd005703dd005703dd0057
03ea00570397000303fc003803fc00290412001505a8003106de002e039b
00730000fbf40000fbf40000fbe00000fbe00000fbe00000fbe00000fb9e
0000fb9e0000fcf104cc0038046800380aac006509560042044400780444
0078044400780329002a0329002a035d002a050d0028037800570378002d
032900210329002102de003202de00320378002f019400610329005c050d
005b037800600378002f032900320378002f0378002f0378005901e4000f
037800590383003a050d005b03290012036e00540329001a0378004604f4
0052066f003604f5005204e3004204e300410501003b04fe003d0530003b
078e00420329000e019400610236005c0378005903290012036e00540329
001a0378006d0329000e040a00460604001202390089043c005c08980029
07240037052c00210558001d0320000e052b002303730017031c000f031f
001002390092040000920239008504000097023900920400009202390085
040000970519001b070200090310007e05d500a208c00022047300400351
002e04930060047300360473003604730036047300400473003404600036
0473003d03cc000903cc000903cc0009046d00160468004a04bc004e048d
004406d9004e048d0044048500440562001f06e7004e048d004e047d0044
082f005204d1004e04d100660623004e0496004a04b4004e0625004e04aa
006605a8004e04c100290693004e04a4004e0625004e04a2005204e1004e
04b600660519004e04cd004e04e100660519004404cf0066047900460483
004a0519004e047f0048048b0048048d00480504004e0617004e04b80081
04d500b10473003e0473003104a2004e049e006604960048045e004e04e9
004e04d5003d04fa004c04f4004c073b004c04e9004804d900480562001f
07a8006d0514006d04c1003d08c7004c0514004c0514007106fc006d04c5
003d0504004c0673004c0502007b0625004a0523004206c5003d04f40048
06aa004c050a004c0517004c050400710591004c051f004c051b00770558
004e0523007b04d9004404d300390583004c0514004604cd004404cd0044
0535004c064c004a04d9003d050a007904f4004c04f2004a056d004c031f
0064047f004804b000480514004605d9003d060600660000000000000068
000000680000006800000068000000dc0000012000000330000004700000
06100000086c000008b800000960000009e000000af400000b6400000bd4
00000c1000000c5400000ccc00000da000000e0800000f00000010080000
10d4000011a0000012a00000132000001414000014fc00001558000015f0
00001680000016d8000017700000184000001a1c00001b3800001c1c0000
1d0000001dac00001e1000001e7400001f7800001fe000002030000020ac
00002194000021e0000022ec0000237c00002428000024b4000026080000
26e8000028280000288800002910000029b400002b7400002cb800002d98
00002e4000002ea400002f1000002f780000302400003058000030ac0000
31f4000032a400003380000034340000355c000036280000371c000037b0
00003818000038a0000039cc00003a0c00003b5c00003bfc00003ca80000
3d6400003e1c00003eb000003fbc00004050000040f8000041c00000423c
0000437c000044ac00004574000046500000469400004774000048240000
483c000048540000497c00004994000049ac000049c4000049dc000049f4
00004a0c00004a2400004a3c00004a5400004a6c00004ba800004bc00000
4bd800004bf000004c0800004c2000004c3800004c5000004c6800004c80
00004c9800004cb000004cc800004ce000004cf800004d1000004d280000
4d4000004d5800004dd000004e4000004fd000005154000052cc00005358
000053d4000054e00000573c0000590800005a0800005a6000005ac40000
5ba400005c8400005dfc00005f0000005f8000006020000060c4000061f8
00006308000063f4000064ac00006514000065940000664c0000678c0000
6824000068e800006a7c00006be000006cb000006d2400006d6c00006e4c
00006f5000007098000071640000726c00007370000073e0000073e00000
73f800007410000074280000752800007678000076b0000076ec00007794
00007844000078a8000079040000798000007aa000007ab800007ad00000
7b1000007c7c00007d1c00007dc000007e9800007f5c00007ffc00008050
000080c40000817c00008308000083200000833800008350000083680000
838000008398000083b0000083c8000083e0000083f800008410000084b8
000084d0000084e8000085000000851800008564000085f0000086d00000
870c000087a8000087f80000888c00008964000089cc00008a6800008b40
00008c1800008ce400008cfc00008d1400008d2c00008d4400008db80000
8e9800008ffc000090140000902c00009120000091c0000091fc000092a8
00009300000093980000946c0000958c0000968400009808000098b40000
98cc000098e4000098fc00009a9000009bc000009bd800009bf000009c08
00009c2000009ce800009d0000009d1800009d3000009d4800009d600000
9d7800009d9000009da800009dc000009dd800009df000009f4000009f58
00009f7000009f8800009fa000009fb800009fd000009fe80000a0000000
a0180000a0300000a0480000a0600000a0780000a0900000a0a80000a0c0
0000a0d80000a0f00000a1080000a1ec0000a2040000a21c0000a2340000
a24c0000a2640000a27c0000a2940000a2ac0000a2c40000a2dc0000a2f4
0000a30c0000a3240000a33c0000a3540000a36c0000a3840000a4200000
a4ac0000a4c40000a4dc0000a4f40000a50c0000a5240000a53c0000a554
0000a56c0000a5840000a59c0000a5b40000a5cc0000a5e40000a5fc0000
a6140000a62c0000a6440000a65c0000a6740000a68c0000a6a40000a6bc
0000a6d40000a6ec0000a7040000a71c0000a7340000a74c0000a8500000
a8680000a8800000a8980000a8b00000a8c80000a8e00000a8f80000a910
0000a9280000a9400000a9580000a9700000a9880000a9a00000a9b80000
aa6c0000aa840000aa9c0000aab40000aacc0000aae40000aafc0000acac
0000ae4c0000aee80000afe40000b0680000b0940000b0c40000b0fc0000
b1900000b1bc0000b2180000b24c0000b2b00000b3c00000b40c0000b450
0000b4a80000b5880000b6540000b6800000b7600000b7780000b7940000
b7ac0000b7c40000b7dc0000b7f40000b80c0000b8240000b83c0000b854
0000b8e40000b9740000b9a00000b9fc0000ba740000baf00000bb980000
bc340000bd080000be640000bed00000befc0000bf580000bf700000bf88
0000c0300000c0fc0000c1440000c1a80000c2a40000c3dc0000c4180000
c4e00000c5400000c5d80000c7900000c82c0000c8f80000c9640000ca00
0000cac00000cb4c0000cc9c0000cd080000cdf00000cee00000cf2c0000
cf980000d1180000d1880000d2040000d2a80000d3600000d3fc0000d4f4
0000d5fc0000d6e80000d7c00000d8e80000da5c0000dbdc0000dd600000
de900000decc0000dfa40000e0940000e12c0000e2840000e3200000e3f8
0000e4640000e4e80000e5a40000e6300000e7740000e7e00000e9340000
ea280000ea740000eaec0000ed2c0000ed940000ee1c0000eec00000efb0
0000f0600000f1500000f2540000f3440000f41c0000f5400000f6980000
f7480000f8780000f8d80000f9380000f9740000f9c80000fa540000fb28
0000fbe00000fc940000fd280000fe700000ffb0000100e0000102080001
0294000103fc000104a400010588000105fc00010670000107b8000108f0
00010a4800010b0400010bdc00010c5400010ccc00010d3c00010da80001
0e0000010e5800010eb000010f0800010f5400010f8800010ff000011068
00011094000110c0000110ec000111200001118400011294000112c80001
130c00011344000113a0000113fc00011490000114bc000114e80001157c
000115a8000115d400011614000116f4000117340001178c000117e80001
188c000118f4000118f40001198c00011a3400011b3800011bd400011ce8
00011d7400011e1000011ebc00011f6800011f9c00012020000120d00001
2158000121a0000122180001228c000123140001239c0001248800012508
0001260c00012710000127e80001290000012a4800012ab400012c180001
2cc000012d1000012dd000012e9800012fec0001302000013088000130f4
000131a800013274000132a4000132d4000133040001349c000135040001
3534000135e8000136400001366c000136ec0001373400013778000137d8
000138340001386000013894000138c0000138ec00013924000139240001
392400013924000139240001392400013924000139240001392400013924
000139240001392400013924000139240001392400013924000139240001
392400013924000139240001392400013924000139240001392400013924
00013960000139c800013ab000013adc00013b0800013b5c00013bb80001
3bd000013c2800013cc400013e2c00013fa000014054000140f80001419c
00014250000143b00001444400014494000145a40001465c000147300001
4838000148d0000149e000014a6c00014b0000014b4400014ba400014be4
00014c1000014c7800014cc000014d0800014d5400014da000014e140001
4e4400014e8c00014ebc00014ee800014f0000014f1000014f2800014f38
00014f5000014f6400014f7c00014f9000014fa800014fb800014fd00001
4fe000014ff8000150100001502000015030000150480001506800015080
00015090000150a8000150c8000150f00001510800015118000151300001
515000015160000151700001518000015190000151a0000151b8000151d8
000151f00001520000015218000152380001526000015278000152880001
52a0000152c0000152d0000152e0000152f0000153000001532000015340
000153600001537800015390000153a8000153c0000153d8000153f00001
5408000154200001543800015450000154680001548000015498000154b0
000154d0000154f000015510000155300001555000015570000155900001
55b0000155d0000155f00001561000015630000156480001566000015678
00015690000156a8000156c0000156d8000156f000015710000157300001
5748000157600001577800015790000157a8000157c0000157d8000157f8
000158180001583000015848000158600001587800015890000158a80001
58c0000158d8000158f00001590800015920000159380001595000015968
0001598000015998000159b0000159c8000159e0000159f800015a100001
5a2800015a4000015a5800015a7000015a8800015aa000015ab800015ad0
00015ae800015b0000015b1800015b3000015b4800015b6800015b880001
5ba800015bc800015be000015bf800015c1800015c3800015c5000015c68
00015c7800015c8800015ca000015cb800015cd000015ce800015d000001
5d1800015d3000015d4800015d6000015d7800015d9000015da800015dc0
00015dd800015df000015e0800015e2000015e3800015e5000015e680001
5e8800015ea800015ec800015ee800015f0000015f1800015f3000015f48
00015f6800015f8800015fa000015fb800015fd000015fe8000160000001
60180001603000016048000160600001607800016090000160a8000160c0
000160d8000160f000016108000161280001614800016160000161780001
6190000161a8000161c0000161d8000161f0000162080001622800016248
000162600001627800016290000162a8000162c0000162d8000162f00001
6308000163200001633800016350000163680001638000016398000163b0
000163c8000163e0000163f8000164180001643800016458000164780001
6498000164b8000164d8000164f800016510000165280001654000016558
0001657000016588000165a0000165b8000165d8000165f8000166100001
662800016640000166580001667000016688000166a8000166c8000166e8
000167080001672800016748000167600001677800016790000167a80001
67c0000167d8000167f00001680800016820000168380001685000016868
0001688000016898000168b8000168d8000168f800016918000169300001
6948000169600001697800016990000169a8000169c0000169d8000169f0
00016a0800016a2000016a3800016a5000016a6800016a8000016a980001
6ab000016ac800016ae000016af800016b1000016b2800016b4000016b58
00016b7000016b8800016ba000016bb800016bd000016be800016c040001
6c1c00016c3400016c4c00016c6400016c8400016ca400016cc400016ce4
00016d0400016d2400016d4400016d6400016d8400016da400016dc40001
6de400016e0400016e2400016e4400016e6400016e8400016ea400016ec4
00016ee400016efc00016f1400016f2c00016f4400016f5c00016f740001
6f9400016fb400016fd400016ff400017014000170340001705400017074
00017094000170b4000170cc000170e4000170fc000171140001712c0001
71440001715c0001717400017194000171b4000171d4000171f400017214
00017234000172540001727400017294000172b4000172cc000172e40001
72fc000173140001732c000173440001735c000173740001738c000173a4
000173bc000173d4000173ec000174040001741c000174340001744c0001
74640001747c00017494000174ac000174c4000174dc000174f40001750c
000175240001753c000175540001756c000175840001759c000175b40001
75d4000175f400017614000176340001764c000176640001767c00017694
000176ac000176c4000176dc000176f40001770c000177240001773c0001
77540001776c000177840001779c000177b4000177cc000177e4000177fc
000178140001782c000178440001785c000178740001788c000178a40001
78bc000178d4000178ec000179040001791c000179340001794c00017964
00017974000179840001799c000179b4000179cc000179e400017a8c0001
7af000017c6400017ca000017ce000017d4400017d8c00017e1000017f6c
00017fa8000180140001806000018118000181a0000181f80001833c0001
83a40001848c000184dc000185280001858c0001870400018770000188ac
00018a2000018aa000018b3c00018c7800018e1400018e7400018fe80001
90b8000191b00001924c0001941800019454000194cc00019518000195d0
000196180001975c000198a00001997800019a7000019be000019c2c0001
9ccc00019e0c00019e7800019f2c0001a0b80001a14c0001a2240001a270
0001a2cc0001a2fc0001a3840001a3dc0001a4340001a4600001a4900001
a4e80001a5840001a6240001a6a80001a7240001a7500001a77c0001a7fc
0001a89c0001a9140001a9bc0001aa900001abe80001ad680001adc00001
ae180001ae300001ae480001ae600001ae800001aea00001aec00001aee0
0001af000001af180001af300001af500001af700001af900001afb00001
afd00001aff00001b0080001b0200001b0380001b0580001b0780001b098
0001b0b80001b0d00001b0e80001b1080001b1280001b1400001b1580001
b1700001b2300001b3000001b3b80001b4580001b5980001b5d40001b6bc
0001b7d00001b8480001b8c00001ba080001badc0001bbbc0001bc740001
bd280001bdc00001bdf80001be580001beb80001c1240001c1a80001c208
0001c2680001c2940001c2c00001c2d80001c2f00001c3080001c3200001
c34c0001c3e80001c4500001c4c80001c5380001c5c80001c69c0001c7f4
0001c9500001caa40001cc280001ccf80001ce0c0001ce6c0001cff80001
d0dc0001d1b40001d2f40001d3d80001d5040001d65c0001d8740001d968
0001dadc0001dc3c0001dca00001dd5c0001de000001de580001de8c0001
deb80001dee80001df140001df480001df700001df9c0001dfc80001e084
0001e1280001e16c0001e1ac0001e2480001e31c0001e3900001e41c0001
e4b40001e58c0001e6000001e66c0001e7100001e7b40001e7f40001e834
0001e8780001e8bc0001e8e80001e9500001e9b80001ea240001eadc0001
eb3c0001eb6c0001ebb80001ec140001ec580001ec9c0001ecdc0001ed1c
0001ee2c0001eed00001ef1c0001ef5c0001ef9c0001eff00001f0440001
f0a40001f1040001f1740001f1b40001f2180001f2640001f3340001f374
0001f3740001f3740001f3740001f3740001f3740001f4040001f5100001
f5880001f5e80001f6780001f6900001f7300001f8700001f9040001f97c
0001f9f40001f9f40001f9f40001f9f40001f9f40001f9f40001f9f40001
fba00001fcb40001fd6c0001fe300001ffb800020008000201a000020314
0002037c000203b8000203f8000204a80002055400020614000207280002
0774000208300002096000020a1800020adc00020c6400020cb400020e4c
00020fbc0002102400021060000210a00002114c000211f8000212640002
13600002139c000213d800021438000214b8000216200002170000021778
0002186c000218dc000219b400021b9400021bd400021c5000021c680002
1c7800021d6c00021eb000021f98000220cc00022160000222a00002231c
0002239c0002242c0002258c00022620000226c800022824000229800002
29dc00022a4000022b8800022ba000022bb800022bd000022be800022c00
00022c1800022c3000022c4800022c6000022c7800022c9000022ca80002
2cc000022cd800022cf400022d1000022d2800022d4000022d5800022d70
00022d8800022da000022db800022dd000022de800022e0000022e180002
2e3000022e4800022e6000022e7800022e9000022ea800022ec000022ed8
00022ef000022f0800022f2000022f3800022f5000022f6800022f800002
2f9800022fb000022fc800022fe000022ff8000230100002302800023040
000230580002307000023088000230a0000230b8000230d0000230e80002
3100000231180002313000023148000231600002317800023190000231a8
000231c0000231d8000231f0000232080002322000023238000232500002
32680002328000023298000232b0000232c8000232e0000232f800023310
0002332800023340000233580002337000023388000233a0000233b80002
33d0000233e8000234000002341800023430000234480002346000023478
00023490000234a8000234c0000234d8000234f000023508000235200002
353800023550000235680002358000023598000235b0000235c8000235e0
000235f80002361000023628000236400002366000023680000236a00002
36c0000236e00002370000023720000237400002376000023780000237a0
000237c0000237e000023800000238240002384800023868000238880002
38a8000238c8000238e80002390800023928000239480002396800023988
000239a8000239c8000239e800023a0800023a2800023a4800023a680002
3a8800023aa800023ac800023ae800023b0800023b2800023b4800023b68
00023b8800023ba800023bc800023be800023c0800023c2800023c480002
3c6000023c7800023c9800023cb000023cd000023ce800023d0800023d20
00023d3800023d5000023d6800023d8000023da000023db800023dd80002
3df000023e1000023e2800023e4000023e5800023e7000023e8800023ea0
00023eb800023ed000023ee800023f0000023f1800023f3000023f480002
3f6000023f7800023f9000023fa800023fc000023fd800023ff000024008
000240200002403800024050000240680002408000024098000240b00002
40d0000240e8000241080002412000024140000241580002417000024188
000241a0000241b8000241d0000241e80002420000024218000242300002
4248000242600002427800024290000242a8000242c0000242d8000242f0
0002430800024320000243380002441400024460000244b40002452c0002
459c000245b4000245d4000245f400024614000246340002465400024674
00024694000246b4000246d4000246f40002471400024734000247540002
477400024794000247b4000247d4000247f4000248140002483400024854
0002487400024894000248b4000248d4000248f400024914000249340002
49540002497400024994000249b4000249d4000249f400024a1400024a34
00024a5400024a7400024a9400024ab400024ad400024af400024b140002
4b3400024b5400024b7400024b9400024bb400024bd400024bf400024c14
00024c3400024c4c00024c6400024c7c00024c9400024cac00024cc40002
4cdc00024cf400024d0c00024d2400024d3c00024d5400024d6c00024d84
00024d9c00024db400024dcc00024de400024e0400024e1c00024e340002
4e4c00024e6400024e7c00024e9400024eac00024ec400024ee400024efc
00024f1400024f2c00024f4400024f5c00024f7400024f8c00024fa40002
4fc400024fdc00024ff40002500c000250240002503c000250540002506c
00025084000250a4000250bc000250d4000250ec000251040002511c0002
5134000252b40002539c0002552400025588000256400002575800025818
00025858000258f800025910000259fc00025a9400025ca800025ec80002
6098000262f4000265d4000267d80002694c00026a7400026b9800026c80
00026d9400026ed000026f9c00027018000270b400027190000272a00002
735400027400000274d0000275e8000277440002789c00027968000279b8
00027a0800027a9800027b5000027bec00027ca000027d1000027d700002
7ea800027fdc00028214000284980002858000028654000286e80002877c
000288cc00028a1000028a7800028ae000028ba800028c7400028d140002
8dc400028e5400028ef000028f5000028fb000029008000290600002911c
000291c40002929c00029360000293fc000294840002951c000295c40002
96a000029758000298700002997400029b2800029cc800029d6000029e10
00029eb800029f600002a1500002a2e40002a4780002a5fc0002a7680002
a8d00002aa340002aaa40002ab140002aba40002ac300002ad140002ae74
0002afe40002b08c0002b1340002b1680002b2440002b3140002b35c0002
b3d00002b5240002b6600002b6e00002b7640002b7c00002b8300002b8a4
0002b9800002ba780002bb700002bc480002bd600002be1c0002bedc0002
bf940002bfc40002c0240002c0700002c0bc0002c0e80002c17c0002c1dc
0002c2440002c2880002c34c0002c3f40002c4780002c4d80002c5800002
c6640002c6ec0002c7740002c8200002c8c00002c9900002ca540002cb48
0002cc680002cd380002ce000002cebc0002d0700002d1480002d2440002
d3440002d4280002d5300002d63c0002d7940002d9480002da340002db8c
0002dc540002dd1c0002ddf00002dea80002dee40002df200002df5c0002
df940002dfe00002e01c0002e0600002e0a80002e1000002e1580002e1b0
0002e1f40002e2540002e2dc0002e4080002e5380002e6380002e6b80002
e79c0002e9240002ea3c0002ea800002ebc00002ed000002ed3c0002ee00
0002ee380002ee740002ef2c0002efe80002f0300002f1040002f2200002
f2b80002f3500002f3c00002f3ec0002f4180002f4c40002f4ec0002f530
0002f5740002f6300002f6780002f6f40002f7700002f7d00002f8240002
f8500002f87c0002f9d40002fb240002fbfc0002fccc0002fdd40002fe6c
0002fed40002ff600003001c00030174000301d800030224000302580003
02e800030478000304d8000305240003061000030704000307f0000308e4
00030ae800030c0800030d2800030e6c00030f8c000311240003113c0003
11540003116c000311d800031270000312bc00031338000313a000031438
000315140003171c0003193800031ac800031af400031b2000031b540003
1b8800031bc400031c0000031c3c00031c7800031cb400031cf000031d2c
00031d6800031d9400031e7000031ec000032028000320bc000321d00003
2230000322c40003241800032590000326d40003282400032950000329ec
00032af000032c5800032ef80003313c0003327c000333bc000334680003
363c000337b40003380c000338680003393000033a1800033ae000033bc8
00033c8c00033d7000033e3400033f1800033f6000033fac00033ff80003
40440003408c000340dc0003413000034184000341d80003422800034264
000342b0000342fc0003434c0003438c000343e400034428000344700003
44b4000345e800034798000347ec0003484c000348ac000348e800034920
0003495c00034994000349e000034a2c00034ab400034ba800034c9c0003
4cb400034ccc00034db400034ee40003501400035174000352d4000353e8
000355c4000356d4000357ec000358800003591800035a3800035b180003
5c6000035cb000035d2800035e3400035f0000036014000360f000036218
000362c0000363f00003649000036530000365fc00036700000367440003
68dc0003693c00036abc00036b9400036cc000036e0800036f3000037048
0003716800037254000373f400037584000375e800037638000376c80003
7768000377ac00037944000379a400037b2000037b8400037ca000037d3c
00037d9400037e1400037f90000380ac00038260000383cc000384d00003
86740003878800038828000389200003899000038a5c00038ab400038b68
00038bd000038c8c00038ce400038d9c00038ee400038f4c000390a40003
920c0003927c000393a0000393f80003949c00039610000396a8000397a0
000399240003997c00039b6800039ce400039d2800039d6800039dac0003
9e8400039f500003a0280003a1180003a23c0003a2fc0003a40c0003a538
0003a63c0003a6ec0003a7cc0003a91c0003aa100003aafc0003abdc0003
acc40003ad9c0003aeb40003af5c0003b0540003b1340003b2940003b374
0003b4800003b5880003b6c00003b7a80003b8940003b9640003ba840003
bba40003bc780003bd6c0003be8c0003bfa80003c0900003c15c0003c244
0003c37c0003c4f80003c5a00003c5f00003c6e40003c7580003c84c0003
c9600003ca500003cb200003cbfc0003ccb40003cd880003ce8c0003cfcc
0003d0ac0003d1cc0003d3000003d4280003d4fc0003d5e80003d74c0003
d86c0003d95c0003da6c0003db5c0003dc300003dd480003ddfc0003def4
0003dff40003e14c0003e2580003e36c0003e4700003e5a80003e6ac0003
e7a40003e8780003e9b00003eb000003ebd80003eccc0003edf80003ef2c
0003f0340003f1040003f1ec0003f3480003f4780003f57c0003f68c0003
f78c0003f8740003f97c0003fa480003fb380003fbf00003fcfc0003fdd0
0003fedc0001000008cc006a0009006c00080002001000100070000007e8
0d0a00040001000000450342000100000000000000500000000100000000
0001000900500001000000000002000400590001000000000003002401ad
0001000000000004000e01d1000100000000000500080298000100000000
0006000e02a00001000000000007003202ae0001000000000012000e0457
00010000000001000009046500010000000001010010046e000100000000
0102000e047e00010000000001030014048c0001000000000104001204a0
0001000000000105000904b20001000000010004000e01df000100000001
0007002f02e00001000000020004000e01ed0001000000020007003c030f
0001000000030004001301fb00010000000300070030034b000100000004
0004000d020e0001000000040007003a037b0001000000050004000d021b
0001000000050007003603b5000100000006000400110228000100000006
0007003003eb0001000000070007003c041b000100000008000400130239
00010000000900040011024c00010000000d00040010025d00010004000c
0004000e026d00010004001f00040010027b00010005000a0004000d028b
0003000104030002000e01170003000104040002000400ad000300010405
0002000801390003000104060002000600c700030001040700020008006d
0003000104080002000c014900030001040900020008005d00030001040b
0002000c00cd00030001040c00020008006500030001040d000200060155
00030001040e00020010015b000300010410000200120087000300010411
000200080075000300010412000200060099000300010413000200060081
0003000104140002000600d90003000104150002000800df000300010416
0002000e00b90003000104180002000a017f0003000104190002000c00f5
00030001041a00020014012500030001041b00020008018900030001041d
00020006010100030001041e00020006010700030001041f0002000a010d
0003000104210002000a016b0003000104220002000c019100030001042a
0002000601a70003000104390002000a019d00030001043e0002000a0175
00030001080400020004007d000300010809000200080141000300010816
0002000e00e7000300010c010002000800b1000300010c0a0002000e009f
a920313939302d32303036204170706c6520436f6d707574657220496e63
2e20a92031393831204c696e6f7479706520414720a920313939302d3931
205479706520536f6c7574696f6e7320496e632e48656c76657469636142
6f6c640042006f006c00640047007200610073004600650074007430dc30
fc30eb30c97c974f53005600650074004700720061007300730065007400
74006fbcfcb4dcccb4004e0065006700720069007400617c979ad4063906
31064a0636004e00650067007200690074006f004600650064004c006900
680061007600610046006500740042006f006c0064004e00650067007200
690074006f041604380440043d044b04390046006500740e2b0e190e3200
4b0061006c0131006e004e0065006700720065007400610050006f006400
650062006c006a0061006e00690042006f006c00640042006f006c006403
8803bd03c403bf03bd03b105e205d105d4004600e9006c006b00f6007600
e900720054006500620061006c0054006500620061006c0041006c006400
69006e0042006f006c0064041604380440043d04380439092c094b093209
4d092101101ead006d48656c76657469636120426f6c643b2031352e3064
3165333b20323031392d30332d323148656c76657469636120426f6c6448
656c766574696361204772617348656c766574696361204665747448656c
7665746963612067726173736574746f48656c7665746963612076657448
656c7665746963612046657448656c766574696361204e65677269746148
656c7665746963612043617272656761646f48656c766574696361204861
6c7666657448656c766574696361206c696861766148656c766574696361
20c3d3e8cf48656c76657469636120c8d1ccd3cae748656c766574696361
20f2e1e431352e306431653348656c7665746963612d426f6c6448656c76
6574696361206973206120726567697374657265642074726164656d6172
6b206f66204c696e6f7479706520414748656c7665746963612065737420
756e65206d617271756520648e706f738e65206465204c696e6f74797065
20414748656c766574696361206973742065696e2065696e676574726167
656e657320576172656e7a65696368656e20646572204c696e6f74797065
20414748656c766574696361208f20756e206d61726368696f2072656769
73747261746f206469204c696e6f7479706520414748656c766574696361
2069732065656e20676572656769737472656572642068616e64656c736d
65726b2076616e204c696e6f7479706520414748656c766574696361208a
722065747420726567697374726572617420766172756d8a726b6520669a
72204c696e6f7479706520414748656c76657469636120657320756e6120
6d617263612072656769737472616461206465204c696e6f747970652041
4748656c7665746963612065722065742072656769737472657265742076
6172656dbe726b652074696c68bf72656e6465204c696e6f747970652041
4748656c76657469636120426f6c644c6967617475726573436f6d6d6f6e
204c69676174757265734e756d6265722053706163696e6750726f706f72
74696f6e616c204e756d626572734d6f6e6f737061636564204e756d6265
72734e6f204368616e6765000000b800662b01ba000401c600682b01bf01
c80028001f001a0013000b0000006e2bbf01c90025001f001a0013000b00
00006e2b00bf01c5002d0025001a0013000b0000006e2bbf01c6004b003d
0030002200150000006e2bbf01c70026001f001a0013000b0000006e2b00
ba01ca0004006d2bb801c420457d691844b8005c2bb800522bb800482bb8
003e2bb800342bb8002a2bb10840ba019000145df44009011f04000b1fd8
19eebe012e000d00e6012e000d00b0012e400c0d000963833c1f63838348
294109014b00370401001f014500240401001f0144b224ab1fb8013eb224
231fb8013db224231fb80102b2371d1fb80100400937241ffd37621ffc37
b80801401b1ff824931ff724931ff6243f1ff524311fd1371d1fd037471f
cd41b80801b21fcb2ab80201b21fca24b80401400f1fc824811fb537291f
b4373b1fb227b80401b21fb141b80401b61fa437811fa384b80401b21fa2
2ab80401b21fa124b8019ab21fa024b8019ab61f9f243f1f9683b80401b2
1f9527b80401b21f8227b80401b21f7084b80801b21f6fb3b80801b21f6e
b3b802abb61f6d24261f6224b80101400b1f5d246c1f5c24391f5441b801
25b21f4d27b80401b61f4c27cd1f4b41b80401b21f4024b8019ab21f3683
b80401b21f3524b80201b21f3224b8019ab61f2c24bb1f2884b80801b21f
2241b8040140131f20244c1f1d24261f2ca0961f2c245e1f412ab801a8b7
48282a2448279636b801f4b21f4d27b801f4b21f9527b801f4b21f6e27b8
01f4b21f6327bd01a700470029015a00250199b348296fb3b80190b21f83
b3b8019ab348283725b803e840121fb32748278427482736274827252748
2755b80154402c0797076407550733072b072907260721071e071b071408
120810080e080c080a080808060804080208000814b8ffe0402b00000100
140610000001000604000001000410000001001002000001000200000001
000002010802004a00b806008516763f183f123e113946443e113946443e
113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b
2b2b182b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b53
58b0ff1d592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b4b5279b35279eb5645
6523456023456560234560b08b766818b080622020b1eb794565234520b0
03266062636820b003266165b079236544b0eb234420b152564565234520
b003266062636820b003266165b056236544b0522344b10056455458b156
406544b25240524523614459b35045484e456523456023456560234560b0
89766818b080622020b148454565234520b003266062636820b003266165
b045236544b048234420b1504e4565234520b003266062636820b0032661
65b04e236544b0502344b1004e455458b14e406544b25040504523614459
2b2b45695342000000>
[16317 16289 16381 16153 16317 16357 16361 16245 16381 16297 16185 16309 16333
16317 16129 17497 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 6968 37 <000300a10000056105c20009001400290059402ca904a707a71203771687
16021c0a2a010127002a28020b2a27081c100536184f10371f1a2b000b25
27192a2bbc011e00210052012a00182b2b4ef44dfd3c4e10f64dedf4ed12
39003fed3ffd12392ffd393130015d005d01112132363534272623011121
323736353427262700171615140706071e0115140706070e012321112101
c7016a617950456bfebc016a6136625f35600146714444264a7173422a3f
47c171fd6402cc04c2febb495d672117fdc7fe771a3088732b1801033599
5e8387522e2629b27f8368452f362805c200>Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>Helvetica-Bold AddT42Char 
Helvetica-Bold /CharStrings get begin
/B 37 def
end
Helvetica-Bold /Encoding get
dup 66 /B put
pop
end
%ADOEndSubsetFont
/MBMLJA+Helvetica-Bold /Helvetica-Bold findfont ct_VMDictPut/MBMLJA+Helvetica-Bold*1 [66{/.notdef}rp /B 189{/.notdef}rp]MBMLJA+Helvetica-Bold nfMBMLJA+Helvetica-Bold*1 [14 0 0 -14 0 0 ]msf5.05 321.08 mo(B)sh/MBMLJA+Helvetica-Bold*1 uf/MBMLJA+Helvetica-Bold uf/Helvetica-Bold uf/MBMLIZ+Symbol*1 uf/MBMLIZ+Symbol uf/Symbol uf/MBMLIY+Helvetica*1 uf/MBMLIY+Helvetica uf/Helvetica ufgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
