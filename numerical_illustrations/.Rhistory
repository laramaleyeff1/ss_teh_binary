log(0.14/(1-0.14))
log(0.14/(1-0.14)) - log(0.1/(1-0.1))
beta_2 = log(0.14/(1-0.14)) - log(0.1/(1-0.1))
beta_3 = 0
beta_4 = 0.05*beta_2
0.05*beta_2
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(xtable)
results <- list.files(path = "/Users/laramaleyeff/Dropbox/dissertation/paper2/rcode/sims/p2_sims/results",
pattern = "", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
sum_bin$n_sim
results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
summarize(n=n())
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
sum_bin$n_sim
df_output = sum_bin %>%
select(n, icc_x, icc_yx, K, beta_4, power.empirical, power.ss, type.1.error)%>%
gather("type", "power", K, type.1.error,power.empirical, power.ss) %>%
unite(temp, beta_4, type) %>%
spread(temp, power)
mean(abs(sum_bin$power.empirical-sum_bin$power.ss))
IQR(abs(sum_bin$power.empirical-sum_bin$power.ss))
mean(abs(sum_bin$power.empirical-sum_bin$power.ss))
median((sum_bin$power.empirical-sum_bin$power.ss))
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
#sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
sum_bin$n_sim
mean(abs(sum_bin$power.empirical-sum_bin$power.ss))
IQR(abs(sum_bin$power.empirical-sum_bin$power.ss))
mean(abs(sum_bin$power.empirical-sum_bin$power.ss))
median((sum_bin$power.empirical-sum_bin$power.ss))
set.seed(123)
set.seed(123)
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
mean(abs(sum_bin$power.empirical-sum_bin$power.ss))
IQR(abs(sum_bin$power.empirical-sum_bin$power.ss))
mean(abs(sum_bin$power.empirical-sum_bin$power.ss))
median((sum_bin$power.empirical-sum_bin$power.ss))
?sample_n
set.seed(321312)
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
sum_bin$n_sim
df_output = sum_bin %>%
select(n, icc_x, icc_yx, K, beta_4, power.empirical, power.ss, type.1.error)%>%
gather("type", "power", K, type.1.error,power.empirical, power.ss) %>%
unite(temp, beta_4, type) %>%
spread(temp, power)
mean(abs(sum_bin$power.empirical-sum_bin$power.ss))
IQR(abs(sum_bin$power.empirical-sum_bin$power.ss))
mean(abs(sum_bin$power.empirical-sum_bin$power.ss))
median((sum_bin$power.empirical-sum_bin$power.ss))
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
set.seed(321312)
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
# sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
set.seed(1)
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
set.seed(4)
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
set.seed(10000)
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
set.seed(43242)
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
mean((sum_bin$power.empirical-sum_bin$power.ss))
set.seed(3)
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(100) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
mean((sum_bin$power.empirical-sum_bin$power.ss))
set.seed(3)
sum_bin = results %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(1000) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
mean((sum_bin$power.empirical-sum_bin$power.ss))
df_output = sum_bin %>%
select(n, icc_x, icc_yx, K, beta_4, power.empirical, power.ss, type.1.error)%>%
gather("type", "power", K, type.1.error,power.empirical, power.ss) %>%
unite(temp, beta_4, type) %>%
spread(temp, power)
print(xtable(df_output[,c(c(1:4),c(6,4,5,7,10,8,9,11,14,12,13)+1)], digits = c(0,0,2,2, rep(c(0,1,1,1),3))), include.rownames=FALSE)
set.seed(3)
sum_bin = results %>%
filter(n!=30) %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
#sample_n(1000) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
df_output = sum_bin %>%
select(n, icc_x, icc_yx, K, beta_4, power.empirical, power.ss, type.1.error)%>%
gather("type", "power", K, type.1.error,power.empirical, power.ss) %>%
unite(temp, beta_4, type) %>%
spread(temp, power)
print(xtable(df_output[,c(c(1:4),c(6,4,5,7,10,8,9,11,14,12,13)+1)], digits = c(0,0,2,2, rep(c(0,1,1,1),3))), include.rownames=FALSE)
set.seed(3)
sum_bin = results %>%
filter(n!=30) %>%
group_by(n, icc_x, K, beta_4, icc_yx) %>%
sample_n(1000) %>%
dplyr::summarize(power.empirical=sum(p.val <= 0.05)*100/n(),
power.ss=mean(power.ss),
type.1.error = sum(p.val.null <= 0.05)*100/n(),
sd.model = mean(sd.model),
sd.ss = mean(sd.ss),
sigma.gamma.sq.model = mean(sigma.gamma.sq.model),
n_sim=n())
quantile((sum_bin$power.empirical-sum_bin$power.ss), c(0.25,0.75))
mean((sum_bin$power.empirical-sum_bin$power.ss))
df_output = sum_bin %>%
select(n, icc_x, icc_yx, K, beta_4, power.empirical, power.ss, type.1.error)%>%
gather("type", "power", K, type.1.error,power.empirical, power.ss) %>%
unite(temp, beta_4, type) %>%
spread(temp, power)
print(xtable(df_output[,c(c(1:4),c(6,4,5,7,10,8,9,11,14,12,13)+1)], digits = c(0,0,2,2, rep(c(0,1,1,1),3))), include.rownames=FALSE)
